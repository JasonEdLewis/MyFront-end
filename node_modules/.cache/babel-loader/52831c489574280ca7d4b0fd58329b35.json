{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/components/NewPostCard.js\";\nimport React from \"react\";\nimport '../css/newPostCard.css';\nimport { storage } from '../firebase/index';\nimport Loader from '../components/loader';\nimport { connect } from 'react-redux';\nimport { createPost } from '../redux/actions/PostActions'; //  SET UP FETCH POST FOR NEW POST AND CREATE MIGRATTION FOR CAPTION FOR POST AND SET UP TO GO BACK THE HOME PAGE AFTER POST IS FINISHED POSTING\n\nclass NewPostCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      image: null,\n      url: \"\",\n      caption: \"\",\n      loading: false\n    };\n\n    this.selectedFileHander = e => {\n      if (e.target.files[0]) {\n        this.setState({\n          image: e.target.files[0]\n        });\n      }\n\n      ;\n    };\n\n    this.handleSubmit = () => {\n      const image = this.state.image;\n      const uploadTask = storage.ref(\"images/\".concat(image.name)).put(image);\n      uploadTask.on('state_changed', snapshot => {\n        this.setState({\n          loading: true\n        });\n      }, error => {\n        console.log(error);\n      }, () => {\n        storage.ref('images').child(image.name).getDownloadURL().then(url => {\n          console.log(url);\n          this.setState({\n            loading: false,\n            url\n          });\n        }).then(() => {\n          debugger;\n          const _this$state = this.state,\n                url = _this$state.url,\n                caption = _this$state.caption;\n          const _this$props = this.props,\n                userid = _this$props.userid,\n                bach = _this$props.bach;\n          this.props.createPost({\n            user_id: userid,\n            picture: url,\n            likes: 0,\n            caption: caption\n          });\n          this.setState({\n            url: \"\",\n            caption: \"\"\n          });\n        });\n      }); //  this.props.submitPost(this.state.caption)\n      //[funcName].on(progress, error, complete) these are the task for the arguments that '.on()' takes\n    };\n\n    this.handleTextChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  render() {\n    console.log(\"NewPost Card props:\", this.props, \"New card State\", this.state);\n    const url = this.state.url;\n    const _this$props2 = this.props,\n          handleNewPost = _this$props2.handleNewPost,\n          state = _this$props2.state,\n          submitPost = _this$props2.submitPost,\n          userId = _this$props2.userId;\n    return React.createElement(React.Fragment, null, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), this.state.loading ? React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }) : React.createElement(\"p\", {\n      className: \"new-post-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Make New Post\"), React.createElement(\"div\", {\n      className: \"the-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.selectedFileHander,\n      style: {\n        display: \"none\"\n      },\n      ref: fileInput => this.fileInput = fileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"img-box\",\n      onClick: () => this.fileInput.click(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: url || require(\"../img/pic_placeholder.png\"),\n      style: {\n        width: \"286px\",\n        height: \"180px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"post-text-area\",\n      rows: \"5\",\n      cols: \"30\",\n      placeholder: \"#litty #\\uD83D\\uDD25 last night was mad trill\",\n      style: {\n        color: \"light-blue\"\n      },\n      name: \"caption\",\n      value: this.state.caption,\n      onChange: this.handleTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      onClick: this.handleSubmit,\n      id: \"post-submit-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"\\u271A\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userid: state.users.id\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createPost\n})(NewPostCard);","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/components/NewPostCard.js"],"names":["React","storage","Loader","connect","createPost","NewPostCard","Component","state","image","url","caption","loading","selectedFileHander","e","target","files","setState","handleSubmit","uploadTask","ref","name","put","on","snapshot","error","console","log","child","getDownloadURL","then","props","userid","bach","user_id","picture","likes","handleTextChange","value","render","handleNewPost","submitPost","userId","display","fileInput","click","require","width","height","color","mapStateToProps","users","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../css/newPostCard.css';\nimport { storage } from '../firebase/index';\nimport Loader from '../components/loader';\nimport { connect } from 'react-redux';\nimport { createPost } from '../redux/actions/PostActions'\n\n\n\n\n//  SET UP FETCH POST FOR NEW POST AND CREATE MIGRATTION FOR CAPTION FOR POST AND SET UP TO GO BACK THE HOME PAGE AFTER POST IS FINISHED POSTING\n\nclass NewPostCard extends React.Component {\n\n  state = {\n    image: null,\n    url: \"\",\n    caption: \"\",\n    loading: false\n  }\n\n  selectedFileHander = (e) => {\n    if (e.target.files[0]) { this.setState({ image: e.target.files[0] }) };\n\n  }\n  handleSubmit = () => {\n    const { image } = this.state;\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n\n    uploadTask.on('state_changed', (snapshot) => {\n      this.setState({ loading: true })\n    },\n      (error) => {\n        console.log(error);\n\n      },\n      () => {\n        storage.ref('images').child(image.name).getDownloadURL().then(url => {\n          console.log(url)\n          this.setState({ loading: false, url })\n\n        }).then(()=> {\n          debugger\n          const {url, caption} =this.state\n          const { userid, bach } = this.props\n          this.props.createPost({user_id: userid ,picture:url, likes:0, caption: caption})\n          this.setState( {url:\"\", caption:\"\" })\n\n\n        }\n         )\n      })\n\n    //  this.props.submitPost(this.state.caption)\n    //[funcName].on(progress, error, complete) these are the task for the arguments that '.on()' takes\n  }\n  handleTextChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  render() {\n    console.log(\"NewPost Card props:\", this.props, \"New card State\", this.state);\n    const { url } = this.state\n    const { handleNewPost, state, submitPost, userId } = this.props;\n    return (\n      <><br />{this.state.loading ? <Loader /> : <p className=\"new-post-heading\">Make New Post</p>}\n        <div className=\"the-card\">\n\n          <input type=\"file\" onChange={this.selectedFileHander} style={{ display: \"none\" }} ref={fileInput => this.fileInput = fileInput} />\n          <div className=\"img-box\" onClick={() => this.fileInput.click()}>\n\n            <img src={url || require(\"../img/pic_placeholder.png\")} style={{width:\"286px\", height:\"180px\"}} />\n          </div>\n\n          <div>\n            <textarea className=\"post-text-area\" rows=\"5\" cols=\"30\" placeholder=\"#litty #🔥 last night was mad trill\" style={{ color: \"light-blue\" }} name=\"caption\" value={this.state.caption} onChange={this.handleTextChange}></textarea>\n\n            <span></span>\n          </div>\n          <span onClick={this.handleSubmit} id=\"post-submit-plus\">\n            ✚\n          </span>\n\n\n        </div>\n      </>\n    );\n  }\n}\nconst mapStateToProps = state =>{\n  return {\n    userid: state.users.id,\n  }\n}\nexport default  connect(mapStateToProps, { createPost })(NewPostCard);\n"]},"metadata":{},"sourceType":"module"}