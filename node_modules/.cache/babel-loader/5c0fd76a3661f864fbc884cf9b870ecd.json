{"ast":null,"code":"import{REQUESTING,POST_SUCCESS,POST_FAILURE,CREATE_POST,DELETE_LIKE,ADD_LIKE,EDIT_POST_CAPTION,DELETE_POST}from'./types';import axios from'axios';export var getPost=function getPost(){return function(dispatch){debugger;dispatch({type:REQUESTING});axios.get('http://localhost:3000/posts').then(function(post){dispatch({type:POST_SUCCESS,payload:post.data});});};};export var createPost=function createPost(info){return function(dispatch){dispatch({type:REQUESTING});axios.post(\"http://localhost:3000/posts\",info).then(function(post){dispatch({type:CREATE_POST,payload:post.data});console.log(post.data);});};};export var deletePost=function deletePost(id){return function(dispatch){return axios.delete(\"http://localhost:3000/posts/\".concat(id)).then(dispatch({type:DELETE_POST,id:id}));};};export var editCaption=function editCaption(id,info){return function(dispatch){dispatch({type:REQUESTING});return axios.patch(\"http://localhost:3000/posts/\".concat(id),{caption:info}).then(function(post){console.log(post.data);dispatch({type:EDIT_POST_CAPTION,payload:post.data,id:id,requested:false});});};};export var changeLike=function changeLike(id,numLikes,change){return function(dispatch){dispatch({type:REQUESTING});axios.patch(\"http://localhost:3000/posts/\".concat(id),{likes:numLikes}).then(function(data){return console.log(\"From Likes action \",data);},change===\"add\"?dispatch({type:ADD_LIKE,id:id}):dispatch({type:DELETE_LIKE,id:id}));};};","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/redux/actions/PostActions.js"],"names":["REQUESTING","POST_SUCCESS","POST_FAILURE","CREATE_POST","DELETE_LIKE","ADD_LIKE","EDIT_POST_CAPTION","DELETE_POST","axios","getPost","dispatch","type","get","then","post","payload","data","createPost","info","console","log","deletePost","id","delete","editCaption","patch","caption","requested","changeLike","numLikes","change","likes"],"mappings":"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","sourcesContent":["import { REQUESTING, POST_SUCCESS, POST_FAILURE, CREATE_POST, DELETE_LIKE, ADD_LIKE,EDIT_POST_CAPTION, DELETE_POST } from './types';\nimport axios from 'axios'\n\n\nexport const getPost = () => dispatch => {\n    debugger\n    dispatch({ type: REQUESTING })\n    axios.get('http://localhost:3000/posts')\n    .then(post => {\n        dispatch({ type: POST_SUCCESS, payload: post.data})\n    }\n\n    )\n    \n\n}\nexport const createPost = (info) => dispatch => {\n    dispatch   ( { type: REQUESTING} )\n    axios.post(`http://localhost:3000/posts`, info)\n    .then(post => { dispatch( {type:CREATE_POST, payload:post.data } )\n    console.log(post.data)\n    })\n\n}\nexport const deletePost =(id) => dispatch =>{\n    return axios.delete(`http://localhost:3000/posts/${id}`)\n    .then( dispatch ({type:DELETE_POST, id}) )\n\n}\n\nexport const editCaption = (id, info) => dispatch => {\n    dispatch({ type: REQUESTING })\n  return  axios.patch(`http://localhost:3000/posts/${id}`, { caption: info })\n        .then(post => {  console.log(post.data)\n   dispatch({ type: EDIT_POST_CAPTION, payload: post.data,id, requested: false })\n        }\n        \n    )\n\n}\nexport const changeLike = (id, numLikes, change) => dispatch =>{\n    dispatch({ type: REQUESTING })\n     axios.patch(`http://localhost:3000/posts/${id}`,{ likes: numLikes })\n    .then(data => console.log( \"From Likes action \",data),\n    change === \"add\" ? dispatch( { type: ADD_LIKE, id} ) :  dispatch( { type: DELETE_LIKE, id } )\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}