{"ast":null,"code":"import { USER_REQUEST, USER_SUCCESS, USER_FAILURE, GET_ALL, CREATE_USER, UPDATE_USER, DELETE_USER, FINISHED_REQUESTING } from '../actions/types';\nimport axios from 'axios';\nexport const fetchUser = token => async dispatch => {\n  dispatch({\n    type: USER_REQUEST\n  });\n  const config = {\n    headers: {\n      \"Content-Type\": \"Application/json\",\n      Authorization: token\n    }\n  };\n  const user = await axios.get('http://localhost:3000/profile', config);\n  console.log(user.username);\n  !!user ? dispatch({\n    type: USER_SUCCESS,\n    payload: user.data\n  }) : dispatch({\n    type: USER_FAILURE,\n    payload: user.message\n  });\n  !!user && localStorage.setItem(\"currentUser\", user.data.username, 'currentUserId', user.data.id, user.data.bio, user.data.city, user.data.state);\n  return console.log(\"From fetch User in UsersActions\", user.data);\n};\nexport const newUser = info => dispatch => {\n  dispatch({\n    type: USER_REQUEST\n  });\n  return axios.post('http://localhost:3000/signup', info).then(user => dispatch({\n    type: CREATE_USER,\n    payload: user.data,\n    requested: false\n  }));\n};\nexport const deleteUser = id => dispatch => {\n  dispatch({\n    type: USER_REQUEST\n  });\n  localStorage.clear();\n  return axios.delete(\"http://localhost:3000/users/\".concat(id)).then(dispatch({\n    type: DELETE_USER,\n    id,\n    requested: false\n  })).then(dispatch({\n    type: FINISHED_REQUESTING\n  }));\n};","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/redux/actions/UserActions.js"],"names":["USER_REQUEST","USER_SUCCESS","USER_FAILURE","GET_ALL","CREATE_USER","UPDATE_USER","DELETE_USER","FINISHED_REQUESTING","axios","fetchUser","token","dispatch","type","config","headers","Authorization","user","get","console","log","username","payload","data","message","localStorage","setItem","id","bio","city","state","newUser","info","post","then","requested","deleteUser","clear","delete"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,YAAvB,EAAqCC,YAArC,EAAmDC,OAAnD,EAA4DC,WAA5D,EAAyEC,WAAzE,EAAsFC,WAAtF,EAAmGC,mBAAnG,QAA8H,kBAA9H;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW,MAAMC,QAAN,IAAkB;AAClDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEZ;AAAR,GAAD,CAAR;AACA,QAAMa,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAELC,MAAAA,aAAa,EAAEL;AAFV;AADE,GAAf;AAMA,QAAMM,IAAI,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,+BAAV,EAA2CJ,MAA3C,CAAnB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,QAAjB;AACA,GAAC,CAACJ,IAAF,GAASL,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEX,YAAR;AAAsBoB,IAAAA,OAAO,EAAEL,IAAI,CAACM;AAApC,GAAD,CAAjB,GACMX,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEV,YAAR;AAAsBmB,IAAAA,OAAO,EAAEL,IAAI,CAACO;AAApC,GAAD,CADd;AAGA,GAAC,CAACP,IAAF,IAAUQ,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCT,IAAI,CAACM,IAAL,CAAUF,QAA9C,EAAwD,eAAxD,EAAyEJ,IAAI,CAACM,IAAL,CAAUI,EAAnF,EAAuFV,IAAI,CAACM,IAAL,CAAUK,GAAjG,EAAsGX,IAAI,CAACM,IAAL,CAAUM,IAAhH,EAAsHZ,IAAI,CAACM,IAAL,CAAUO,KAAhI,CAAV;AACA,SAAOX,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CH,IAAI,CAACM,IAApD,CAAP;AAEH,CAhBM;AAkBP,OAAO,MAAMQ,OAAO,GAAIC,IAAD,IAAUpB,QAAQ,IAAI;AACzCA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEZ;AAAR,GAAD,CAAR;AACA,SAAOQ,KAAK,CAACwB,IAAN,CAAW,8BAAX,EAA2CD,IAA3C,EAAiDE,IAAjD,CAAsDjB,IAAI,IAAIL,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER,WAAR;AAAqBiB,IAAAA,OAAO,EAAEL,IAAI,CAACM,IAAnC;AAAyCY,IAAAA,SAAS,EAAE;AAApD,GAAD,CAAtE,CAAP;AAEH,CAJM;AAKP,OAAO,MAAMC,UAAU,GAAIT,EAAD,IAAQf,QAAQ,IAAI;AAC1CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEZ;AAAR,GAAD,CAAR;AACAwB,EAAAA,YAAY,CAACY,KAAb;AACA,SAAO5B,KAAK,CAAC6B,MAAN,uCAA4CX,EAA5C,GACFO,IADE,CACGtB,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN,WAAR;AAAqBoB,IAAAA,EAArB;AAAyBQ,IAAAA,SAAS,EAAE;AAApC,GAAD,CADX,EAEFD,IAFE,CAEGtB,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACL;AAAN,GAAD,CAFX,CAAP;AAMH,CATM","sourcesContent":["import { USER_REQUEST, USER_SUCCESS, USER_FAILURE, GET_ALL, CREATE_USER, UPDATE_USER, DELETE_USER, FINISHED_REQUESTING } from '../actions/types';\nimport axios from 'axios';\n\n\nexport const fetchUser = (token) => async dispatch => {\n    dispatch({ type: USER_REQUEST })\n    const config = {\n        headers: {\n            \"Content-Type\": \"Application/json\",\n            Authorization: token\n        }\n    }\n    const user = await axios.get('http://localhost:3000/profile', config);\n    console.log(user.username)\n    !!user ? dispatch({ type: USER_SUCCESS, payload: user.data })\n        : dispatch({ type: USER_FAILURE, payload: user.message })\n\n    !!user && localStorage.setItem(\"currentUser\", user.data.username, 'currentUserId', user.data.id, user.data.bio, user.data.city, user.data.state)\n    return console.log(\"From fetch User in UsersActions\", user.data);\n\n}\n\nexport const newUser = (info) => dispatch => {\n    dispatch({ type: USER_REQUEST })\n    return axios.post('http://localhost:3000/signup', info).then(user => dispatch({ type: CREATE_USER, payload: user.data, requested: false })\n    )\n}\nexport const deleteUser = (id) => dispatch => {\n    dispatch({ type: USER_REQUEST })\n    localStorage.clear()\n    return axios.delete(`http://localhost:3000/users/${id}`)\n        .then(dispatch({ type: DELETE_USER, id, requested: false }))\n        .then(dispatch({type:FINISHED_REQUESTING}))\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}