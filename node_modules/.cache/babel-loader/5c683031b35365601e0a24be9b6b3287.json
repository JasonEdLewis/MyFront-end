{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js\";\nimport React from \"react\";\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Jack from \"./img/jack.jpg\";\nimport { connect } from 'react-redux';\nimport { getPost } from './redux/actions/PostActions';\nimport { fetchUser } from './redux/actions/UserActions';\nimport { addComment } from './redux/actions/CommentsActions';\nimport Loader from './components/loader';\nimport { Card, Form, Navbar, Button, NavbarBrand, Nav } from \"react-bootstrap\";\n\nclass HomeContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showCommentField: false,\n      comment: \"\",\n      post_id: \"\",\n      Picture: \"\",\n      caption: \"\",\n      likes: 0,\n      page: \"thePost\"\n    };\n\n    this.resetCommentLength = () => {};\n\n    this.handleComment = e => {\n      // console.log(e.target.value);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.showCommentField = () => {\n      return this.setState({\n        showCommentField: !this.state.showCommentField\n      });\n    };\n\n    this.thePost = () => {\n      const posts = this.props.posts;\n      return posts && posts.length > 0 ? posts.map(post => React.createElement(Postcard, {\n        post: post,\n        commentLen: this.state.comment.length,\n        toggleCommentField: this.showCommentField,\n        commentFieldStatus: this.state.showCommentField,\n        id: post.id,\n        submitComment: () => this.submitComment(post.id, post.userId),\n        handleComment: this.handleComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })) : console.log(\"The Post didnt work, here are the props:\", this.props);\n    };\n\n    this.handleNewPostClick = () => {\n      this.setState({\n        newPost: !this.state.newPost\n      });\n    };\n\n    this.theNewPostCard = props => {\n      const userid = this.props.userid;\n      return React.createElement(NewPostCard, {\n        handleNewPost: this.handleNewPost,\n        submitPost: () => userid,\n        state: this.state,\n        userId: userid,\n        back: this.returnToThePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    };\n\n    this.myProfile = () => {\n      this.props.history.push('/profile');\n    };\n\n    this.returnToThePost = () => {\n      this.setState({\n        page: \"thePost\"\n      });\n    };\n\n    this.submitComment = postId => {\n      const _this$props = this.props,\n            userid = _this$props.userid,\n            addComment = _this$props.addComment;\n      const _this$state = this.state,\n            userId = _this$state.userId,\n            comment = _this$state.comment;\n      console.log(\"Post id\", postId, \"User is:\", userId, \"comment: \", this.state.comment);\n      const body = {\n        post_id: postId,\n        content: comment,\n        followee_id: userid\n      };\n      addComment(body);\n      this.setState({\n        comment: \" \"\n      });\n    };\n\n    this.handleNewPost = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.pageToRender = () => {\n      switch (this.state.page) {\n        case \"thePost\":\n          return this.thePost();\n\n        case \"newPost\":\n          return this.theNewPostCard();\n\n        case \"profile\":\n          return this.myProfile();\n      }\n    };\n\n    this.logout = () => {\n      localStorage.clear();\n      this.props.history.push('/');\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Home Page CONTAINER MOUNTED\");\n    const _this$props2 = this.props,\n          fetchUser = _this$props2.fetchUser,\n          getPost = _this$props2.getPost;\n    fetchUser(localStorage.token);\n    getPost();\n  }\n\n  render() {\n    // debugger\n    console.log(\"Home Container props\", this.props);\n    const _this$props3 = this.props,\n          fposts = _this$props3.fposts,\n          user = _this$props3.user,\n          userId = _this$props3.userId,\n          history = _this$props3.history;\n    return React.createElement(\"div\", {\n      className: \"Home-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Homepage-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"jays-gram\",\n      onClick: () => this.returnToThePost(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.props.user, \"s'taGram \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"camera\",\n      id: this.state.id,\n      onClick: () => this.setState({\n        page: \"newPost\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \" \\uD83D\\uDCF8 \")), React.createElement(\"div\", {\n      className: \"thumb-and-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"thumbnail\",\n      onClick: () => this.setState({\n        page: \"profile\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: Jack,\n      id: \"thumbnail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      className: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.logout,\n      id: \"logout-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \" logout  \")))), React.createElement(\"div\", {\n      className: \"Home-Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.props.postRequest && React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), this.pageToRender(), this.state.page !== \"newPost\" ? React.createElement(\"div\", {\n      className: \"Home-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Copyright \\xA9 2019 Jaystagram\") : React.createElement(React.Fragment, null)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    posts: state.post.posts.data,\n    postRequested: state.post.requested\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPost,\n  fetchUser,\n  addComment\n})(HomeContainer);","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js"],"names":["React","Postcard","NewPostCard","Jack","connect","getPost","fetchUser","addComment","Loader","Card","Form","Navbar","Button","NavbarBrand","Nav","HomeContainer","Component","state","showCommentField","comment","post_id","Picture","caption","likes","page","resetCommentLength","handleComment","e","setState","target","name","value","thePost","posts","props","length","map","post","id","submitComment","userId","console","log","handleNewPostClick","newPost","theNewPostCard","userid","handleNewPost","returnToThePost","myProfile","history","push","postId","body","content","followee_id","pageToRender","logout","localStorage","clear","componentDidMount","token","render","fposts","user","postRequest","mapStateToProps","users","username","data","postRequested","requested"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Jack from \"./img/jack.jpg\";\nimport { connect } from 'react-redux';\nimport { getPost } from './redux/actions/PostActions';\nimport { fetchUser } from './redux/actions/UserActions';\nimport { addComment } from './redux/actions/CommentsActions'\nimport Loader from './components/loader'\n\n\nimport { Card, Form, Navbar, Button, NavbarBrand, Nav } from \"react-bootstrap\";\n\nclass HomeContainer extends React.Component {\n  state = {\n    showCommentField: false,\n    comment: \"\",\n    post_id: \"\",\n    Picture: \"\",\n    caption: \"\",\n    likes: 0,\n    page: \"thePost\"\n\n  };\n\n  componentDidMount() {\n    console.log(\"Home Page CONTAINER MOUNTED\")\n    const { fetchUser, getPost } = this.props\n    fetchUser(localStorage.token)\n    getPost()\n\n  }\n  resetCommentLength=()=>{\n    \n  }\n  handleComment = e => {\n    // console.log(e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  showCommentField = () => {\n    return this.setState({ showCommentField: !this.state.showCommentField })\n  }\n  thePost = () => {\n    const { posts } = this.props\n    return posts && posts.length > 0 ? posts.map(post => (\n      <Postcard\n        post={post}\n        commentLen={this.state.comment.length}\n        toggleCommentField={this.showCommentField}\n        commentFieldStatus={this.state.showCommentField}\n        id={post.id}\n        submitComment={() => this.submitComment(post.id, post.userId)}\n        handleComment={this.handleComment}\n      /> \n    )) : console.log( \"The Post didnt work, here are the props:\", this.props)\n  };\n\n  // SUBMIT THE COMMENT /FETCH POST\n  handleNewPostClick = () => {\n    this.setState({ newPost: !this.state.newPost });\n  };\n\n  theNewPostCard = props => {\n    const { userid } = this.props\n    return (\n      <NewPostCard\n        handleNewPost={this.handleNewPost}\n        submitPost={() => (userid)}\n        state={this.state}\n        userId={userid}\n        back={this.returnToThePost}\n\n      />\n    );\n  };\n\n  myProfile = () => {\n    this.props.history.push('/profile')\n\n  };\n\n\n  returnToThePost = () => {\n    this.setState({ page: \"thePost\" })\n  }\n  submitComment = (postId) => {\n    const { userid, addComment } = this.props\n    const { userId, comment } = this.state\n    console.log(\n      \"Post id\",\n      postId,\n      \"User is:\",\n      userId,\n      \"comment: \",\n      this.state.comment\n    );\n    const body = {\n      post_id: postId,\n      content: comment,\n      followee_id: userid\n    }\n    addComment(body)\n    this.setState({ comment: \" \" })\n  };\n\n  handleNewPost = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  pageToRender = () => {\n\n    switch (this.state.page) {\n      case \"thePost\":\n        return this.thePost()\n      case \"newPost\":\n        return this.theNewPostCard()\n      case \"profile\":\n        return this.myProfile()\n    }\n  }\n  logout = () => {\n    localStorage.clear()\n    this.props.history.push('/')\n  }\n\n\n  render() {\n    // debugger\n    console.log(\"Home Container props\", this.props);\n\n    const { fposts, user, userId, history } = this.props;\n\n    return (\n      <div className=\"Home-Container\">\n        <div className=\"Homepage-nav\">\n\n          <div id=\"jays-gram\" onClick={() => this.returnToThePost()}><span >{this.props.user}s'taGram </span></div>\n\n          <div>\n            <span className=\"camera\" id={this.state.id} onClick={() => this.setState({ page: \"newPost\" })}> 📸 </span>\n          </div>\n\n          <div className=\"thumb-and-button\">\n            <div className=\"thumbnail\" onClick={() => this.setState({ page: \"profile\" })}><img src={Jack} id='thumbnail' /> </div>\n            <div className=\"logout\"><span onClick={this.logout} id=\"logout-button\" > logout  </span></div>\n\n\n\n          </div>\n\n\n        </div>\n        <div className=\"Home-Content\">\n          {this.props.postRequest && <Loader />}\n          {this.pageToRender()}\n          {this.state.page !== \"newPost\" ? <div className=\"Home-footer\">Copyright &copy; 2019 Jaystagram</div> : <></>}\n        </div>\n      </div>\n\n\n\n    );\n  }\n\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    posts: state.post.posts.data,\n    postRequested: state.post.requested\n  }\n}\n\nexport default connect(mapStateToProps, { getPost, fetchUser, addComment })(HomeContainer);\n\n"]},"metadata":{},"sourceType":"module"}