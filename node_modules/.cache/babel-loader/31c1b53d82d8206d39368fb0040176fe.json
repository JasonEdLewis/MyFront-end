{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js\";\nimport React from \"react\";\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Follows from './components/Follows';\nimport { getFollows } from './redux/actions/FollowActions';\nimport { connect } from 'react-redux';\nimport { getPost, editCaption } from './redux/actions/PostActions';\nimport { fetchUser, fetchAllUsers } from './redux/actions/UserActions';\nimport { addComment, deleteComment } from './redux/actions/CommentsActions';\nimport { changeLike } from './redux/actions/PostActions';\nimport { logout, notRequesting } from './redux/actions/LoginActions';\nimport Loader from './components/loader';\n\nclass HomeContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showCommentField: false,\n      comment: \"\",\n      post_id: \"\",\n      Picture: \"\",\n      caption: \"\",\n      likes: 0,\n      page: \"thePost\",\n      editingCaption: false,\n      likedPosts: [],\n      requesting: false\n    };\n\n    this.submitComment = postId => {\n      const _this$props = this.props,\n            userid = _this$props.userid,\n            addComment = _this$props.addComment,\n            user = _this$props.user,\n            requestedPost = _this$props.requestedPost;\n      const _this$state = this.state,\n            userId = _this$state.userId,\n            comment = _this$state.comment;\n      console.log(\"Post_id\", postId, \"User is:\", user, \"comment: \", this.state.comment);\n      const body = {\n        post_id: postId,\n        content: comment,\n        followee_id: userid\n      };\n      addComment(body);\n      !requestedPost && this.setState({\n        comment: \" \",\n        showCommentField: false\n      });\n    };\n\n    this.resetCommentLength = () => {\n      this.setState({\n        comment: \"\"\n      });\n    };\n\n    this.handleComment = e => {\n      // console.log(e.target.value);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.deleteComment = com => {\n      const deleteComment = this.props.deleteComment; // console.log(com.id, com.post_id, com.followee_id, com.content)\n\n      deleteComment(com.id, com.post_id, com.followee_id, com.content);\n    };\n\n    this.getCapField = () => {\n      this.setState({\n        editingCaption: !this.state.editingCaption\n      });\n    };\n\n    this.handleEditSubmit = id => {\n      this.props.editCaption(id, this.state.comment);\n      this.setState({\n        comment: \"\"\n      });\n      this.getCapField();\n    };\n\n    this.showCommentField = () => {\n      return this.setState({\n        showCommentField: !this.state.showCommentField\n      });\n    };\n\n    this.handleLikes = id => {\n      const likedPosts = this.state.likedPosts;\n\n      if (likedPosts.includes(id)) {}\n    };\n\n    this.addLike = (id, like) => {\n      // this.setState({ liked: !this.state.liked })\n      const numLikes = like + 1;\n      this.props.changeLike(id, numLikes, \"add\");\n    };\n\n    this.deleteLike = (id, like) => {\n      // this.setState({ liked: !this.state.liked })\n      const numLikes = like - 1;\n      this.props.changeLike(id, numLikes, \"\");\n    };\n\n    this.thePost = () => {\n      const _this$props2 = this.props,\n            posts = _this$props2.posts,\n            users = _this$props2.users;\n      const _this$state2 = this.state,\n            comment = _this$state2.comment,\n            showCommentField = _this$state2.showCommentField,\n            editingCaption = _this$state2.editingCaption,\n            likedPosts = _this$state2.likedPosts;\n      return posts && posts.length > 0 ? posts.map(post => React.createElement(Postcard, {\n        users: users,\n        post: post,\n        commentLen: comment.length,\n        toggleCommentField: this.showCommentField,\n        commentFieldStatus: showCommentField,\n        id: post.id,\n        resetComment: this.resetCommentLength,\n        submitComment: () => this.submitComment(post.id, post.userId),\n        handleComment: this.handleComment,\n        getCapEditField: this.getCapField,\n        editCapStatus: editingCaption,\n        submitCapEdit: this.handleEditSubmit,\n        addLike: this.addLike,\n        disLike: this.deleteLike,\n        liked: likedPosts,\n        commentors: this.theUsers,\n        deleteComment: this.deleteComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })) : console.log(\"The Post didnt work, here are the props:\", this.props);\n    };\n\n    this.handleNewPostClick = () => {\n      this.setState({\n        newPost: !this.state.newPost\n      });\n    };\n\n    this.theNewPostCard = props => {\n      const userid = this.props.userid;\n      return React.createElement(NewPostCard, {\n        back: this.returnToThePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      });\n    };\n\n    this.myProfile = () => {\n      this.props.history.push('/profile');\n    };\n\n    this.returnToThePost = () => {\n      this.setState({\n        page: \"thePost\"\n      });\n    };\n\n    this.handleNewPost = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.pageToRender = () => {\n      switch (this.state.page) {\n        case \"thePost\":\n          return this.thePost();\n\n        case \"newPost\":\n          return this.theNewPostCard();\n\n        case \"profile\":\n          return this.myProfile();\n      }\n    };\n\n    this.appLogout = () => {\n      const logout = this.props.logout;\n      logout();\n      localStorage.clear();\n      localStorage.length === 0 && this.returnToLogoutPage();\n    };\n\n    this.returnToLogoutPage = () => {\n      const _this$props3 = this.props,\n            requestedLogin = _this$props3.requestedLogin,\n            logout = _this$props3.logout;\n      logout();\n      this.props.history.push('/');\n    };\n\n    this.theUsers = () => {\n      const users = this.props.users;\n      const commentor = {};\n\n      if (!!users) {\n        this.props.users.forEach(user => commentor[user.id] = user.username);\n        return commentor;\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"HOME CONTAINER\");\n    const history = this.props.history;\n    !localStorage.token && history.push('/');\n  } // COMMENTS //\n\n\n  render() {\n    // debugger\n    console.log(\"Home Container props\", this.props);\n    const _this$props4 = this.props,\n          fposts = _this$props4.fposts,\n          user = _this$props4.user,\n          userId = _this$props4.userId,\n          history = _this$props4.history,\n          requestedLogin = _this$props4.requestedLogin,\n          picture = _this$props4.picture;\n    const requesting = this.state.requesting;\n    this.theUsers();\n    return React.createElement(\"div\", {\n      className: \"Home-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(Follows, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Homepage-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"jays-gram\",\n      onClick: () => this.returnToThePost(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, this.props.user, \"s'taGram \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"camera\",\n      id: this.state.id,\n      onClick: () => this.setState({\n        page: \"newPost\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \" \\uD83D\\uDCF8 \")), React.createElement(\"div\", {\n      className: \"thumb-and-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"thumbnail\",\n      onClick: () => this.setState({\n        page: \"profile\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: picture,\n      id: \"thumbnail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      className: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      onClick: this.appLogout,\n      id: \"logout-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \" logout  \")))), React.createElement(\"div\", {\n      className: !localStorage.token ? \"loading \" : \"Home-Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, this.pageToRender(), this.state.page !== \"newPost\" ? React.createElement(\"div\", {\n      className: \"Home-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Copyright \\xA9 2019 Jaystagram\") : React.createElement(React.Fragment, null)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    picture: state.users.picture,\n    users: state.users.all,\n    posts: state.post.posts,\n    requestedPost: state.post.requested,\n    requestedLogin: state.login.requested\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getFollows,\n  getPost,\n  fetchAllUsers,\n  fetchUser,\n  addComment,\n  editCaption,\n  changeLike,\n  logout,\n  notRequesting,\n  deleteComment\n})(HomeContainer);","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js"],"names":["React","Postcard","NewPostCard","Follows","getFollows","connect","getPost","editCaption","fetchUser","fetchAllUsers","addComment","deleteComment","changeLike","logout","notRequesting","Loader","HomeContainer","Component","state","showCommentField","comment","post_id","Picture","caption","likes","page","editingCaption","likedPosts","requesting","submitComment","postId","props","userid","user","requestedPost","userId","console","log","body","content","followee_id","setState","resetCommentLength","handleComment","e","target","name","value","com","id","getCapField","handleEditSubmit","handleLikes","includes","addLike","like","numLikes","deleteLike","thePost","posts","users","length","map","post","theUsers","handleNewPostClick","newPost","theNewPostCard","returnToThePost","myProfile","history","push","handleNewPost","pageToRender","appLogout","localStorage","clear","returnToLogoutPage","requestedLogin","commentor","forEach","username","componentDidMount","token","render","fposts","picture","mapStateToProps","all","requested","login"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Follows from './components/Follows';\nimport { getFollows } from './redux/actions/FollowActions';\nimport { connect } from 'react-redux';\nimport { getPost, editCaption } from './redux/actions/PostActions';\nimport { fetchUser, fetchAllUsers } from './redux/actions/UserActions';\nimport { addComment,deleteComment  } from './redux/actions/CommentsActions';\nimport { changeLike } from './redux/actions/PostActions';\nimport { logout, notRequesting } from './redux/actions/LoginActions';\nimport Loader from './components/loader';\n\n\nclass HomeContainer extends React.Component {\n  state = {\n    showCommentField: false,\n    comment: \"\",\n    post_id: \"\",\n    Picture: \"\",\n    caption: \"\",\n    likes: 0,\n    page: \"thePost\",\n    editingCaption: false,\n    likedPosts: [],\n    requesting: false\n\n\n  };\n\n  componentDidMount() {\n\n    console.log(\"HOME CONTAINER\")\n    const {  history } = this.props\n   \n    !localStorage.token && history.push('/')\n\n  }\n\n                              // COMMENTS //\n\n\n  submitComment = (postId) => {\n    const { userid, addComment, user, requestedPost } = this.props\n    const { userId, comment } = this.state\n    console.log(\n      \"Post_id\",\n      postId,\n      \"User is:\",\n      user,\n      \"comment: \",\n      this.state.comment\n    );\n    const body = {\n      post_id: postId,\n      content: comment,\n      followee_id: userid\n    }\n    addComment(body)\n    !requestedPost && this.setState({ comment: \" \", showCommentField: false })\n  };\n\n\n  resetCommentLength = () => {\n    this.setState({ comment: \"\" })\n  }\n  handleComment = e => {\n    // console.log(e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n\n  deleteComment = (com) => {\n    const {deleteComment  } = this.props\n   \n    // console.log(com.id, com.post_id, com.followee_id, com.content)\n    deleteComment(com.id, com.post_id, com.followee_id, com.content)\n\n  }\n                            // EDIT CAPTION\n\n  getCapField = () => {\n    this.setState({ editingCaption: !this.state.editingCaption })\n  }\n  handleEditSubmit = (id) => {\n    this.props.editCaption(id, this.state.comment)\n    this.setState({ comment: \"\" })\n    this.getCapField()\n  }\n  showCommentField = () => {\n    return this.setState({ showCommentField: !this.state.showCommentField })\n  }\n\n\n                               // LIKES //\n\n  handleLikes =(id)=>{\n    const {likedPosts } = this.state\n    if(likedPosts.includes(id)){\n      \n    }\n\n  }\n\n  addLike = (id, like) => {\n\n    // this.setState({ liked: !this.state.liked })\n    const numLikes = like + 1\n    this.props.changeLike(id, numLikes, \"add\")\n  }\n  deleteLike = (id, like) => {\n    // this.setState({ liked: !this.state.liked })\n    const numLikes = like - 1\n    this.props.changeLike(id, numLikes, \"\")\n  }\n\n\n                                  // POST STUFF  //\n\n\n  thePost = () => {\n    const { posts, users } = this.props\n    const { comment, showCommentField, editingCaption, likedPosts } = this.state\n    return posts && posts.length > 0 ? posts.map(post => (\n\n      <Postcard\n        users={users}\n        post={post}\n        commentLen={comment.length}\n        toggleCommentField={this.showCommentField}\n        commentFieldStatus={showCommentField}\n        id={post.id}\n        resetComment={this.resetCommentLength}\n        submitComment={() => this.submitComment(post.id, post.userId)}\n        handleComment={this.handleComment}\n        getCapEditField={this.getCapField}\n        editCapStatus={editingCaption}\n        submitCapEdit={this.handleEditSubmit}\n        addLike={this.addLike}\n        disLike={this.deleteLike}\n        liked={likedPosts}\n        commentors={this.theUsers}\n        deleteComment={this.deleteComment}\n      />\n    )) : console.log(\"The Post didnt work, here are the props:\", this.props)\n  };\n\n\n\n  // NEW POST STUFF \n  // SUBMIT THE COMMENT /FETCH POST\n  handleNewPostClick = () => {\n    this.setState({ newPost: !this.state.newPost });\n  };\n\n  theNewPostCard = props => {\n    const { userid } = this.props\n    return (\n      <NewPostCard\n        back={this.returnToThePost}\n      />\n    );\n  };\n\n  myProfile = () => {\n    this.props.history.push('/profile')\n  };\n\n\n  returnToThePost = () => {\n    this.setState({ page: \"thePost\" })\n  }\n\n\n  handleNewPost = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  pageToRender = () => {\n\n    switch (this.state.page) {\n      case \"thePost\":\n        return this.thePost()\n      case \"newPost\":\n        return this.theNewPostCard()\n      case \"profile\":\n        return this.myProfile()\n    }\n  }\n\n  // LOGOUT //\n\n  appLogout = () => {\n    const { logout } = this.props\n    logout()\n    localStorage.clear()\n    localStorage.length === 0 && this.returnToLogoutPage()\n\n  }\n\n  returnToLogoutPage = () => {\n    const { requestedLogin, logout } = this.props\n    logout()\n    this.props.history.push('/')\n  }\n  theUsers = () => {\n    const { users } = this.props\n    const commentor = {}\n    if (!!users) {\n      this.props.users.forEach(user => commentor[user.id] = user.username)\n      return commentor\n    }\n  }\n\n  render() {\n    // debugger\n    console.log(\"Home Container props\", this.props);\n\n    const { fposts, user, userId, history, requestedLogin, picture } = this.props;\n    const { requesting } = this.state\n    this.theUsers()\n\n    return (\n      <div className=\"Home-Container\">\n        <Follows />\n        <div className=\"Homepage-nav\">\n\n          <div id=\"jays-gram\" onClick={() => this.returnToThePost()}><span >{this.props.user}s'taGram </span></div>\n\n          <div>\n            <p className=\"camera\" id={this.state.id} onClick={() => this.setState({ page: \"newPost\" })}> 📸 </p>\n          </div>\n\n          <div className=\"thumb-and-button\">\n            <div className=\"thumbnail\" onClick={() => this.setState({ page: \"profile\" })}><img src={picture} id='thumbnail' /> </div>\n            <div className=\"logout\"><p onClick={this.appLogout} id=\"logout-button\" > logout  </p></div>\n\n\n\n          </div>\n\n\n        </div>\n\n        <div className={!localStorage.token ? \"loading \" : \"Home-Content\"}>\n          {}\n          {this.pageToRender()}\n          {this.state.page !== \"newPost\" ? <div className=\"Home-footer\">Copyright &copy; 2019 Jaystagram</div> : <></>}\n        </div>\n      </div>\n\n\n\n    );\n  }\n\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    picture: state.users.picture,\n    users: state.users.all,\n    posts: state.post.posts,\n    requestedPost: state.post.requested,\n    requestedLogin: state.login.requested\n  }\n}\n\nexport default connect(mapStateToProps, { getFollows, getPost, fetchAllUsers, fetchUser, addComment, editCaption, changeLike, logout, notRequesting,deleteComment  })(HomeContainer);\n\n\n"]},"metadata":{},"sourceType":"module"}