{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/components/PostCard.js\";\nimport React from \"react\";\nimport '../css/PostCard.css';\nimport '../css/Profile.css';\nimport placeholder from '../img/placeHolder.png';\nimport { connect } from 'react-redux';\nimport { deleteFollow, createFollow } from '../redux/actions/FollowActions';\nimport Loader from '../components/loader';\n\nconst PostCard = props => {\n  const post = props.post,\n        user = props.user;\n\n  const comment = () => {\n    const text = post.comments;\n\n    if (text) {\n      return text.map(t => {\n        // console.log(\"comments\", t)\n        return React.createElement(\"p\", {\n          className: \"li-style\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, !!t.followee_id ? \"\".concat(props.commentors()[t.followee_id.toString()], \" :  \") : \"\".concat(props.commentors()[props.userid], \" :  \")), t.content);\n      });\n    } else {\n      return React.createElement(\"h6\", {\n        style: {\n          color: \"light-grey\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Be the first to comment\");\n    }\n  };\n\n  const activeComment = e => {\n    console.log(e.target.id);\n    e.target.id === e.target.parentElement.parentElement.parentElement.id && props.toggleCommentField();\n  };\n\n  const whichUser = () => {\n    return post.user.id !== props.userid ? post.user.username : user;\n  };\n\n  const clearCommentBox = e => {\n    const commentFieldStatus = props.commentFieldStatus,\n          resetComment = props.resetComment,\n          editCapStatus = props.editCapStatus,\n          getCapEditField = props.getCapEditField;\n\n    if (props.commentLen || commentFieldStatus) {\n      activeComment(e);\n      resetComment();\n    } else if (editCapStatus && e.target.id !== \"edit-caption-input\") {\n      return getCapEditField();\n    }\n  };\n\n  const editCapInput = cap => {\n    return React.createElement(\"input\", {\n      type: \"text\",\n      value: props.comment,\n      onChange: props.handleComment,\n      placeholder: \" \".concat(cap),\n      id: \"edit-caption-input\",\n      name: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n  };\n\n  const areFriends = postuser => {\n    const follows = props.follows,\n          userid = props.userid,\n          deleteFollow = props.deleteFollow,\n          createFollow = props.createFollow;\n\n    if (follows && postuser !== userid) {\n      const theFollow = follows.find(follow => follow.followee_id === postuser && follow.follower_id === userid);\n\n      if (postuser === userid) {\n        return \"\";\n      } else if (theFollow) {\n        return React.createElement(\"button\", {\n          id: \"were-friends\",\n          onClick: () => deleteFollow(theFollow.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \" \\uD83E\\uDD1D\");\n      } else {\n        return React.createElement(\"button\", {\n          id: \"add-friend\",\n          onClick: () => {\n            createFollow(postuser, userid);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \" \\uD83E\\uDD1C\\uD83C\\uDFFD\\uD83D\\uDCA5\\uD83E\\uDD1B\\uD83C\\uDFFB\");\n      }\n    }\n  };\n\n  console.log(\"Post card props\", props.status);\n  return React.createElement(\"div\", {\n    className: \"post-card-div\",\n    id: \"\".concat(post.id),\n    onClick: e => console.log(e.target.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: post.id,\n    className: \"post-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, areFriends(post.user_id), React.createElement(\"span\", {\n    className: \"name-span-style\",\n    onClick: () => {\n      console.log(post.user.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, post.user.username || user)), React.createElement(\"div\", {\n    className: \"img-div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"image\",\n    src: post.picture || require('../img/placeHolder.png'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"comments-div\",\n    id: post.id,\n    onClick: e => clearCommentBox(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, props.liked ? React.createElement(\"span\", {\n    id: \"on-heart\",\n    onClick: () => props.disLike(post.id, post.likes),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"\\u2764\\uFE0F\") : React.createElement(\"span\", {\n    id: \"off-heart\",\n    onClick: () => props.addLike(post.id, post.likes),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"\\u2661\"), React.createElement(\"div\", {\n    id: \"comments-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    id: post.id,\n    className: \"pen\",\n    onClick: e => activeComment(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, props.commentFieldStatus ? \"💬\" : \"🖋 \"), React.createElement(\"span\", {\n    className: \"likes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Likes: \", post.likes)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"ul-style\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"post-caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    id: \"name-cap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \" \".concat(whichUser()), \" : \")), \" \", props.editCapStatus ? editCapInput(post.caption) : post.caption, \" \", props.editCapStatus ? React.createElement(\"span\", {\n    id: \"submit-cap-edit\",\n    onClick: () => props.submitCapEdit(post.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"  \\u2B06\\uFE0F \") : React.createElement(\"span\", {\n    id: \"edit-caption\",\n    onClick: () => props.getCapEditField(post.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"\\uD83D\\uDD8B\"), \" \"), comment()), props.commentFieldStatus ? React.createElement(\"input\", {\n    size: \"sm\",\n    type: \"text\",\n    name: \"comment\",\n    value: props.comment,\n    onChange: props.handleComment,\n    placeholder: \"comment\",\n    className: \"comment-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), props.commentLen > 0 && !props.editCapStatus && React.createElement(\"span\", {\n    onClick: props.submitComment,\n    id: \"post-span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"\\u2B06\\uFE0F\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    follows: state.follows.follows,\n    status: state.post.requested\n  };\n};\n\nexport default connect(mapStateToProps, {\n  deleteFollow,\n  createFollow\n})(PostCard);","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/components/PostCard.js"],"names":["React","placeholder","connect","deleteFollow","createFollow","Loader","PostCard","props","post","user","comment","text","comments","map","t","followee_id","commentors","toString","userid","content","color","activeComment","e","console","log","target","id","parentElement","toggleCommentField","whichUser","username","clearCommentBox","commentFieldStatus","resetComment","editCapStatus","getCapEditField","commentLen","editCapInput","cap","handleComment","areFriends","postuser","follows","theFollow","find","follow","follower_id","status","user_id","picture","require","liked","disLike","likes","addLike","caption","submitCapEdit","submitComment","mapStateToProps","state","users","requested"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../css/PostCard.css';\nimport '../css/Profile.css';\nimport placeholder from '../img/placeHolder.png';\nimport { connect } from 'react-redux';\nimport { deleteFollow, createFollow } from '../redux/actions/FollowActions';\nimport Loader from '../components/loader'\n\n\n\n\nconst PostCard = props => {\n\n\n\n  const { post, user } = props;\n\n  const comment = () => {\n\n    const text = post.comments;\n    if (text) {\n      return text.map(t => {\n        // console.log(\"comments\", t)\n        return (<p className='li-style'><strong>\n          {!!t.followee_id ?\n          `${props.commentors()[t.followee_id.toString()]} :  ` :\n          `${props.commentors()[ props.userid]} :  `\n          }\n\n        </strong>{t.content}</p>);\n      });\n    } else {\n      return <h6 style={{ color: \"light-grey\" }}>Be the first to comment</h6>;\n    }\n  };\n\n  const activeComment = (e) => {\n    console.log(e.target.id)\n    e.target.id === e.target.parentElement.parentElement.parentElement.id && props.toggleCommentField()\n\n  }\n\n  const whichUser = () => {\n    return post.user.id !== props.userid ? post.user.username : user\n  }\n  const clearCommentBox = (e) => {\n    const { commentFieldStatus, resetComment, editCapStatus, getCapEditField } = props\n    if (props.commentLen || commentFieldStatus) {\n      activeComment(e); resetComment()\n    }\n    else if (editCapStatus && e.target.id !== \"edit-caption-input\") {\n      return getCapEditField()\n    }\n  }\n  const editCapInput = (cap) => {\n\n    return <input type='text' value={props.comment} onChange={props.handleComment} placeholder={` ${cap}`} id=\"edit-caption-input\" name=\"comment\" />\n  }\n\n\n  const areFriends = (postuser) => {\n\n    const { follows, userid, deleteFollow, createFollow } = props\n    if (follows && postuser !== userid) {\n\n      const theFollow = follows.find(follow => follow.followee_id === postuser && follow.follower_id === userid);\n\n      if (postuser === userid) {\n        return \"\"\n      }\n      else if (theFollow) {\n        return (<button id=\"were-friends\" onClick={() => deleteFollow(theFollow.id)}> 🤝</button>)\n      }\n      else {\n        return <button id=\"add-friend\" onClick={() => { createFollow(postuser, userid) }}\n\n        > 🤜🏽💥🤛🏻</button>\n      }\n\n    }\n  }\n\n\n\n\n  console.log(\"Post card props\", props.status)\n\n  return (\n\n    <div className=\"post-card-div\" id={`${post.id}`} onClick={(e) => console.log(e.target.id)}>\n      <div id={post.id} className=\"post-card\">\n        <div className=\"card-header\">\n\n          {/* REPLACE WITH THE IMAGE ASSOCIATED WITH NAME\n        <img\n          className=\"post-thumbnail\"\n          src={require(\"../img/jack.jpg\")}\n        />  */}\n\n          {areFriends(post.user_id)}\n\n          <span className=\"name-span-style\" onClick={() => { console.log(post.user.id) }}>{post.user.username || user}</span>\n        </div>\n\n        <div className=\"img-div\">\n          <img className=\"image\" src={post.picture || require('../img/placeHolder.png')} />\n        </div>\n\n\n\n        <div className=\"comments-div\" id={post.id} onClick={(e) => clearCommentBox(e)}>\n          {props.liked ? <span id=\"on-heart\" onClick={() => props.disLike(post.id, post.likes)}>❤️</span>\n            :\n            <span id=\"off-heart\" onClick={() => props.addLike(post.id, post.likes)}>♡</span>}\n          <div id='comments-header'>\n            <span id={post.id} className=\"pen\" onClick={(e) => activeComment(e)}\n            >{props.commentFieldStatus ? \"💬\" : \"🖋 \"}</span>\n            <span className=\"likes\" >Likes: {post.likes}</span>\n\n          </div>\n          <br />\n          <div className='ul-style'>\n\n            <p className='post-caption'><span id=\"name-cap\"><strong>{` ${whichUser()}`} : </strong></span> {props.editCapStatus ? editCapInput(post.caption) : post.caption} {props.editCapStatus ? <span id=\"submit-cap-edit\" onClick={() => props.submitCapEdit(post.id)}>  ⬆️ </span> : <span id=\"edit-caption\" onClick={() => props.getCapEditField(post.id)}>🖋</span>} </p>\n\n            {comment()}\n          </div>\n          {props.commentFieldStatus ? <input\n            size=\"sm\"\n            type=\"text\"\n            name=\"comment\"\n            value={props.comment}\n            onChange={props.handleComment}\n            placeholder=\"comment\"\n            className=\"comment-input\"\n          /> : <><br /></>}\n          <br />\n          \n          <br />\n          {props.commentLen > 0 && !props.editCapStatus && <span onClick={props.submitComment}\n            id=\"post-span\">\n            ⬆️\n      </span>}\n\n        </div>\n\n      </div>\n\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    follows: state.follows.follows,\n    status: state.post.requested\n  }\n}\nexport default connect(mapStateToProps, { deleteFollow, createFollow })(PostCard);\n\n"]},"metadata":{},"sourceType":"module"}