{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js\";\nimport React from \"react\";\nimport { match } from 'react';\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Follows from './components/Follows';\nimport { getFollows, createFollow, deleteFollow } from './redux/actions/FollowActions';\nimport { connect } from 'react-redux';\nimport { getPost, editCaption } from './redux/actions/PostActions';\nimport { fetchUser, fetchAllUsers } from './redux/actions/UserActions';\nimport { addComment, deleteComment } from './redux/actions/CommentsActions';\nimport { changeLike } from './redux/actions/PostActions';\nimport { logout, notRequesting } from './redux/actions/LoginActions';\nimport ProfileCard from './components/ProfilePostCard';\nimport Loader from './components/loader';\nimport Bio from './components/UserBio';\n\nclass HomeContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showCommentField: false,\n      comment: \"\",\n      post_id: \"\",\n      Picture: \"\",\n      caption: \"\",\n      likes: 0,\n      page: \"thePost\",\n      likedPosts: [],\n      postRecieveingComment: null,\n      requesting: false,\n      showingUserId: null,\n      showingOne: false,\n      showOneBio: false,\n      postToDelete: 0,\n      show_x: false\n    };\n\n    this.submitComment = postId => {\n      const _this$props = this.props,\n            userid = _this$props.userid,\n            addComment = _this$props.addComment,\n            user = _this$props.user,\n            requestedPost = _this$props.requestedPost;\n      const userId = this.state.userId;\n      const body = {\n        post_id: postId,\n        content: this.state.comment,\n        followee_id: userid\n      };\n      addComment(body);\n      this.resetCommentLength();\n    };\n\n    this.postToCommentOn = id => {\n      this.setState({\n        postRecieveingComment: id\n      });\n    };\n\n    this.resetCommentLength = () => {\n      this.setState({\n        comment: \"\",\n        postRecieveingComment: null\n      });\n    };\n\n    this.handleComment = e => {\n      console.log(this.state.comment, this.state.postId);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.deleteComment = com => {\n      const deleteComment = this.props.deleteComment; // console.log(com.id, com.post_id, com.followee_id, com.content)\n\n      deleteComment(com.id, com.post_id, com.followee_id, com.content);\n    };\n\n    this.getCapField = () => {\n      this.setState({\n        editingCaption: !this.state.editingCaption\n      });\n    };\n\n    this.handleEditSubmit = id => {\n      this.props.editCaption(id, this.state.comment);\n      this.setState({\n        comment: \"\"\n      });\n      this.getCapField();\n    };\n\n    this.showCommentField = () => {\n      return this.setState({\n        showCommentField: !this.state.showCommentField\n      });\n    };\n\n    this.handleLikes = (id, likes) => {\n      const likedPosts = this.state.likedPosts;\n\n      if (likedPosts.includes(id)) {\n        this.deleteLike(id, likes);\n        const likesArr = likedPosts.filter(pId => pId !== id);\n        this.setState({\n          likedPosts: likesArr\n        });\n      } else {\n        this.addLike(id, likes);\n        const newLikes = [...likedPosts, id];\n        this.setState({\n          likedPosts: newLikes\n        });\n      }\n    };\n\n    this.addLike = (id, like) => {\n      // this.setState({ liked: !this.state.liked })\n      const numLikes = like + 1;\n      this.props.changeLike(id, numLikes, \"add\");\n    };\n\n    this.deleteLike = (id, like) => {\n      // this.setState({ liked: !this.state.liked })\n      const numLikes = like - 1;\n      this.props.changeLike(id, numLikes, \"\");\n    };\n\n    this.thePost = () => {\n      const _this$props2 = this.props,\n            posts = _this$props2.posts,\n            users = _this$props2.users,\n            history = _this$props2.history;\n      const _this$state = this.state,\n            comment = _this$state.comment,\n            showCommentField = _this$state.showCommentField,\n            editingCaption = _this$state.editingCaption,\n            likedPosts = _this$state.likedPosts,\n            postToCommentOn = _this$state.postToCommentOn,\n            postRecieveingComment = _this$state.postRecieveingComment;\n      return posts && posts.length > 0 ? posts.map(post => React.createElement(Postcard, {\n        users: users,\n        post: post,\n        history: history,\n        commentLen: comment.length,\n        toggleCommentField: this.showCommentField,\n        commentFieldStatus: showCommentField,\n        yourField: postRecieveingComment,\n        post2comment: this.postToCommentOn,\n        id: post.id,\n        resetComment: this.resetCommentLength,\n        submitComment: () => this.submitComment(post.id, post.userId),\n        handleComment: this.handleComment,\n        handleLikes: this.handleLikes,\n        getCapEditField: this.getCapField,\n        editCapStatus: editingCaption,\n        submitCapEdit: this.handleEditSubmit,\n        addLike: this.addLike,\n        disLike: this.deleteLike,\n        liked: likedPosts,\n        commentors: this.theUsers,\n        deleteComment: this.deleteComment,\n        showThisUser: this.startShowingOneUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })) : console.log(\"The Post didnt work, here are the props:\", this.props);\n    };\n\n    this.handleNewPostClick = () => {\n      this.setState({\n        newPost: !this.state.newPost\n      });\n    };\n\n    this.theNewPostCard = props => {\n      const userid = this.props.userid;\n      return React.createElement(NewPostCard, {\n        back: this.returnToThePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      });\n    };\n\n    this.myProfile = () => {\n      this.props.history.push('/profile');\n    };\n\n    this.returnToThePost = () => {\n      this.setState({\n        page: \"thePost\",\n        showingOne: false\n      });\n    };\n\n    this.handleNewPost = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.pageToRender = () => {\n      const showingUserId = this.state.showingUserId;\n\n      switch (this.state.page) {\n        case \"thePost\":\n          return this.thePost();\n\n        case \"newPost\":\n          return this.theNewPostCard();\n\n        case \"profile\":\n          return this.myProfile();\n\n        case \"show one\":\n          return this.showOneUser(showingUserId);\n      }\n    };\n\n    this.startShowingOneUser = id => {\n      this.setState({\n        showingUserId: id,\n        page: \"show one\",\n        showingOne: !this.state.showing\n      });\n    };\n\n    this.showOneUser = id => {\n      const _this$props3 = this.props,\n            users = _this$props3.users,\n            posts = _this$props3.posts,\n            name = _this$props3.name;\n      const theUser = users.find(user => user.id === id);\n      console.log(\"The one user stuff:\", theUser);\n      const userPost = posts.filter(post => post.user_id === theUser.id);\n      return this.showOneUsersPost(userPost);\n    };\n\n    this.showOneUsersPost = post => {\n      const _this$state2 = this.state,\n            likedPosts = _this$state2.likedPosts,\n            comment = _this$state2.comment,\n            post_id = _this$state2.post_id;\n      const _this$props4 = this.props,\n            name = _this$props4.name,\n            users = _this$props4.users,\n            userid = _this$props4.userid;\n      return post.map(p => React.createElement(ProfileCard, {\n        post: p,\n        user_id: p.user_id,\n        users: users,\n        name: name,\n        pic: p.pic,\n        id: p.id,\n        likedPosts: likedPosts,\n        comment: comment,\n        handleLike: this.handleLikes,\n        setId: this.setIdForPostToBeDeleted,\n        handleComment: this.handleComment,\n        postCommId: post_id,\n        currentUserId: userid,\n        submitComment: this.submitComment,\n        resetComment: this.resetCommentLength,\n        commentState: this.state.comment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }));\n    };\n\n    this.showOneUserBio = () => {\n      const users = this.props.users;\n      const showingUserId = this.state.showingUserId;\n      const theUser = users.find(user => user.id === showingUserId);\n      return React.createElement(Bio, {\n        user: theUser.username,\n        pic: theUser.picture,\n        bio: theUser.bio,\n        city: theUser.city,\n        state: theUser.state,\n        home: this.returnToThePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      });\n    };\n\n    this.appLogout = () => {\n      const logout = this.props.logout;\n      logout();\n      localStorage.clear();\n      localStorage.length === 0 && this.returnToLogoutPage();\n    };\n\n    this.returnToLogoutPage = () => {\n      const _this$props5 = this.props,\n            requestedLogin = _this$props5.requestedLogin,\n            logout = _this$props5.logout;\n      logout();\n      this.props.history.push('/');\n    };\n\n    this.theUsers = () => {\n      const users = this.props.users;\n      const commentor = {};\n\n      if (!!users) {\n        this.props.users.forEach(user => commentor[user.id] = user.username);\n        return commentor;\n      }\n    };\n\n    this.followeeIds = () => {\n      // EVERYONE WHO IS FOLLOWED\n      const foll = this.props.follows.map(f => f.followee_id);\n      const followees = [...new Set(foll)]; // deletes/ filters duplicates out of arrays\n\n      return followees;\n    };\n\n    this.theFollow = (ErId, EeId) => {\n      return this.props.follows.find(f => f.follower_id === ErId && f.followee_id === EeId).id;\n    };\n\n    this.whoImFollowing = () => {\n      const _this$props6 = this.props,\n            follows = _this$props6.follows,\n            userid = _this$props6.userid,\n            users = _this$props6.users;\n      const peepsImFollowing = users.filter(u => follows.filter(f => f.follower_id === userid && f.followee_id === u.id));\n      return peepsImFollowing;\n    };\n\n    this.whoImNotFollowing = () => {\n      const _this$props7 = this.props,\n            follows = _this$props7.follows,\n            userid = _this$props7.userid,\n            users = _this$props7.users;\n      const peepsImFollowing = users.filter(u => follows.map(f => f.follower_id !== userid && f.followee_id === u.id));\n      return peepsImFollowing;\n    };\n\n    this.friends = () => {\n      const _this$props8 = this.props,\n            follows = _this$props8.follows,\n            userid = _this$props8.userid,\n            users = _this$props8.users,\n            deleteFollow = _this$props8.deleteFollow,\n            user = _this$props8.user;\n      const friendsArr = follows.filter(f => f.follower_id === userid).map(f => f.followee_id);\n      const theFriends = friendsArr.map(f => users.find(user => user.id === f));\n\n      if (theFriends.length > 0) {\n        return theFriends.map(f => React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }, \" \", React.createElement(\"img\", {\n          src: f.picture,\n          className: \"friends-or-not-image\",\n          onClick: () => this.startShowingOneUser(f.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"friends-or-not-name\",\n          id: f.id,\n          onClick: () => deleteFollow(this.theFollow(userid, f.id)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }, `${f.username} 𝚡`), \" \"));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"make-some-friends\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          },\n          __self: this\n        }, `⬅️ Hey ${user}, Make Some ⬅️ New Friends!`, \" \"));\n      }\n    };\n\n    this.Suggestedfriends = () => {\n      const _this$props9 = this.props,\n            createFollow = _this$props9.createFollow,\n            userid = _this$props9.userid,\n            users = _this$props9.users,\n            follows = _this$props9.follows;\n      const allButMe = users.filter(user => user.id !== userid);\n      const nonfriendsArr = follows.filter(f => f.follower_id !== userid).map(f => f.followee_id);\n      const friendsArr = follows.filter(f => f.follower_id === userid).map(f => f.followee_id);\n      const usersSinFollowers = allButMe.filter(u => !this.followeeIds().includes(u.id));\n      const nonFollowers = allButMe.filter(u => nonfriendsArr.includes(u.id) && !friendsArr.includes(u.id));\n      const tempArr = [...nonFollowers, ...usersSinFollowers];\n      const whoImNotFollowing = [...new Set(tempArr)];\n      return whoImNotFollowing.map(f => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, \" \", React.createElement(\"img\", {\n        src: f.picture,\n        className: \"friends-or-not-image\",\n        onClick: () => {\n          this.startShowingOneUser(f.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"friends-or-not-name\",\n        onClick: () => createFollow(f.id, userid),\n        id: f.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, ` ${f.username} ✓`)));\n    };\n\n    this.setIdForPostToBeDeleted = id => {\n      this.setState({\n        postToDelete: id\n      });\n      this.showDelete_x();\n      console.log(this.state.postToDelete);\n    };\n\n    this.showDelete_x = () => {\n      this.setState({\n        show_x: !this.state.show_x\n      });\n    };\n  }\n\n  componentDidMount() {\n    const _this$props10 = this.props,\n          getPost = _this$props10.getPost,\n          fetchAllUsers = _this$props10.fetchAllUsers,\n          getFollows = _this$props10.getFollows;\n    getPost();\n    fetchAllUsers();\n    getFollows();\n    console.log(\"HOME CONTAINER\");\n    const history = this.props.history;\n    !localStorage.token && history.push('/');\n  } // COMMENTS //\n\n\n  render() {\n    const _this$props11 = this.props,\n          fposts = _this$props11.fposts,\n          user = _this$props11.user,\n          userId = _this$props11.userId,\n          history = _this$props11.history,\n          requestedLogin = _this$props11.requestedLogin,\n          picture = _this$props11.picture;\n    const _this$state3 = this.state,\n          showingOne = _this$state3.showingOne,\n          showingUserId = _this$state3.showingUserId;\n    this.theUsers();\n    this.followeeIds();\n    this.whoImFollowing();\n    return React.createElement(\"div\", {\n      className: \"Home-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(Follows, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }), React.createElement(\"nav\", {\n      className: \"Homepage-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      id: \"jays-gram\",\n      onClick: () => this.returnToThePost(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, this.props.user, \"s'taGram \"), React.createElement(\"p\", {\n      onClick: this.appLogout,\n      className: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \" logout  \")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"camera\",\n      id: this.state.id,\n      onClick: () => this.setState({\n        page: \"newPost\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, \" \\uD83D\\uDCF8 \")), React.createElement(\"li\", {\n      className: \"thumbnail\",\n      onClick: () => this.setState({\n        page: \"profile\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: picture,\n      id: \"thumbnail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }), \" \"))), React.createElement(\"div\", {\n      className: !localStorage.token ? \"loading \" : \"Home-Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sugested-friends\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, !showingOne ? React.createElement(\"span\", {\n      className: \"friends-and-suggested-headers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, \" Suggested\") : null, !showingOne ? this.Suggestedfriends() : this.showOneUserBio()), !showingOne ? React.createElement(\"div\", {\n      className: \"friends\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"friends-and-suggested-headers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, \"Friends\"), this.friends()) : null, this.pageToRender(), this.state.page !== \"newPost\" ? React.createElement(\"div\", {\n      className: \"Home-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \"Copyright \\xA9 2019 Jaystagram\") : React.createElement(React.Fragment, null)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    picture: state.users.picture,\n    users: state.users.all,\n    posts: state.post.posts,\n    requestedPost: state.post.requested,\n    requestedLogin: state.login.requested,\n    follows: state.follows.follows,\n    name: state.users.usersObj\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getFollows,\n  getPost,\n  fetchAllUsers,\n  fetchUser,\n  addComment,\n  editCaption,\n  changeLike,\n  logout,\n  notRequesting,\n  deleteComment,\n  createFollow,\n  deleteFollow\n})(HomeContainer);","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js"],"names":["React","match","Postcard","NewPostCard","Follows","getFollows","createFollow","deleteFollow","connect","getPost","editCaption","fetchUser","fetchAllUsers","addComment","deleteComment","changeLike","logout","notRequesting","ProfileCard","Loader","Bio","HomeContainer","Component","state","showCommentField","comment","post_id","Picture","caption","likes","page","likedPosts","postRecieveingComment","requesting","showingUserId","showingOne","showOneBio","postToDelete","show_x","submitComment","postId","props","userid","user","requestedPost","userId","body","content","followee_id","resetCommentLength","postToCommentOn","id","setState","handleComment","e","console","log","target","name","value","com","getCapField","editingCaption","handleEditSubmit","handleLikes","includes","deleteLike","likesArr","filter","pId","addLike","newLikes","like","numLikes","thePost","posts","users","history","length","map","post","theUsers","startShowingOneUser","handleNewPostClick","newPost","theNewPostCard","returnToThePost","myProfile","push","handleNewPost","pageToRender","showOneUser","showing","theUser","find","userPost","user_id","showOneUsersPost","p","pic","setIdForPostToBeDeleted","showOneUserBio","username","picture","bio","city","appLogout","localStorage","clear","returnToLogoutPage","requestedLogin","commentor","forEach","followeeIds","foll","follows","f","followees","Set","theFollow","ErId","EeId","follower_id","whoImFollowing","peepsImFollowing","u","whoImNotFollowing","friends","friendsArr","theFriends","Suggestedfriends","allButMe","nonfriendsArr","usersSinFollowers","nonFollowers","tempArr","showDelete_x","componentDidMount","token","render","fposts","mapStateToProps","all","requested","login","usersObj"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { match } from 'react'\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Follows from './components/Follows';\nimport { getFollows, createFollow, deleteFollow } from './redux/actions/FollowActions';\nimport { connect } from 'react-redux';\nimport { getPost, editCaption } from './redux/actions/PostActions';\nimport { fetchUser, fetchAllUsers } from './redux/actions/UserActions';\nimport { addComment, deleteComment } from './redux/actions/CommentsActions';\nimport { changeLike } from './redux/actions/PostActions';\nimport { logout, notRequesting } from './redux/actions/LoginActions';\nimport ProfileCard from './components/ProfilePostCard'\nimport Loader from './components/loader';\nimport Bio from './components/UserBio'\n\n\n\nclass HomeContainer extends React.Component {\n  state = {\n    showCommentField: false,\n    comment: \"\",\n    post_id: \"\",\n    Picture: \"\",\n    caption: \"\",\n    likes: 0,\n    page: \"thePost\",\n    likedPosts: [],\n    postRecieveingComment: null,\n    requesting: false,\n    showingUserId: null,\n    showingOne: false,\n    showOneBio: false,\n    postToDelete: 0,\n    show_x: false\n\n  }\n\n\n    ;\n\n  componentDidMount() {\n    const { getPost, fetchAllUsers, getFollows } = this.props\n    getPost(); fetchAllUsers(); getFollows()\n    console.log(\"HOME CONTAINER\")\n    const { history } = this.props\n\n    !localStorage.token && history.push('/')\n\n  }\n\n  // COMMENTS //\n\n\n  submitComment = (postId) => {\n    const { userid, addComment, user, requestedPost } = this.props\n    const { userId } = this.state\n    const body = {\n      post_id: postId,\n      content: this.state.comment,\n      followee_id: userid\n    }\n    addComment(body)\n    this.resetCommentLength()\n\n\n  };\n\n\n  postToCommentOn = (id) => {\n    this.setState({ postRecieveingComment: id })\n  }\n\n  resetCommentLength = () => {\n    this.setState({ comment: \"\", postRecieveingComment: null })\n  }\n\n  handleComment = (e) => {\n    console.log(this.state.comment, this.state.postId);\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n\n  deleteComment = (com) => {\n    const { deleteComment } = this.props\n\n    // console.log(com.id, com.post_id, com.followee_id, com.content)\n    deleteComment(com.id, com.post_id, com.followee_id, com.content)\n\n  }\n\n  // EDIT CAPTION\n\n  getCapField = () => {\n    this.setState({ editingCaption: !this.state.editingCaption })\n  }\n  handleEditSubmit = (id) => {\n    this.props.editCaption(id, this.state.comment)\n    this.setState({ comment: \"\" })\n    this.getCapField()\n  }\n  showCommentField = () => {\n    return this.setState({ showCommentField: !this.state.showCommentField })\n  }\n\n\n  // LIKES //\n\n  handleLikes = (id, likes) => {\n    const { likedPosts } = this.state\n    if (likedPosts.includes(id)) {\n      this.deleteLike(id, likes)\n      const likesArr = likedPosts.filter(pId => pId !== id)\n      this.setState({ likedPosts: likesArr })\n\n    }\n    else {\n      this.addLike(id, likes)\n      const newLikes = [...likedPosts, id]\n      this.setState({ likedPosts: newLikes })\n    }\n\n  }\n\n  addLike = (id, like) => {\n\n    // this.setState({ liked: !this.state.liked })\n    const numLikes = like + 1\n    this.props.changeLike(id, numLikes, \"add\")\n  }\n  deleteLike = (id, like) => {\n    // this.setState({ liked: !this.state.liked })\n    const numLikes = like - 1\n    this.props.changeLike(id, numLikes, \"\")\n  }\n\n\n  // POST STUFF  //\n\n\n  thePost = () => {\n    const { posts, users, history } = this.props\n    const { comment, showCommentField, editingCaption, likedPosts, postToCommentOn, postRecieveingComment } = this.state\n    return posts && posts.length > 0 ? posts.map(post => (\n\n      <Postcard\n        users={users}\n        post={post}\n        history={history}\n        commentLen={comment.length}\n        toggleCommentField={this.showCommentField}\n        commentFieldStatus={showCommentField}\n        yourField={postRecieveingComment}\n        post2comment={this.postToCommentOn}\n        id={post.id}\n        resetComment={this.resetCommentLength}\n        submitComment={() => this.submitComment(post.id, post.userId)}\n        handleComment={this.handleComment}\n        handleLikes={this.handleLikes}\n        getCapEditField={this.getCapField}\n        editCapStatus={editingCaption}\n        submitCapEdit={this.handleEditSubmit}\n        addLike={this.addLike}\n        disLike={this.deleteLike}\n        liked={likedPosts}\n        commentors={this.theUsers}\n        deleteComment={this.deleteComment}\n        showThisUser={this.startShowingOneUser}\n      />\n    )) : console.log(\"The Post didnt work, here are the props:\", this.props)\n  };\n\n\n\n  // NEW POST STUFF \n  // SUBMIT THE COMMENT /FETCH POST\n  handleNewPostClick = () => {\n    this.setState({ newPost: !this.state.newPost });\n  };\n\n  theNewPostCard = props => {\n    const { userid } = this.props\n    return (\n      <NewPostCard\n        back={this.returnToThePost}\n      />\n    );\n  };\n\n  myProfile = () => {\n    this.props.history.push('/profile')\n  };\n\n\n  returnToThePost = () => {\n    this.setState({ page: \"thePost\", showingOne: false })\n  }\n\n\n  handleNewPost = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  pageToRender = () => {\n    const { showingUserId } = this.state\n    switch (this.state.page) {\n      case \"thePost\":\n        return this.thePost()\n      case \"newPost\":\n        return this.theNewPostCard()\n      case \"profile\":\n        return this.myProfile()\n      case \"show one\":\n        return this.showOneUser(showingUserId)\n    }\n  }\n\n  startShowingOneUser = (id) => {\n    this.setState({ showingUserId: id, page: \"show one\", showingOne: !this.state.showing })\n  }\n  showOneUser = (id) => {\n    const { users, posts, name } = this.props\n    const theUser = users.find(user => user.id === id)\n    console.log(\"The one user stuff:\", theUser)\n    const userPost = posts.filter(post => post.user_id === theUser.id)\n\n    return this.showOneUsersPost(userPost)\n\n\n  }\n  showOneUsersPost = (post) => {\n    const { likedPosts, comment, post_id } = this.state\n    const { name, users, userid } = this.props\n\n\n    return post.map(p => <ProfileCard\n      post={p}\n      user_id={p.user_id}\n      users={users}\n      name={name}\n      pic={p.pic}\n      id={p.id}\n      likedPosts={likedPosts}\n      comment={comment}\n      handleLike={this.handleLikes}\n      setId={this.setIdForPostToBeDeleted}\n      handleComment={this.handleComment}\n      postCommId={post_id}\n      currentUserId={userid}\n      submitComment={this.submitComment}\n      resetComment={this.resetCommentLength}\n      commentState={this.state.comment}\n    />\n    )\n  }\n  showOneUserBio = () => {\n    const { users } = this.props\n    const { showingUserId } = this.state\n    const theUser = users.find(user => user.id === showingUserId)\n\n    return <Bio\n      user={theUser.username}\n      pic={theUser.picture}\n      bio={theUser.bio}\n      city={theUser.city}\n      state={theUser.state}\n      home={this.returnToThePost}\n\n\n\n    />\n\n  }\n\n  // LOGOUT //\n\n  appLogout = () => {\n    const { logout } = this.props\n    logout()\n    localStorage.clear()\n    localStorage.length === 0 && this.returnToLogoutPage()\n\n  }\n\n  returnToLogoutPage = () => {\n    const { requestedLogin, logout } = this.props\n    logout()\n    this.props.history.push('/')\n  }\n  theUsers = () => {\n    const { users } = this.props\n    const commentor = {}\n    if (!!users) {\n      this.props.users.forEach(user => commentor[user.id] = user.username)\n      return commentor\n    }\n  }\n\n  // FREINDS\n  followeeIds = () => {\n    // EVERYONE WHO IS FOLLOWED\n    const foll = this.props.follows.map(f => f.followee_id)\n    const followees = [...new Set(foll)] // deletes/ filters duplicates out of arrays\n    return followees\n  }\n  theFollow = (ErId, EeId) => {\n\n    return this.props.follows.find(f => f.follower_id === ErId && f.followee_id === EeId).id\n  }\n  whoImFollowing = () => {\n    const { follows, userid, users } = this.props\n    const peepsImFollowing = users.filter(u => follows.filter(f =>\n      f.follower_id === userid && f.followee_id === u.id))\n    return peepsImFollowing\n  }\n  whoImNotFollowing = () => {\n    const { follows, userid, users } = this.props\n    const peepsImFollowing = users.filter(u => follows.map(f =>\n      f.follower_id !== userid && f.followee_id === u.id))\n    return peepsImFollowing\n  }\n\n  friends = () => {\n    const { follows, userid, users, deleteFollow, user } = this.props\n    const friendsArr = follows.filter(f => f.follower_id === userid).map(f => f.followee_id)\n\n    const theFriends = friendsArr.map(f => users.find(user => user.id === f))\n\n    if (theFriends.length > 0) {\n      return theFriends.map(f => <div> <img src={f.picture} className=\"friends-or-not-image\" onClick={() => this.startShowingOneUser(f.id)\n      } /> <br /><span className=\"friends-or-not-name\" id={f.id} onClick={() => deleteFollow(this.theFollow(userid, f.id))}>{`${f.username} 𝚡`}</span> </div>)\n    }\n    else {\n      return <div className=\"make-some-friends\">\n\n        <p>{`⬅️ Hey ${user}, Make Some ⬅️ New Friends!`} </p>\n\n      </div>\n    }\n\n  }\n  Suggestedfriends = () => {\n    const { createFollow, userid, users, follows } = this.props\n    const allButMe = users.filter(user => user.id !== userid)\n    const nonfriendsArr = follows.filter(f => f.follower_id !== userid).map(f => f.followee_id)\n    const friendsArr = follows.filter(f => f.follower_id === userid).map(f => f.followee_id)\n    const usersSinFollowers = allButMe.filter(u => !this.followeeIds().includes(u.id))\n    const nonFollowers = allButMe.filter(u => nonfriendsArr.includes(u.id) && !friendsArr.includes(u.id))\n    const tempArr = [...nonFollowers, ...usersSinFollowers]\n    const whoImNotFollowing = [...new Set(tempArr)]\n\n\n\n    return whoImNotFollowing.map(f => <div> <img src={f.picture} className=\"friends-or-not-image\" onClick={() => {\n\n      this.startShowingOneUser(f.id)\n    }} /> <br /><span className=\"friends-or-not-name\" onClick={() => createFollow(f.id, userid)} id={f.id}>{` ${f.username} ✓`}</span></div>)\n\n  }\n\n\n  // SINGLE PAGE USER AND POST OPTIONS\n  setIdForPostToBeDeleted = (id) => {\n    this.setState({ postToDelete: id })\n    this.showDelete_x()\n    console.log(this.state.postToDelete)\n\n  }\n  showDelete_x = () => {\n    this.setState({ show_x: !this.state.show_x })\n  }\n\n  render() {\n\n    const { fposts, user, userId, history, requestedLogin, picture } = this.props;\n    const { showingOne, showingUserId } = this.state\n    this.theUsers()\n    this.followeeIds()\n    this.whoImFollowing()\n\n    return (\n      <div className=\"Home-Container\">\n        <Follows />\n        <nav className=\"Homepage-nav\">\n          <ul>\n            <li id=\"jays-gram\" onClick={() => this.returnToThePost()}><span >{this.props.user}s'taGram </span>\n              <p onClick={this.appLogout} className=\"logout\" > logout  </p></li>\n\n            <li>\n              <p className=\"camera\" id={this.state.id} onClick={() => this.setState({ page: \"newPost\" })}> 📸 </p>\n            </li>\n\n\n            <li className=\"thumbnail\" onClick={() => this.setState({ page: \"profile\" })}><img src={picture} id='thumbnail' /> </li>\n\n          </ul>\n        </nav>\n\n        <div className={!localStorage.token ? \"loading \" : \"Home-Content\"}>\n\n          <div className=\"sugested-friends\">\n            {!showingOne ? <span className=\"friends-and-suggested-headers\"> Suggested</span> : null}\n            {!showingOne ? this.Suggestedfriends() : this.showOneUserBio()}\n          </div>\n\n          {!showingOne ? <div className=\"friends\">\n            <span className=\"friends-and-suggested-headers\">Friends</span>\n            {this.friends()}\n          </div> : null}\n\n          {this.pageToRender()}\n          {this.state.page !== \"newPost\" ? <div className=\"Home-footer\">Copyright &copy; 2019 Jaystagram</div> : <></>}\n        </div>\n\n      </div>\n\n\n\n    );\n  }\n\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    picture: state.users.picture,\n    users: state.users.all,\n    posts: state.post.posts,\n    requestedPost: state.post.requested,\n    requestedLogin: state.login.requested,\n    follows: state.follows.follows,\n    name: state.users.usersObj,\n  }\n}\n\nexport default connect(mapStateToProps, { getFollows, getPost, fetchAllUsers, fetchUser, addComment, editCaption, changeLike, logout, notRequesting, deleteComment, createFollow, deleteFollow })(HomeContainer);\n\n\n"]},"metadata":{},"sourceType":"module"}