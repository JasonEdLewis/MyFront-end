{"ast":null,"code":"import _defineProperty from \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { USER_REQUEST, USER_SUCCESS, USER_FAILURE, UPDATE_USER, DELETE_USER, GET_ALL } from '../actions/types';\nconst initialState = {\n  all: [],\n  usersObj: {},\n  username: \"\",\n  email: \"\",\n  id: \"\",\n  bio: \"\",\n  city: \"\",\n  state: \"\",\n  zip: \"\",\n  picture: \"\",\n  requested: null,\n  errorMessage: \"\"\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case USER_REQUEST:\n      return _objectSpread({}, state, {\n        requested: true\n      });\n\n    case USER_SUCCESS:\n      return _objectSpread({}, state, {\n        username: action.payload.username,\n        id: action.payload.id,\n        picture: action.payload.picture,\n        bio: action.payload.bio,\n        city: action.payload.city,\n        state: action.payload.state,\n        email: action.payload.email,\n        requested: false\n      });\n\n    case USER_FAILURE:\n      return _objectSpread({}, state, {\n        errorMessage: action.payload.message,\n        requested: false\n      });\n\n    case UPDATE_USER:\n      debugger;\n      return _objectSpread({}, state, {\n        username: action.payload.username,\n        email: action.payload.email,\n        id: action.payload.id,\n        bio: action.payload.bio,\n        city: action.payload.city,\n        state: action.payload.state,\n        zip: action.payload.zip,\n        picture: action.payload.picture\n      });\n\n    case DELETE_USER:\n      const users = state.all.filter(user => user.id !== action.id);\n      return _objectSpread({}, state, {\n        all: users,\n        requested: false\n      });\n\n    case GET_ALL:\n      return _objectSpread({}, state, {\n        all: action.payload,\n        usersObj: action.usersObj,\n        requested: false\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/redux/reducers/UserReducer.js"],"names":["USER_REQUEST","USER_SUCCESS","USER_FAILURE","UPDATE_USER","DELETE_USER","GET_ALL","initialState","all","usersObj","username","email","id","bio","city","state","zip","picture","requested","errorMessage","action","type","payload","message","users","filter","user"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,YAAvB,EAAqCC,YAArC,EAAoDC,WAApD,EAAiEC,WAAjE,EAA8EC,OAA9E,QAA6F,kBAA7F;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,GAAG,EAAE,EADY;AAEjBC,EAAAA,QAAQ,EAAC,EAFQ;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,KAAK,EAAC,EAJW;AAKjBC,EAAAA,EAAE,EAAE,EALa;AAMjBC,EAAAA,GAAG,EAAC,EANa;AAOjBC,EAAAA,IAAI,EAAC,EAPY;AAQjBC,EAAAA,KAAK,EAAC,EARW;AASjBC,EAAAA,GAAG,EAAC,EATa;AAUjBC,EAAAA,OAAO,EAAE,EAVQ;AAWjBC,EAAAA,SAAS,EAAE,IAXM;AAYjBC,EAAAA,YAAY,EAAE;AAZG,CAArB;AAgBA,gBAAe,CAACJ,KAAK,GAAGR,YAAT,EAAuBa,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKpB,YAAL;AACI,+BAAYc,KAAZ;AAAmBG,QAAAA,SAAS,EAAE;AAA9B;;AAEJ,SAAKhB,YAAL;AACI,+BAAYa,KAAZ;AAAmBL,QAAAA,QAAQ,EAAEU,MAAM,CAACE,OAAP,CAAeZ,QAA5C;AAAsDE,QAAAA,EAAE,EAAEQ,MAAM,CAACE,OAAP,CAAeV,EAAzE;AAA6EK,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAAP,CAAeL,OAArG;AAA8GJ,QAAAA,GAAG,EAAEO,MAAM,CAACE,OAAP,CAAeT,GAAlI;AAAuIC,QAAAA,IAAI,EAACM,MAAM,CAACE,OAAP,CAAeR,IAA3J;AAAiKC,QAAAA,KAAK,EAACK,MAAM,CAACE,OAAP,CAAeP,KAAtL;AAA4LJ,QAAAA,KAAK,EAACS,MAAM,CAACE,OAAP,CAAeX,KAAjN;AAAwNO,QAAAA,SAAS,EAAC;AAAlO;;AAEJ,SAAKf,YAAL;AACI,+BAAYY,KAAZ;AAAmBI,QAAAA,YAAY,EAAEC,MAAM,CAACE,OAAP,CAAeC,OAAhD;AAAyDL,QAAAA,SAAS,EAAE;AAApE;;AAEJ,SAAKd,WAAL;AACI;AACA,+BAAYW,KAAZ;AACIL,QAAAA,QAAQ,EAAEU,MAAM,CAACE,OAAP,CAAeZ,QAD7B;AAEIC,QAAAA,KAAK,EAAES,MAAM,CAACE,OAAP,CAAeX,KAF1B;AAGIC,QAAAA,EAAE,EAACQ,MAAM,CAACE,OAAP,CAAeV,EAHtB;AAIIC,QAAAA,GAAG,EAACO,MAAM,CAACE,OAAP,CAAeT,GAJvB;AAKIC,QAAAA,IAAI,EAACM,MAAM,CAACE,OAAP,CAAeR,IALxB;AAMIC,QAAAA,KAAK,EAACK,MAAM,CAACE,OAAP,CAAeP,KANzB;AAOIC,QAAAA,GAAG,EAACI,MAAM,CAACE,OAAP,CAAeN,GAPvB;AAQIC,QAAAA,OAAO,EAACG,MAAM,CAACE,OAAP,CAAeL;AAR3B;;AAWJ,SAAKZ,WAAL;AACI,YAAMmB,KAAK,GAAGT,KAAK,CAACP,GAAN,CAAUiB,MAAV,CAAiBC,IAAI,IAAIA,IAAI,CAACd,EAAL,KAAYQ,MAAM,CAACR,EAA5C,CAAd;AACA,+BAAYG,KAAZ;AACIP,QAAAA,GAAG,EAAEgB,KADT;AAEIN,QAAAA,SAAS,EAAC;AAFd;;AAKJ,SAAKZ,OAAL;AACI,+BACOS,KADP;AAEIP,QAAAA,GAAG,EAAEY,MAAM,CAACE,OAFhB;AAGIb,QAAAA,QAAQ,EAAEW,MAAM,CAACX,QAHrB;AAIIS,QAAAA,SAAS,EAAC;AAJd;;AAOJ;AACI,aAAOH,KAAP;AAvCR;AAyCH,CA1CD","sourcesContent":["import { USER_REQUEST, USER_SUCCESS, USER_FAILURE,  UPDATE_USER, DELETE_USER, GET_ALL } from '../actions/types'\n\nconst initialState = {\n    all: [],\n    usersObj:{},\n    username: \"\",\n    email:\"\",\n    id: \"\",\n    bio:\"\",\n    city:\"\",\n    state:\"\",\n    zip:\"\",\n    picture: \"\",\n    requested: null,\n    errorMessage: \"\",\n\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case USER_REQUEST:\n            return { ...state, requested: true }\n\n        case USER_SUCCESS:\n            return { ...state, username: action.payload.username, id: action.payload.id, picture: action.payload.picture, bio: action.payload.bio, city:action.payload.city, state:action.payload.state,email:action.payload.email, requested:false }\n\n        case USER_FAILURE:\n            return { ...state, errorMessage: action.payload.message, requested: false }\n\n        case UPDATE_USER:\n            debugger\n            return { ...state,\n                username: action.payload.username,\n                email: action.payload.email,\n                id:action.payload.id,\n                bio:action.payload.bio,\n                city:action.payload.city,\n                state:action.payload.state,\n                zip:action.payload.zip,\n                picture:action.payload.picture\n            }\n\n        case DELETE_USER:\n            const users = state.all.filter(user => user.id !== action.id)\n            return { ...state,\n                all: users,\n                requested:false\n             }\n             \n        case GET_ALL:\n            return {\n                ...state,\n                all: action.payload,\n                usersObj: action.usersObj,\n                requested:false\n\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}