{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js\";\nimport React from \"react\";\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Follows from './components/Follows';\nimport Jack from \"./img/jack.jpg\";\nimport { getFollows } from './redux/actions/FollowActions';\nimport { connect } from 'react-redux';\nimport { getPost, editCaption } from './redux/actions/PostActions';\nimport { fetchUser, fetchAllUsers } from './redux/actions/UserActions';\nimport { addComment } from './redux/actions/CommentsActions';\nimport { changeLike } from './redux/actions/PostActions';\nimport { logout, notRequesting } from './redux/actions/LoginActions';\nimport Loader from './components/loader';\nimport { Card, Form, Navbar, Button, NavbarBrand, Nav } from \"react-bootstrap\";\n\nclass HomeContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showCommentField: false,\n      comment: \"\",\n      post_id: \"\",\n      Picture: \"\",\n      caption: \"\",\n      likes: 0,\n      page: \"thePost\",\n      editingCaption: false,\n      liked: false,\n      requesting: false\n    };\n\n    this.submitComment = postId => {\n      const _this$props = this.props,\n            userid = _this$props.userid,\n            addComment = _this$props.addComment,\n            user = _this$props.user,\n            requestedPost = _this$props.requestedPost;\n      const _this$state = this.state,\n            userId = _this$state.userId,\n            comment = _this$state.comment;\n      console.log(\"Post_id\", postId, \"User is:\", user, \"comment: \", this.state.comment);\n      const body = {\n        post_id: postId,\n        content: comment,\n        followee_id: userid\n      };\n      addComment(body);\n      !requestedPost && this.setState({\n        comment: \" \",\n        showCommentField: false\n      });\n    };\n\n    this.resetCommentLength = () => {\n      this.setState({\n        comment: \"\"\n      });\n    };\n\n    this.handleComment = e => {\n      // console.log(e.target.value);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.getCapField = () => {\n      this.setState({\n        editingCaption: !this.state.editingCaption\n      });\n    };\n\n    this.handleEditSubmit = id => {\n      this.props.editCaption(id, this.state.comment);\n      this.setState({\n        comment: \"\"\n      });\n      this.getCapField();\n    };\n\n    this.showCommentField = () => {\n      return this.setState({\n        showCommentField: !this.state.showCommentField\n      });\n    };\n\n    this.addLike = (id, like) => {\n      this.setState({\n        liked: !this.state.liked\n      });\n      const numLikes = like + 1;\n      this.props.changeLike(id, numLikes, \"add\");\n    };\n\n    this.deleteLike = (id, like) => {\n      this.setState({\n        liked: !this.state.liked\n      });\n      const numLikes = like - 1;\n      this.props.changeLike(id, numLikes, \"\");\n    };\n\n    this.thePost = () => {\n      const posts = this.props.posts;\n      const _this$state2 = this.state,\n            comment = _this$state2.comment,\n            showCommentField = _this$state2.showCommentField,\n            editingCaption = _this$state2.editingCaption,\n            liked = _this$state2.liked;\n      return posts && posts.length > 0 ? posts.map(post => React.createElement(Postcard, {\n        post: post,\n        commentLen: comment.length,\n        toggleCommentField: this.showCommentField,\n        commentFieldStatus: showCommentField,\n        id: post.id,\n        resetComment: this.resetCommentLength,\n        submitComment: () => this.submitComment(post.id, post.userId),\n        handleComment: this.handleComment,\n        getCapEditField: this.getCapField,\n        editCapStatus: editingCaption,\n        submitCapEdit: this.handleEditSubmit,\n        addLike: this.addLike,\n        disLike: this.deleteLike,\n        liked: liked,\n        commentors: this.theUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })) : console.log(\"The Post didnt work, here are the props:\", this.props);\n    };\n\n    this.handleNewPostClick = () => {\n      this.setState({\n        newPost: !this.state.newPost\n      });\n    };\n\n    this.theNewPostCard = props => {\n      const userid = this.props.userid;\n      return React.createElement(NewPostCard, {\n        back: this.returnToThePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    };\n\n    this.myProfile = () => {\n      this.props.history.push('/profile');\n    };\n\n    this.returnToThePost = () => {\n      this.setState({\n        page: \"thePost\"\n      });\n    };\n\n    this.handleNewPost = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.pageToRender = () => {\n      switch (this.state.page) {\n        case \"thePost\":\n          return this.thePost();\n\n        case \"newPost\":\n          return this.theNewPostCard();\n\n        case \"profile\":\n          return this.myProfile();\n      }\n    };\n\n    this.appLogout = () => {\n      const logout = this.props.logout;\n      logout();\n      localStorage.clear();\n      localStorage.length === 0 && this.returnToLogoutPage();\n    };\n\n    this.returnToLogoutPage = () => {\n      const _this$props2 = this.props,\n            requestedLogin = _this$props2.requestedLogin,\n            logout = _this$props2.logout;\n      logout();\n      this.props.history.push('/');\n    };\n\n    this.theUsers = () => {\n      const users = this.props.users;\n      const commentor = {};\n\n      if (!!users) {\n        this.props.users.forEach(user => commentor[user.id] = user.username);\n        return commentor;\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"HOME CONTAINER\");\n    const _this$props3 = this.props,\n          fetchUser = _this$props3.fetchUser,\n          history = _this$props3.history,\n          notRequesting = _this$props3.notRequesting;\n    fetchUser(localStorage.token);\n    !localStorage.token ? history.push('/') : notRequesting();\n  } // COMMENTS //\n\n\n  render() {\n    // debugger\n    console.log(\"Home Container props\", this.props);\n    const _this$props4 = this.props,\n          fposts = _this$props4.fposts,\n          user = _this$props4.user,\n          userId = _this$props4.userId,\n          history = _this$props4.history,\n          requestedLogin = _this$props4.requestedLogin;\n    const requesting = this.state.requesting;\n    this.theUsers();\n    return React.createElement(\"div\", {\n      className: \"Home-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Follows, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Homepage-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"jays-gram\",\n      onClick: () => this.returnToThePost(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, this.props.user, \"s'taGram \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"camera\",\n      id: this.state.id,\n      onClick: () => this.setState({\n        page: \"newPost\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \" \\uD83D\\uDCF8 \")), React.createElement(\"div\", {\n      className: \"thumb-and-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"thumbnail\",\n      onClick: () => this.setState({\n        page: \"profile\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: Jack,\n      id: \"thumbnail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      className: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.appLogout,\n      id: \"logout-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \" logout  \")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, !!!localStorage.token && React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: !!!localStorage.token ? \"loading \" : \"Home-Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, this.pageToRender(), this.state.page !== \"newPost\" ? React.createElement(\"div\", {\n      className: \"Home-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Copyright \\xA9 2019 Jaystagram\") : React.createElement(React.Fragment, null)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    users: state.users.all,\n    posts: state.post.posts,\n    requestedPost: state.post.requested,\n    requestedLogin: state.login.requested\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getFollows,\n  getPost,\n  fetchAllUsers,\n  fetchUser,\n  addComment,\n  editCaption,\n  changeLike,\n  logout,\n  notRequesting\n})(HomeContainer);","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js"],"names":["React","Postcard","NewPostCard","Follows","Jack","getFollows","connect","getPost","editCaption","fetchUser","fetchAllUsers","addComment","changeLike","logout","notRequesting","Loader","Card","Form","Navbar","Button","NavbarBrand","Nav","HomeContainer","Component","state","showCommentField","comment","post_id","Picture","caption","likes","page","editingCaption","liked","requesting","submitComment","postId","props","userid","user","requestedPost","userId","console","log","body","content","followee_id","setState","resetCommentLength","handleComment","e","target","name","value","getCapField","handleEditSubmit","id","addLike","like","numLikes","deleteLike","thePost","posts","length","map","post","theUsers","handleNewPostClick","newPost","theNewPostCard","returnToThePost","myProfile","history","push","handleNewPost","pageToRender","appLogout","localStorage","clear","returnToLogoutPage","requestedLogin","users","commentor","forEach","username","componentDidMount","token","render","fposts","mapStateToProps","all","requested","login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,6BAArC;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,6BAAzC;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,8BAAtC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAIA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,WAArC,EAAkDC,GAAlD,QAA6D,iBAA7D;;AAEA,MAAMC,aAAN,SAA4BtB,KAAK,CAACuB,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACNC,MAAAA,gBAAgB,EAAE,KADZ;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,OAAO,EAAE,EAHH;AAINC,MAAAA,OAAO,EAAE,EAJH;AAKNC,MAAAA,OAAO,EAAE,EALH;AAMNC,MAAAA,KAAK,EAAE,CAND;AAONC,MAAAA,IAAI,EAAE,SAPA;AAQNC,MAAAA,cAAc,EAAE,KARV;AASNC,MAAAA,KAAK,EAAE,KATD;AAUNC,MAAAA,UAAU,EAAE;AAVN,KADkC;;AAAA,SA8B1CC,aA9B0C,GA8BzBC,MAAD,IAAY;AAAA,0BAC0B,KAAKC,KAD/B;AAAA,YAClBC,MADkB,eAClBA,MADkB;AAAA,YACV3B,UADU,eACVA,UADU;AAAA,YACE4B,IADF,eACEA,IADF;AAAA,YACQC,aADR,eACQA,aADR;AAAA,0BAEE,KAAKhB,KAFP;AAAA,YAElBiB,MAFkB,eAElBA,MAFkB;AAAA,YAEVf,OAFU,eAEVA,OAFU;AAG1BgB,MAAAA,OAAO,CAACC,GAAR,CACE,SADF,EAEEP,MAFF,EAGE,UAHF,EAIEG,IAJF,EAKE,WALF,EAME,KAAKf,KAAL,CAAWE,OANb;AAQA,YAAMkB,IAAI,GAAG;AACXjB,QAAAA,OAAO,EAAES,MADE;AAEXS,QAAAA,OAAO,EAAEnB,OAFE;AAGXoB,QAAAA,WAAW,EAAER;AAHF,OAAb;AAKA3B,MAAAA,UAAU,CAACiC,IAAD,CAAV;AACA,OAACJ,aAAD,IAAkB,KAAKO,QAAL,CAAc;AAAErB,QAAAA,OAAO,EAAE,GAAX;AAAgBD,QAAAA,gBAAgB,EAAE;AAAlC,OAAd,CAAlB;AACD,KAhDyC;;AAAA,SAmD1CuB,kBAnD0C,GAmDrB,MAAM;AACzB,WAAKD,QAAL,CAAc;AAAErB,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KArDyC;;AAAA,SAsD1CuB,aAtD0C,GAsD1BC,CAAC,IAAI;AACnB;AACA,WAAKH,QAAL,CAAc;AACZ,SAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AADd,OAAd;AAGD,KA3DyC;;AAAA,SA+D1CC,WA/D0C,GA+D5B,MAAM;AAClB,WAAKP,QAAL,CAAc;AAAEf,QAAAA,cAAc,EAAE,CAAC,KAAKR,KAAL,CAAWQ;AAA9B,OAAd;AACD,KAjEyC;;AAAA,SAkE1CuB,gBAlE0C,GAkEtBC,EAAD,IAAQ;AACzB,WAAKnB,KAAL,CAAW7B,WAAX,CAAuBgD,EAAvB,EAA2B,KAAKhC,KAAL,CAAWE,OAAtC;AACA,WAAKqB,QAAL,CAAc;AAAErB,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,WAAK4B,WAAL;AACD,KAtEyC;;AAAA,SAuE1C7B,gBAvE0C,GAuEvB,MAAM;AACvB,aAAO,KAAKsB,QAAL,CAAc;AAAEtB,QAAAA,gBAAgB,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAhC,OAAd,CAAP;AACD,KAzEyC;;AAAA,SA0E1CgC,OA1E0C,GA0EhC,CAACD,EAAD,EAAKE,IAAL,KAAc;AACtB,WAAKX,QAAL,CAAc;AAAEd,QAAAA,KAAK,EAAE,CAAC,KAAKT,KAAL,CAAWS;AAArB,OAAd;AACA,YAAM0B,QAAQ,GAAGD,IAAI,GAAG,CAAxB;AACA,WAAKrB,KAAL,CAAWzB,UAAX,CAAsB4C,EAAtB,EAA0BG,QAA1B,EAAoC,KAApC;AACD,KA9EyC;;AAAA,SA+E1CC,UA/E0C,GA+E7B,CAACJ,EAAD,EAAKE,IAAL,KAAc;AACzB,WAAKX,QAAL,CAAc;AAAEd,QAAAA,KAAK,EAAE,CAAC,KAAKT,KAAL,CAAWS;AAArB,OAAd;AACA,YAAM0B,QAAQ,GAAGD,IAAI,GAAG,CAAxB;AACA,WAAKrB,KAAL,CAAWzB,UAAX,CAAsB4C,EAAtB,EAA0BG,QAA1B,EAAoC,EAApC;AACD,KAnFyC;;AAAA,SAwF1CE,OAxF0C,GAwFhC,MAAM;AAAA,YACNC,KADM,GACI,KAAKzB,KADT,CACNyB,KADM;AAAA,2BAE+C,KAAKtC,KAFpD;AAAA,YAENE,OAFM,gBAENA,OAFM;AAAA,YAEGD,gBAFH,gBAEGA,gBAFH;AAAA,YAEqBO,cAFrB,gBAEqBA,cAFrB;AAAA,YAEqCC,KAFrC,gBAEqCA,KAFrC;AAGd,aAAO6B,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAe,CAAxB,GAA4BD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAE/C,oBAAC,QAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,UAAU,EAAEvC,OAAO,CAACqC,MAFtB;AAGE,QAAA,kBAAkB,EAAE,KAAKtC,gBAH3B;AAIE,QAAA,kBAAkB,EAAEA,gBAJtB;AAKE,QAAA,EAAE,EAAEwC,IAAI,CAACT,EALX;AAME,QAAA,YAAY,EAAE,KAAKR,kBANrB;AAOE,QAAA,aAAa,EAAE,MAAM,KAAKb,aAAL,CAAmB8B,IAAI,CAACT,EAAxB,EAA4BS,IAAI,CAACxB,MAAjC,CAPvB;AAQE,QAAA,aAAa,EAAE,KAAKQ,aARtB;AASE,QAAA,eAAe,EAAE,KAAKK,WATxB;AAUE,QAAA,aAAa,EAAEtB,cAVjB;AAWE,QAAA,aAAa,EAAE,KAAKuB,gBAXtB;AAYE,QAAA,OAAO,EAAE,KAAKE,OAZhB;AAaE,QAAA,OAAO,EAAE,KAAKG,UAbhB;AAcE,QAAA,KAAK,EAAE3B,KAdT;AAeE,QAAA,UAAU,EAAE,KAAKiC,QAfnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFiC,CAA5B,GAmBFxB,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwD,KAAKN,KAA7D,CAnBL;AAoBD,KA/GyC;;AAAA,SAqH1C8B,kBArH0C,GAqHrB,MAAM;AACzB,WAAKpB,QAAL,CAAc;AAAEqB,QAAAA,OAAO,EAAE,CAAC,KAAK5C,KAAL,CAAW4C;AAAvB,OAAd;AACD,KAvHyC;;AAAA,SAyH1CC,cAzH0C,GAyHzBhC,KAAK,IAAI;AAAA,YAChBC,MADgB,GACL,KAAKD,KADA,CAChBC,MADgB;AAExB,aACE,oBAAC,WAAD;AACE,QAAA,IAAI,EAAE,KAAKgC,eADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAKD,KAhIyC;;AAAA,SAkI1CC,SAlI0C,GAkI9B,MAAM;AAChB,WAAKlC,KAAL,CAAWmC,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACD,KApIyC;;AAAA,SAuI1CH,eAvI0C,GAuIxB,MAAM;AACtB,WAAKvB,QAAL,CAAc;AAAEhB,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAzIyC;;AAAA,SA4I1C2C,aA5I0C,GA4I1BxB,CAAC,IAAI;AACnB,WAAKH,QAAL,CAAc;AACZ,SAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AADd,OAAd;AAGD,KAhJyC;;AAAA,SAkJ1CsB,YAlJ0C,GAkJ3B,MAAM;AAEnB,cAAQ,KAAKnD,KAAL,CAAWO,IAAnB;AACE,aAAK,SAAL;AACE,iBAAO,KAAK8B,OAAL,EAAP;;AACF,aAAK,SAAL;AACE,iBAAO,KAAKQ,cAAL,EAAP;;AACF,aAAK,SAAL;AACE,iBAAO,KAAKE,SAAL,EAAP;AANJ;AAQD,KA5JyC;;AAAA,SAgK1CK,SAhK0C,GAgK9B,MAAM;AAAA,YACT/D,MADS,GACE,KAAKwB,KADP,CACTxB,MADS;AAEhBA,MAAAA,MAAM;AACNgE,MAAAA,YAAY,CAACC,KAAb;AACDD,MAAAA,YAAY,CAACd,MAAb,KAAwB,CAAxB,IAA6B,KAAKgB,kBAAL,EAA7B;AAEA,KAtKyC;;AAAA,SAwK1CA,kBAxK0C,GAwKvB,MAAI;AAAA,2BACa,KAAK1C,KADlB;AAAA,YACd2C,cADc,gBACdA,cADc;AAAA,YACEnE,MADF,gBACEA,MADF;AAErBA,MAAAA,MAAM;AACN,WAAKwB,KAAL,CAAWmC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,KA5KyC;;AAAA,SA6K1CP,QA7K0C,GA6K/B,MAAM;AAAA,YACPe,KADO,GACG,KAAK5C,KADR,CACP4C,KADO;AAEf,YAAMC,SAAS,GAAG,EAAlB;;AACA,UAAI,CAAC,CAACD,KAAN,EAAa;AACX,aAAK5C,KAAL,CAAW4C,KAAX,CAAiBE,OAAjB,CAAyB5C,IAAI,IAAI2C,SAAS,CAAC3C,IAAI,CAACiB,EAAN,CAAT,GAAqBjB,IAAI,CAAC6C,QAA3D;AACA,eAAOF,SAAP;AACD;AACF,KApLyC;AAAA;;AAgB1CG,EAAAA,iBAAiB,GAAG;AAElB3C,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAFkB,yBAG4B,KAAKN,KAHjC;AAAA,UAGV5B,SAHU,gBAGVA,SAHU;AAAA,UAGC+D,OAHD,gBAGCA,OAHD;AAAA,UAGS1D,aAHT,gBAGSA,aAHT;AAIlBL,IAAAA,SAAS,CAACoE,YAAY,CAACS,KAAd,CAAT;AAEA,KAACT,YAAY,CAACS,KAAd,GAAsBd,OAAO,CAACC,IAAR,CAAa,GAAb,CAAtB,GAA0C3D,aAAa,EAAvD;AAKD,GA3ByC,CA6B1C;;;AAyJAyE,EAAAA,MAAM,GAAG;AACP;AACA7C,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,KAAKN,KAAzC;AAFO,yBAImD,KAAKA,KAJxD;AAAA,UAICmD,MAJD,gBAICA,MAJD;AAAA,UAISjD,IAJT,gBAISA,IAJT;AAAA,UAIeE,MAJf,gBAIeA,MAJf;AAAA,UAIuB+B,OAJvB,gBAIuBA,OAJvB;AAAA,UAIgCQ,cAJhC,gBAIgCA,cAJhC;AAAA,UAKC9C,UALD,GAKgB,KAAKV,KALrB,CAKCU,UALD;AAMP,SAAKgC,QAAL;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAoB,MAAA,OAAO,EAAE,MAAM,KAAKI,eAAL,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKjC,KAAL,CAAWE,IAAnB,cAA3D,CAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,EAAE,EAAE,KAAKf,KAAL,CAAWgC,EAAxC;AAA4C,MAAA,OAAO,EAAE,MAAM,KAAKT,QAAL,CAAc;AAAEhB,QAAAA,IAAI,EAAE;AAAR,OAAd,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAJF,EAQE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,OAAO,EAAE,MAAM,KAAKgB,QAAL,CAAc;AAAEhB,QAAAA,IAAI,EAAE;AAAR,OAAd,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8E;AAAK,MAAA,GAAG,EAAE3B,IAAV;AAAgB,MAAA,EAAE,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9E,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB;AAAM,MAAA,OAAO,EAAE,KAAKwE,SAApB;AAA+B,MAAA,EAAE,EAAC,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAxB,CAFF,CARF,CAFF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,CAAC,CAAC,CAACC,YAAY,CAACS,KAAhB,IAAyB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CApBF,EAqBE;AAAK,MAAA,SAAS,EAAE,CAAC,CAAC,CAACT,YAAY,CAACS,KAAhB,GAAwB,UAAxB,GAAqC,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKX,YAAL,EAFH,EAGG,KAAKnD,KAAL,CAAWO,IAAX,KAAoB,SAApB,GAAgC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAhC,GAAsG,yCAHzG,CArBF,CADF;AAgCD;;AA9NyC;;AAiO5C,MAAM0D,eAAe,GAAIjE,KAAD,IAAW;AACjC,SAAO;AACLe,IAAAA,IAAI,EAAEf,KAAK,CAACyD,KAAN,CAAYG,QADb;AAEL9C,IAAAA,MAAM,EAAEd,KAAK,CAACyD,KAAN,CAAYzB,EAFf;AAGLyB,IAAAA,KAAK,EAAEzD,KAAK,CAACyD,KAAN,CAAYS,GAHd;AAIL5B,IAAAA,KAAK,EAAEtC,KAAK,CAACyC,IAAN,CAAWH,KAJb;AAKLtB,IAAAA,aAAa,EAAEhB,KAAK,CAACyC,IAAN,CAAW0B,SALrB;AAMLX,IAAAA,cAAc,EAAExD,KAAK,CAACoE,KAAN,CAAYD;AANvB,GAAP;AAQD,CATD;;AAWA,eAAerF,OAAO,CAACmF,eAAD,EAAkB;AAAEpF,EAAAA,UAAF;AAAcE,EAAAA,OAAd;AAAuBG,EAAAA,aAAvB;AAAsCD,EAAAA,SAAtC;AAAiDE,EAAAA,UAAjD;AAA6DH,EAAAA,WAA7D;AAA0EI,EAAAA,UAA1E;AAAsFC,EAAAA,MAAtF;AAA8FC,EAAAA;AAA9F,CAAlB,CAAP,CAAwIQ,aAAxI,CAAf","sourcesContent":["import React from \"react\";\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Follows from './components/Follows';\nimport Jack from \"./img/jack.jpg\";\nimport { getFollows } from './redux/actions/FollowActions';\nimport { connect } from 'react-redux';\nimport { getPost, editCaption } from './redux/actions/PostActions';\nimport { fetchUser, fetchAllUsers } from './redux/actions/UserActions';\nimport { addComment } from './redux/actions/CommentsActions';\nimport { changeLike } from './redux/actions/PostActions';\nimport { logout, notRequesting } from './redux/actions/LoginActions';\nimport Loader from './components/loader';\n\n\n\nimport { Card, Form, Navbar, Button, NavbarBrand, Nav } from \"react-bootstrap\";\n\nclass HomeContainer extends React.Component {\n  state = {\n    showCommentField: false,\n    comment: \"\",\n    post_id: \"\",\n    Picture: \"\",\n    caption: \"\",\n    likes: 0,\n    page: \"thePost\",\n    editingCaption: false,\n    liked: false,\n    requesting: false\n\n\n  };\n\n  componentDidMount() {\n\n    console.log(\"HOME CONTAINER\")\n    const { fetchUser, history,notRequesting  } = this.props\n    fetchUser(localStorage.token)\n\n    !localStorage.token ? history.push('/') : notRequesting()\n\n\n     \n\n  }\n\n  // COMMENTS //\n  submitComment = (postId) => {\n    const { userid, addComment, user, requestedPost } = this.props\n    const { userId, comment } = this.state\n    console.log(\n      \"Post_id\",\n      postId,\n      \"User is:\",\n      user,\n      \"comment: \",\n      this.state.comment\n    );\n    const body = {\n      post_id: postId,\n      content: comment,\n      followee_id: userid\n    }\n    addComment(body)\n    !requestedPost && this.setState({ comment: \" \", showCommentField: false })\n  };\n\n\n  resetCommentLength = () => {\n    this.setState({ comment: \"\" })\n  }\n  handleComment = e => {\n    // console.log(e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // EDIT CAPTION\n\n  getCapField = () => {\n    this.setState({ editingCaption: !this.state.editingCaption })\n  }\n  handleEditSubmit = (id) => {\n    this.props.editCaption(id, this.state.comment)\n    this.setState({ comment: \"\" })\n    this.getCapField()\n  }\n  showCommentField = () => {\n    return this.setState({ showCommentField: !this.state.showCommentField })\n  }\n  addLike = (id, like) => {\n    this.setState({ liked: !this.state.liked })\n    const numLikes = like + 1\n    this.props.changeLike(id, numLikes, \"add\")\n  }\n  deleteLike = (id, like) => {\n    this.setState({ liked: !this.state.liked })\n    const numLikes = like - 1\n    this.props.changeLike(id, numLikes, \"\")\n  }\n\n\n  // POST STUFF \n\n  thePost = () => {\n    const { posts } = this.props\n    const { comment, showCommentField, editingCaption, liked } = this.state\n    return posts && posts.length > 0 ? posts.map(post => (\n\n      <Postcard\n        post={post}\n        commentLen={comment.length}\n        toggleCommentField={this.showCommentField}\n        commentFieldStatus={showCommentField}\n        id={post.id}\n        resetComment={this.resetCommentLength}\n        submitComment={() => this.submitComment(post.id, post.userId)}\n        handleComment={this.handleComment}\n        getCapEditField={this.getCapField}\n        editCapStatus={editingCaption}\n        submitCapEdit={this.handleEditSubmit}\n        addLike={this.addLike}\n        disLike={this.deleteLike}\n        liked={liked}\n        commentors={this.theUsers}\n      />\n    )) : console.log(\"The Post didnt work, here are the props:\", this.props)\n  };\n\n\n\n  // NEW POST STUFF \n  // SUBMIT THE COMMENT /FETCH POST\n  handleNewPostClick = () => {\n    this.setState({ newPost: !this.state.newPost });\n  };\n\n  theNewPostCard = props => {\n    const { userid } = this.props\n    return (\n      <NewPostCard\n        back={this.returnToThePost}\n      />\n    );\n  };\n\n  myProfile = () => {\n    this.props.history.push('/profile')\n  };\n\n\n  returnToThePost = () => {\n    this.setState({ page: \"thePost\" })\n  }\n\n\n  handleNewPost = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  pageToRender = () => {\n\n    switch (this.state.page) {\n      case \"thePost\":\n        return this.thePost()\n      case \"newPost\":\n        return this.theNewPostCard()\n      case \"profile\":\n        return this.myProfile()\n    }\n  }\n\n  // LOGOUT //\n\n  appLogout = () => {\n    const {logout } = this.props\n    logout()\n    localStorage.clear()\n   localStorage.length === 0 && this.returnToLogoutPage()\n   \n  }\n\n  returnToLogoutPage=()=>{\n    const {requestedLogin, logout } = this.props\n    logout()\n    this.props.history.push('/') \n  }\n  theUsers = () => {\n    const { users } = this.props\n    const commentor = {}\n    if (!!users) {\n      this.props.users.forEach(user => commentor[user.id] = user.username)\n      return commentor\n    }\n  }\n\n  render() {\n    // debugger\n    console.log(\"Home Container props\", this.props);\n\n    const { fposts, user, userId, history, requestedLogin } = this.props;\n    const { requesting } = this.state\n    this.theUsers()\n\n    return (\n      <div className=\"Home-Container\">\n        <Follows />\n        <div className=\"Homepage-nav\">\n\n          <div id=\"jays-gram\" onClick={() => this.returnToThePost()}><span >{this.props.user}s'taGram </span></div>\n\n          <div>\n            <span className=\"camera\" id={this.state.id} onClick={() => this.setState({ page: \"newPost\" })}> 📸 </span>\n          </div>\n\n          <div className=\"thumb-and-button\">\n            <div className=\"thumbnail\" onClick={() => this.setState({ page: \"profile\" })}><img src={Jack} id='thumbnail' /> </div>\n            <div className=\"logout\"><span onClick={this.appLogout} id=\"logout-button\" > logout  </span></div>\n\n\n\n          </div>\n\n\n        </div>\n        <div>{!!!localStorage.token && <Loader />}</div>\n        <div className={!!!localStorage.token ? \"loading \" : \"Home-Content\"}>\n\n          {this.pageToRender()}\n          {this.state.page !== \"newPost\" ? <div className=\"Home-footer\">Copyright &copy; 2019 Jaystagram</div> : <></>}\n        </div>\n      </div>\n\n\n\n    );\n  }\n\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    users: state.users.all,\n    posts: state.post.posts,\n    requestedPost: state.post.requested,\n    requestedLogin: state.login.requested\n  }\n}\n\nexport default connect(mapStateToProps, { getFollows, getPost, fetchAllUsers, fetchUser, addComment, editCaption, changeLike, logout, notRequesting })(HomeContainer);\n\n\n"]},"metadata":{},"sourceType":"module"}