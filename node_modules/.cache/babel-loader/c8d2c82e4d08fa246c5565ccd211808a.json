{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/FlatIron/Mod_4/Project/MyStagram/MyFront-end/src/components/NewPostCard.js\";\nimport React from \"react\";\nimport '../css/newPostCard.css';\nimport { storage } from '../firebase/index';\nimport Loader from '../components/loader'; //  SET UP FETCH POST FOR NEW POST AND CREATE MIGRATTION FOR CAPTION FOR POST AND SET UP TO GO BACK THE HOME PAGE AFTER POST IS FINISHED POSTING\n\nclass NewPostCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      image: null,\n      url: \"\",\n      caption: \"\",\n      loading: false\n    };\n\n    this.selectedFileHander = e => {\n      if (e.target.files[0]) {\n        this.setState({\n          image: e.target.files[0]\n        });\n      }\n\n      ;\n    };\n\n    this.handleSubmit = () => {\n      const image = this.state.image;\n      const uploadTask = storage.ref(\"images/\".concat(image.name)).put(image);\n      uploadTask.on('state_change', snapshot => {}, error => {\n        console.log(error);\n      }, () => {\n        storage.ref('images').child(image.name).getDownloadURL().then(url => {\n          console.log(url);\n        });\n      }); //  this.props.submitPost(this.state.caption)\n      //[funcName].on(progress, error, complete) these are the task for the arguments that '.on()' takes\n    };\n\n    this.handleTextChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n  }\n\n  render() {\n    console.log(\"NewPost Card props:\", this.props, \"New card State\", this.state);\n    const _this$props = this.props,\n          handleNewPost = _this$props.handleNewPost,\n          state = _this$props.state,\n          submitPost = _this$props.submitPost,\n          userId = _this$props.userId;\n    return React.createElement(React.Fragment, null, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), this.state.loading ? React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }) : React.createElement(\"p\", {\n      className: \"new-post-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Make New Post\"), React.createElement(\"div\", {\n      className: \"the-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.selectedFileHander,\n      style: {\n        display: \"none\"\n      },\n      ref: fileInput => this.fileInput = fileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"img-box\",\n      onClick: () => this.fileInput.click(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require(\"../img/pic_placeholder.png\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"post-text-area\",\n      rows: \"5\",\n      cols: \"30\",\n      placeholder: \"#litty #\\uD83D\\uDD25 last night was mad trill\",\n      style: {\n        color: \"light-blue\"\n      },\n      name: \"caption\",\n      value: this.state.caption,\n      onChange: this.handleTextChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      onClick: this.handleSubmit,\n      id: \"post-submit-plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"\\u271A\")));\n  }\n\n}\n\nexport default NewPostCard;","map":{"version":3,"sources":["/Users/owner/Desktop/FlatIron/Mod_4/Project/MyStagram/MyFront-end/src/components/NewPostCard.js"],"names":["React","storage","Loader","NewPostCard","Component","state","image","url","caption","loading","selectedFileHander","e","target","files","setState","handleSubmit","uploadTask","ref","name","put","on","snapshot","error","console","log","child","getDownloadURL","then","handleTextChange","value","render","props","handleNewPost","submitPost","userId","display","fileInput","click","require","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../css/newPostCard.css';\nimport { storage } from '../firebase/index';\nimport Loader from '../components/loader'\n\n\n\n\n//  SET UP FETCH POST FOR NEW POST AND CREATE MIGRATTION FOR CAPTION FOR POST AND SET UP TO GO BACK THE HOME PAGE AFTER POST IS FINISHED POSTING\n\nclass NewPostCard extends React.Component {\n\n  state = {\n    image: null,\n    url: \"\",\n    caption: \"\",\n    loading: false\n  }\n\n  selectedFileHander = (e) => {\n    if (e.target.files[0]) { this.setState({ image: e.target.files[0] }) };\n\n  }\n  handleSubmit = () => {\n    const { image } = this.state;\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on('state_change', (snapshot) => {\n     \n    },\n      (error) => {\n        console.log(error);\n\n      },\n      () => {\n        storage.ref('images').child(image.name).getDownloadURL().then(url => {\n          console.log(url)\n        })\n      })\n\n    //  this.props.submitPost(this.state.caption)\n    //[funcName].on(progress, error, complete) these are the task for the arguments that '.on()' takes\n  }\n  handleTextChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n  render() {\n    console.log(\"NewPost Card props:\", this.props, \"New card State\", this.state);\n    const { handleNewPost, state, submitPost, userId } = this.props;\n    return (\n      <><br />{this.state.loading ? <Loader /> : <p className=\"new-post-heading\">Make New Post</p>}\n        <div className=\"the-card\">\n\n          <input type=\"file\" onChange={this.selectedFileHander} style={{ display: \"none\" }} ref={fileInput => this.fileInput = fileInput} />\n          <div className=\"img-box\" onClick={() => this.fileInput.click()}>\n\n            <img src={require(\"../img/pic_placeholder.png\")} />\n          </div>\n\n          <div>\n            <textarea className=\"post-text-area\" rows=\"5\" cols=\"30\" placeholder=\"#litty #ðŸ”¥ last night was mad trill\" style={{ color: \"light-blue\" }} name=\"caption\" value={this.state.caption} onChange={this.handleTextChange}></textarea>\n\n            <span></span>\n          </div>\n          <span onClick={this.handleSubmit} id=\"post-submit-plus\">\n            âœš\n          </span>\n\n\n        </div>\n      </>\n    );\n  }\n}\nexport default NewPostCard;\n"]},"metadata":{},"sourceType":"module"}