{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js\";\nimport React from \"react\";\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Jack from \"./img/jack.jpg\";\nimport { connect } from 'react-redux';\nimport { getPost, editCaption } from './redux/actions/PostActions';\nimport { fetchUser } from './redux/actions/UserActions';\nimport { addComment } from './redux/actions/CommentsActions';\nimport Loader from './components/loader';\nimport { Card, Form, Navbar, Button, NavbarBrand, Nav } from \"react-bootstrap\";\n\nclass HomeContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showCommentField: false,\n      comment: \"\",\n      post_id: \"\",\n      Picture: \"\",\n      caption: \"\",\n      likes: 0,\n      page: \"thePost\",\n      editingCaption: false\n    };\n\n    this.resetCommentLength = () => {\n      this.setState({\n        comment: \"\"\n      });\n    };\n\n    this.handleComment = e => {\n      // console.log(e.target.value);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleCaptionEdit = e => {\n      this.setState({\n        editingCaption: !this.state.editingCaption\n      }); // this.setState({ [e.target.name]: e.target.value}) \n\n      console.log(this.state.editingCaption);\n    };\n\n    this.handleEditSubmit = id => {\n      this.propseditCaption();\n    };\n\n    this.showCommentField = () => {\n      return this.setState({\n        showCommentField: !this.state.showCommentField\n      });\n    };\n\n    this.thePost = () => {\n      const posts = this.props.posts;\n      return posts && posts.length > 0 ? posts.map(post => React.createElement(Postcard, {\n        post: post,\n        commentLen: this.state.comment.length,\n        toggleCommentField: this.showCommentField,\n        commentFieldStatus: this.state.showCommentField,\n        id: post.id,\n        resetComment: this.resetCommentLength,\n        submitComment: () => this.submitComment(post.id, post.userId),\n        handleComment: this.handleComment,\n        editCaption: this.handleCaptionEdit,\n        editCapStatus: this.state.editingCaption,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })) : console.log(\"The Post didnt work, here are the props:\", this.props);\n    };\n\n    this.handleNewPostClick = () => {\n      this.setState({\n        newPost: !this.state.newPost\n      });\n    };\n\n    this.theNewPostCard = props => {\n      const userid = this.props.userid;\n      return React.createElement(NewPostCard, {\n        handleNewPost: this.handleNewPost,\n        submitPost: () => userid,\n        state: this.state,\n        userId: userid,\n        back: this.returnToThePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      });\n    };\n\n    this.myProfile = () => {\n      this.props.history.push('/profile');\n    };\n\n    this.returnToThePost = () => {\n      this.setState({\n        page: \"thePost\"\n      });\n    };\n\n    this.handleNewPost = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.pageToRender = () => {\n      switch (this.state.page) {\n        case \"thePost\":\n          return this.thePost();\n\n        case \"newPost\":\n          return this.theNewPostCard();\n\n        case \"profile\":\n          return this.myProfile();\n      }\n    };\n\n    this.logout = () => {\n      localStorage.clear();\n      this.props.history.push('/');\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Home Page CONTAINER MOUNTED\");\n    const _this$props = this.props,\n          fetchUser = _this$props.fetchUser,\n          getPost = _this$props.getPost;\n    fetchUser(localStorage.token);\n    getPost();\n  } // COMMENTS //\n\n\n  render() {\n    // debugger\n    console.log(\"Home Container props\", this.props);\n    const _this$props2 = this.props,\n          fposts = _this$props2.fposts,\n          user = _this$props2.user,\n          userId = _this$props2.userId,\n          history = _this$props2.history;\n    return React.createElement(\"div\", {\n      className: \"Home-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Homepage-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"jays-gram\",\n      onClick: () => this.returnToThePost(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, this.props.user, \"s'taGram \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"camera\",\n      id: this.state.id,\n      onClick: () => this.setState({\n        page: \"newPost\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \" \\uD83D\\uDCF8 \")), React.createElement(\"div\", {\n      className: \"thumb-and-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"thumbnail\",\n      onClick: () => this.setState({\n        page: \"profile\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: Jack,\n      id: \"thumbnail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      className: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.logout,\n      id: \"logout-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \" logout  \")))), React.createElement(\"div\", {\n      className: \"Home-Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.props.postRequest && React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), this.pageToRender(), this.state.page !== \"newPost\" ? React.createElement(\"div\", {\n      className: \"Home-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Copyright \\xA9 2019 Jaystagram\") : React.createElement(React.Fragment, null)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    posts: state.post.posts.data,\n    postRequested: state.post.requested\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPost,\n  fetchUser,\n  addComment,\n  editCaption\n})(HomeContainer);","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js"],"names":["React","Postcard","NewPostCard","Jack","connect","getPost","editCaption","fetchUser","addComment","Loader","Card","Form","Navbar","Button","NavbarBrand","Nav","HomeContainer","Component","state","showCommentField","comment","post_id","Picture","caption","likes","page","editingCaption","resetCommentLength","setState","handleComment","e","target","name","value","handleCaptionEdit","console","log","handleEditSubmit","id","propseditCaption","thePost","posts","props","length","map","post","submitComment","userId","handleNewPostClick","newPost","theNewPostCard","userid","handleNewPost","returnToThePost","myProfile","history","push","pageToRender","logout","localStorage","clear","componentDidMount","token","render","fposts","user","postRequest","mapStateToProps","users","username","data","postRequested","requested"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Jack from \"./img/jack.jpg\";\nimport { connect } from 'react-redux';\nimport { getPost, editCaption } from './redux/actions/PostActions';\nimport { fetchUser } from './redux/actions/UserActions';\nimport { addComment } from './redux/actions/CommentsActions'\nimport Loader from './components/loader'\n\n\nimport { Card, Form, Navbar, Button, NavbarBrand, Nav } from \"react-bootstrap\";\n\nclass HomeContainer extends React.Component {\n  state = {\n    showCommentField: false,\n    comment: \"\",\n    post_id: \"\",\n    Picture: \"\",\n    caption: \"\",\n    likes: 0,\n    page: \"thePost\",\n    editingCaption: false\n\n  };\n\n  componentDidMount() {\n    console.log(\"Home Page CONTAINER MOUNTED\")\n    const { fetchUser, getPost } = this.props\n    fetchUser(localStorage.token)\n    getPost()\n\n  }\n\n  // COMMENTS //\n\n  resetCommentLength = () => {\n    this.setState({comment: \"\"})\n  }\n  handleComment = e => {\n    // console.log(e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  handleCaptionEdit=(e)=>{\n    this.setState( {editingCaption: !this.state.editingCaption} )\n    // this.setState({ [e.target.name]: e.target.value}) \n    console.log(this.state.editingCaption)\n  }\n  handleEditSubmit=(id)=>{\n    this.propseditCaption()\n  }\n  showCommentField = () => {\n    return this.setState({ showCommentField: !this.state.showCommentField })\n  }\n\n\n\n// POST STUFF \n\n  thePost = () => {\n    const { posts } = this.props\n    return posts && posts.length > 0 ? posts.map(post => (\n      <Postcard\n        post={post}\n        commentLen={this.state.comment.length}\n        toggleCommentField={this.showCommentField}\n        commentFieldStatus={this.state.showCommentField}\n        id={post.id}\n        resetComment={this.resetCommentLength}\n        submitComment={() => this.submitComment(post.id, post.userId)}\n        handleComment={this.handleComment}\n        editCaption={this.handleCaptionEdit}\n        editCapStatus={this.state.editingCaption}\n      />\n    )) : console.log(\"The Post didnt work, here are the props:\", this.props)\n  };\n\n\n\n  // NEW POST STUFF \n  // SUBMIT THE COMMENT /FETCH POST\n  handleNewPostClick = () => {\n    this.setState({ newPost: !this.state.newPost });\n  };\n\n  theNewPostCard = props => {\n    const { userid } = this.props\n    return (\n      <NewPostCard\n        handleNewPost={this.handleNewPost}\n        submitPost={() => (userid)}\n        state={this.state}\n        userId={userid}\n        back={this.returnToThePost}\n\n      />\n    );\n  };\n\n  myProfile = () => {\n    this.props.history.push('/profile')\n\n  };\n\n\n  returnToThePost = () => {\n    this.setState({ page: \"thePost\" })\n  }\n  \n\n  handleNewPost = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  pageToRender = () => {\n\n    switch (this.state.page) {\n      case \"thePost\":\n        return this.thePost()\n      case \"newPost\":\n        return this.theNewPostCard()\n      case \"profile\":\n        return this.myProfile()\n    }\n  }\n  logout = () => {\n    localStorage.clear()\n    this.props.history.push('/')\n  }\n\n\n  render() {\n    // debugger\n    console.log(\"Home Container props\", this.props);\n\n    const { fposts, user, userId, history } = this.props;\n\n    return (\n      <div className=\"Home-Container\">\n        <div className=\"Homepage-nav\">\n\n          <div id=\"jays-gram\" onClick={() => this.returnToThePost()}><span >{this.props.user}s'taGram </span></div>\n\n          <div>\n            <span className=\"camera\" id={this.state.id} onClick={() => this.setState({ page: \"newPost\" })}> 📸 </span>\n          </div>\n\n          <div className=\"thumb-and-button\">\n            <div className=\"thumbnail\" onClick={() => this.setState({ page: \"profile\" })}><img src={Jack} id='thumbnail' /> </div>\n            <div className=\"logout\"><span onClick={this.logout} id=\"logout-button\" > logout  </span></div>\n\n\n\n          </div>\n\n\n        </div>\n        <div className=\"Home-Content\">\n          {this.props.postRequest && <Loader />}\n          {this.pageToRender()}\n          {this.state.page !== \"newPost\" ? <div className=\"Home-footer\">Copyright &copy; 2019 Jaystagram</div> : <></>}\n        </div>\n      </div>\n\n\n\n    );\n  }\n\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    posts: state.post.posts.data,\n    postRequested: state.post.requested\n  }\n}\n\nexport default connect(mapStateToProps, { getPost, fetchUser, addComment,editCaption })(HomeContainer);\n\n"]},"metadata":{},"sourceType":"module"}