{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js\";\nimport React from \"react\";\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Follows from './components/Follows';\nimport Jack from \"./img/jack.jpg\";\nimport { getFollows } from './redux/actions/FollowActions';\nimport { connect } from 'react-redux';\nimport { getPost, editCaption } from './redux/actions/PostActions';\nimport { fetchUser, fetchAllUsers } from './redux/actions/UserActions';\nimport { addComment } from './redux/actions/CommentsActions';\nimport { changeLike } from './redux/actions/PostActions';\nimport Loader from './components/loader';\nimport { Card, Form, Navbar, Button, NavbarBrand, Nav } from \"react-bootstrap\";\n\nclass HomeContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showCommentField: false,\n      comment: \"\",\n      post_id: \"\",\n      Picture: \"\",\n      caption: \"\",\n      likes: 0,\n      page: \"thePost\",\n      editingCaption: false,\n      liked: false\n    };\n\n    this.submitComment = postId => {\n      const _this$props = this.props,\n            userid = _this$props.userid,\n            addComment = _this$props.addComment,\n            user = _this$props.user;\n      const _this$state = this.state,\n            userId = _this$state.userId,\n            comment = _this$state.comment;\n      console.log(\"Post_id\", postId, \"User is:\", user, \"comment: \", this.state.comment);\n      const body = {\n        post_id: postId,\n        content: comment,\n        followee_id: userid\n      };\n      addComment(body);\n      this.setState({\n        comment: \" \",\n        showCommentField: false\n      });\n    };\n\n    this.resetCommentLength = () => {\n      this.setState({\n        comment: \"\"\n      });\n    };\n\n    this.handleComment = e => {\n      // console.log(e.target.value);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.getCapField = () => {\n      this.setState({\n        editingCaption: !this.state.editingCaption\n      });\n    };\n\n    this.handleEditSubmit = id => {\n      this.props.editCaption(id, this.state.comment);\n      this.setState({\n        comment: \"\"\n      });\n      this.getCapField();\n    };\n\n    this.showCommentField = () => {\n      return this.setState({\n        showCommentField: !this.state.showCommentField\n      });\n    };\n\n    this.addLike = (id, like) => {\n      this.setState({\n        liked: !this.state.liked\n      });\n      const numLikes = like + 1;\n      this.props.changeLike(id, numLikes, \"add\");\n    };\n\n    this.deleteLike = (id, like) => {\n      this.setState({\n        liked: !this.state.liked\n      });\n      const numLikes = like - 1;\n      this.props.changeLike(id, numLikes, \"\");\n    };\n\n    this.thePost = () => {\n      const posts = this.props.posts;\n      const _this$state2 = this.state,\n            comment = _this$state2.comment,\n            showCommentField = _this$state2.showCommentField,\n            editingCaption = _this$state2.editingCaption,\n            liked = _this$state2.liked;\n      return posts && posts.length > 0 ? posts.map(post => React.createElement(Postcard, {\n        post: post,\n        commentLen: comment.length,\n        toggleCommentField: this.showCommentField,\n        commentFieldStatus: showCommentField,\n        id: post.id,\n        resetComment: this.resetCommentLength,\n        submitComment: () => this.submitComment(post.id, post.userId),\n        handleComment: this.handleComment,\n        getCapEditField: this.getCapField,\n        editCapStatus: editingCaption,\n        submitCapEdit: this.handleEditSubmit,\n        addLike: this.addLike,\n        disLike: this.deleteLike,\n        liked: liked,\n        commentors: this.theUsers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })) : console.log(\"The Post didnt work, here are the props:\", this.props);\n    };\n\n    this.handleNewPostClick = () => {\n      this.setState({\n        newPost: !this.state.newPost\n      });\n    };\n\n    this.theNewPostCard = props => {\n      const userid = this.props.userid;\n      return React.createElement(NewPostCard, {\n        back: this.returnToThePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      });\n    };\n\n    this.myProfile = () => {\n      this.props.history.push('/profile');\n    };\n\n    this.returnToThePost = () => {\n      this.setState({\n        page: \"thePost\"\n      });\n    };\n\n    this.handleNewPost = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.pageToRender = () => {\n      switch (this.state.page) {\n        case \"thePost\":\n          return this.thePost();\n\n        case \"newPost\":\n          return this.theNewPostCard();\n\n        case \"profile\":\n          return this.myProfile();\n      }\n    };\n\n    this.logout = () => {\n      localStorage.clear();\n      this.props.history.push('/');\n    };\n\n    this.theUsers = () => {\n      const users = this.props.users;\n      const commentor = {};\n\n      if (!!users) {\n        this.props.users.forEach(user => commentor[user.id] = user.username);\n        return commentor;\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Home Page CONTAINER MOUNTED\");\n    const _this$props2 = this.props,\n          fetchUser = _this$props2.fetchUser,\n          getPost = _this$props2.getPost,\n          getFollows = _this$props2.getFollows,\n          fetchAllUsers = _this$props2.fetchAllUsers;\n    fetchUser(localStorage.token);\n    fetchAllUsers();\n    getFollows();\n    getPost();\n  } // COMMENTS //\n\n\n  render() {\n    // debugger\n    // console.log(\"Home Container props\", this.props);\n    const _this$props3 = this.props,\n          fposts = _this$props3.fposts,\n          user = _this$props3.user,\n          userId = _this$props3.userId,\n          history = _this$props3.history;\n    this.theUsers();\n    return React.createElement(\"div\", {\n      className: \"Home-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Follows, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Homepage-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"jays-gram\",\n      onClick: () => this.returnToThePost(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, this.props.user, \"s'taGram \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"camera\",\n      id: this.state.id,\n      onClick: () => this.setState({\n        page: \"newPost\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \" \\uD83D\\uDCF8 \")), React.createElement(\"div\", {\n      className: \"thumb-and-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"thumbnail\",\n      onClick: () => this.setState({\n        page: \"profile\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: Jack,\n      id: \"thumbnail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      className: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.logout,\n      id: \"logout-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \" logout  \")))), React.createElement(\"div\", {\n      className: \"Home-Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, this.props.postRequest && React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), this.pageToRender(), this.state.page !== \"newPost\" ? React.createElement(\"div\", {\n      className: \"Home-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Copyright \\xA9 2019 Jaystagram\") : React.createElement(React.Fragment, null)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    users: state.users.all,\n    posts: state.post.posts,\n    postRequested: state.post.requested\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getFollows,\n  getPost,\n  fetchAllUsers,\n  fetchUser,\n  addComment,\n  editCaption,\n  changeLike\n})(HomeContainer);","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js"],"names":["React","Postcard","NewPostCard","Follows","Jack","getFollows","connect","getPost","editCaption","fetchUser","fetchAllUsers","addComment","changeLike","Loader","Card","Form","Navbar","Button","NavbarBrand","Nav","HomeContainer","Component","state","showCommentField","comment","post_id","Picture","caption","likes","page","editingCaption","liked","submitComment","postId","props","userid","user","userId","console","log","body","content","followee_id","setState","resetCommentLength","handleComment","e","target","name","value","getCapField","handleEditSubmit","id","addLike","like","numLikes","deleteLike","thePost","posts","length","map","post","theUsers","handleNewPostClick","newPost","theNewPostCard","returnToThePost","myProfile","history","push","handleNewPost","pageToRender","logout","localStorage","clear","users","commentor","forEach","username","componentDidMount","token","render","fposts","postRequest","mapStateToProps","all","postRequested","requested"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Follows from './components/Follows';\nimport Jack from \"./img/jack.jpg\";\nimport { getFollows } from './redux/actions/FollowActions';\nimport { connect } from 'react-redux';\nimport { getPost, editCaption } from './redux/actions/PostActions';\nimport { fetchUser,fetchAllUsers } from './redux/actions/UserActions';\nimport { addComment } from './redux/actions/CommentsActions'\nimport { changeLike } from './redux/actions/PostActions'\nimport Loader from './components/loader'\n\n\nimport { Card, Form, Navbar, Button, NavbarBrand, Nav } from \"react-bootstrap\";\n\nclass HomeContainer extends React.Component {\n  state = {\n    showCommentField: false,\n    comment: \"\",\n    post_id: \"\",\n    Picture: \"\",\n    caption: \"\",\n    likes: 0,\n    page: \"thePost\",\n    editingCaption: false,\n    liked: false\n\n  };\n\n  componentDidMount() {\n    console.log(\"Home Page CONTAINER MOUNTED\")\n    const { fetchUser, getPost, getFollows,fetchAllUsers } = this.props\n    fetchUser(localStorage.token)\n    fetchAllUsers()\n    getFollows()\n    getPost()\n\n  }\n\n  // COMMENTS //\n  submitComment = (postId) => {\n    const { userid, addComment,user } = this.props\n    const { userId, comment } = this.state\n    console.log(\n      \"Post_id\",\n      postId,\n      \"User is:\",\n      user,\n      \"comment: \",\n      this.state.comment\n    );\n    const body = {\n      post_id: postId,\n      content: comment,\n      followee_id: userid\n    }\n    addComment(body)\n\n     this.setState({ comment: \" \", showCommentField:false })\n  };\n\n  resetCommentLength = () => {\n    this.setState({ comment: \"\" })\n  }\n  handleComment = e => {\n    // console.log(e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  // EDIT CAPTION\n\n  getCapField = () => {\n    this.setState({ editingCaption: !this.state.editingCaption })\n  }\n  handleEditSubmit = (id) => {\n    this.props.editCaption(id, this.state.comment)\n    this.setState({ comment: \"\" })\n    this.getCapField()\n  }\n  showCommentField = () => {\n    return this.setState({ showCommentField: !this.state.showCommentField })\n  }\n  addLike = (id, like) => {\n    this.setState({ liked: !this.state.liked })\n    const numLikes = like + 1\n    this.props.changeLike(id, numLikes, \"add\")\n  }\n  deleteLike = (id, like) => {\n    this.setState({ liked: !this.state.liked })\n    const numLikes = like - 1\n    this.props.changeLike(id, numLikes, \"\")\n  }\n\n\n  // POST STUFF \n\n  thePost = () => {\n    const { posts } = this.props\n    const { comment, showCommentField, editingCaption, liked } = this.state\n    return posts && posts.length > 0 ? posts.map(post => (\n      <Postcard\n        post={post}\n        commentLen={comment.length}\n        toggleCommentField={this.showCommentField}\n        commentFieldStatus={showCommentField}\n        id={post.id}\n        resetComment={this.resetCommentLength}\n        submitComment={() => this.submitComment(post.id, post.userId)}\n        handleComment={this.handleComment}\n        getCapEditField={this.getCapField}\n        editCapStatus={editingCaption}\n        submitCapEdit={this.handleEditSubmit}\n        addLike={this.addLike}\n        disLike={this.deleteLike}\n        liked={liked}\n        commentors={this.theUsers}\n      />\n    )) : console.log(\"The Post didnt work, here are the props:\", this.props)\n  };\n\n\n\n  // NEW POST STUFF \n  // SUBMIT THE COMMENT /FETCH POST\n  handleNewPostClick = () => {\n    this.setState({ newPost: !this.state.newPost });\n  };\n\n  theNewPostCard = props => {\n    const { userid } = this.props\n    return (\n      <NewPostCard\n        back={this.returnToThePost}\n      />\n    );\n  };\n\n  myProfile = () => {\n    this.props.history.push('/profile')\n\n  };\n\n\n  returnToThePost = () => {\n    this.setState({ page: \"thePost\" })\n  }\n\n\n  handleNewPost = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  pageToRender = () => {\n\n    switch (this.state.page) {\n      case \"thePost\":\n        return this.thePost()\n      case \"newPost\":\n        return this.theNewPostCard()\n      case \"profile\":\n        return this.myProfile()\n    }\n  }\n  logout = () => {\n    localStorage.clear()\n    this.props.history.push('/')\n  }\ntheUsers=()=>{\n  const { users} = this.props\n  const commentor = {}\n  if (!!users){\n  this.props.users.forEach(user => commentor[user.id] = user.username)\n  return commentor\n  }\n}\n\n  render() {\n    // debugger\n    // console.log(\"Home Container props\", this.props);\n\n    const { fposts, user, userId, history } = this.props;\n    this.theUsers()\n\n    return (\n      <div className=\"Home-Container\">\n        <Follows />\n        <div className=\"Homepage-nav\">\n\n          <div id=\"jays-gram\" onClick={() => this.returnToThePost()}><span >{this.props.user}s'taGram </span></div>\n\n          <div>\n            <span className=\"camera\" id={this.state.id} onClick={() => this.setState({ page: \"newPost\" })}> 📸 </span>\n          </div>\n         \n          <div className=\"thumb-and-button\">\n            <div className=\"thumbnail\" onClick={() => this.setState({ page: \"profile\" })}><img src={Jack} id='thumbnail' /> </div>\n            <div className=\"logout\"><span onClick={this.logout} id=\"logout-button\" > logout  </span></div>\n\n\n\n          </div>\n\n\n        </div>\n        <div className=\"Home-Content\">\n          {this.props.postRequest && <Loader />}\n          {this.pageToRender()}\n          {this.state.page !== \"newPost\" ? <div className=\"Home-footer\">Copyright &copy; 2019 Jaystagram</div> : <></>}\n        </div>\n      </div>\n\n\n\n    );\n  }\n\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    users: state.users.all,\n    posts: state.post.posts,\n    postRequested: state.post.requested\n  }\n}\n\nexport default connect(mapStateToProps, { getFollows, getPost,fetchAllUsers, fetchUser, addComment, editCaption, changeLike })(HomeContainer);\n\n"]},"metadata":{},"sourceType":"module"}