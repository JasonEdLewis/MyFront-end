{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/App.js\";\nimport React from 'react';\nimport { Fragment } from \"react\";\nimport Login from \"./Login\";\nimport \"./App.css\";\nimport Profile from \"./Profile\";\nimport Signup from \"./Signup\";\nimport Home from \"./Homepage\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { getPost } from './redux/actions/PostActions';\nimport { fetchAllUsers } from './redux/actions/UserActions';\nimport { getFollows } from './redux/actions/FollowActions';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      page: \"/\"\n    };\n\n    this.redirect = page => {\n      this.setState({\n        page\n      });\n    };\n\n    this.logout = () => {\n      localStorage.clear();\n      this.redirect(\"/\");\n      localStorage.clear();\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          getPost = _this$props.getPost,\n          fetchAllUsers = _this$props.fetchAllUsers,\n          getFollows = _this$props.getFollows;\n    console.log(\"App MOUNTED\");\n\n    if (!localStorage.token) {\n      this.redirect(\"/\");\n    } else {\n      debugger;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/home\" // render={routerProps => <Home  {... routerProps}  history={this.props.history}/>} \n      ,\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile\",\n      component: Profile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: Signup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(null, {\n  getPost,\n  fetchAllUsers,\n  getFollows\n})(App);","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/App.js"],"names":["React","Fragment","Login","Profile","Signup","Home","BrowserRouter","Router","Switch","Route","connect","getPost","fetchAllUsers","getFollows","App","Component","state","page","redirect","setState","logout","localStorage","clear","componentDidMount","props","console","log","token","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAGA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,aAAT,QAA8B,6BAA9B;AACA,SAASC,UAAT,QAA2B,+BAA3B;;AAGA,MAAMC,GAAN,SAAkBd,KAAK,CAACe,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,IAAI,EAAE;AADA,KAFwB;;AAAA,SAMhCC,QANgC,GAMrBD,IAAI,IAAI;AACjB,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACD,KAR+B;;AAAA,SA0BhCG,MA1BgC,GA0BvB,MAAM;AAEbC,MAAAA,YAAY,CAACC,KAAb;AACA,WAAKJ,QAAL,CAAc,GAAd;AAEAG,MAAAA,YAAY,CAACC,KAAb;AACD,KAhC+B;AAAA;;AAUhCC,EAAAA,iBAAiB,GAAG;AAAA,wBAC6B,KAAKC,KADlC;AAAA,UACVb,OADU,eACVA,OADU;AAAA,UACDC,aADC,eACDA,aADC;AAAA,UACcC,UADd,eACcA,UADd;AAElBY,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,QAAI,CAACL,YAAY,CAACM,KAAlB,EAAyB;AACvB,WAAKT,QAAL,CAAc,GAAd;AAED,KAHD,MAIK;AACH;AAGD;AAGF;;AASDU,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAE1B,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,OAAlB,CACE;AADF;AAEE,MAAA,SAAS,EAAEG,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAME,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,UAAlB;AAA6B,MAAA,SAAS,EAAEF,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,SAAS,EAAEC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEF,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,CADF,CADF;AAkBD;;AArD+B;;AAyDlC,eAAeQ,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA;AAA1B,CAAP,CAAP,CAAsDC,GAAtD,CAAf","sourcesContent":["import React from 'react';\nimport { Fragment } from \"react\";\nimport Login from \"./Login\";\nimport \"./App.css\";\nimport Profile from \"./Profile\";\nimport Signup from \"./Signup\";\nimport Home from \"./Homepage\";\n\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { connect } from 'react-redux';\nimport { getPost } from './redux/actions/PostActions'\nimport { fetchAllUsers } from './redux/actions/UserActions'\nimport { getFollows } from './redux/actions/FollowActions'\n\n\nclass App extends React.Component {\n\n  state = {\n    page: \"/\"\n  }\n\n  redirect = page => {\n    this.setState({ page });\n  };\n\n  componentDidMount() {\n    const { getPost, fetchAllUsers, getFollows } = this.props\n    console.log(\"App MOUNTED\")\n    if (!localStorage.token) {\n      this.redirect(\"/\");\n\n    }\n    else {\n      debugger\n      \n\n    }\n\n\n  }\n\n  logout = () => {\n\n    localStorage.clear();\n    this.redirect(\"/\")\n\n    localStorage.clear()\n  };\n  render() {\n\n    return (\n      <div>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/home\"\n              // render={routerProps => <Home  {... routerProps}  history={this.props.history}/>} \n              component={Home}\n            />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route component={Login} />\n          </Switch>\n        </Router>\n      </div>\n    )\n\n\n  }\n}\n\n\nexport default connect(null, { getPost, fetchAllUsers, getFollows })(App);\n"]},"metadata":{},"sourceType":"module"}