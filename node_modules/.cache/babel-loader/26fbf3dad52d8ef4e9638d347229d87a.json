{"ast":null,"code":"import _toConsumableArray from\"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{USER_REQUEST,USER_SUCCESS,USER_FAILURE,UPDATE_USER,DELETE_USER,GET_ALL}from'../actions/types';var initialState={all:[],usersObj:{},username:\"\",email:\"\",id:\"\",bio:\"\",city:\"\",state:\"\",zip:\"\",picture:\"\",requested:null,errorMessage:\"\"};export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case USER_REQUEST:return _objectSpread({},state,{requested:true});case USER_SUCCESS:return _objectSpread({},state,{username:action.payload.username,id:action.payload.id,picture:action.payload.picture,bio:action.payload.bio,city:action.payload.city,state:action.payload.state,email:action.payload.email,requested:false});case USER_FAILURE:return _objectSpread({},state,{errorMessage:action.payload.message,requested:false});case UPDATE_USER:debugger;var updatedUsers=[action.payload].concat(_toConsumableArray(state.all));return _objectSpread({},state,{username:action.payload.username,email:action.payload.email,id:action.payload.id,bio:action.payload.bio,city:action.payload.city,state:action.payload.state,zip:action.payload.zip,picture:action.payload.picture,all:updatedUsers});case DELETE_USER:var users=state.all.filter(function(user){return user.id!==action.id;});return _objectSpread({},state,{all:users,requested:false});case GET_ALL:return _objectSpread({},state,{all:action.payload,usersObj:action.usersObj,requested:false});default:return state;}});","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/redux/reducers/UserReducer.js"],"names":["USER_REQUEST","USER_SUCCESS","USER_FAILURE","UPDATE_USER","DELETE_USER","GET_ALL","initialState","all","usersObj","username","email","id","bio","city","state","zip","picture","requested","errorMessage","action","type","payload","message","updatedUsers","users","filter","user"],"mappings":"qWAAA,OAASA,YAAT,CAAuBC,YAAvB,CAAqCC,YAArC,CAAmDC,WAAnD,CAAgEC,WAAhE,CAA6EC,OAA7E,KAA4F,kBAA5F,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,GAAG,CAAE,EADY,CAEjBC,QAAQ,CAAE,EAFO,CAGjBC,QAAQ,CAAE,EAHO,CAIjBC,KAAK,CAAE,EAJU,CAKjBC,EAAE,CAAE,EALa,CAMjBC,GAAG,CAAE,EANY,CAOjBC,IAAI,CAAE,EAPW,CAQjBC,KAAK,CAAE,EARU,CASjBC,GAAG,CAAE,EATY,CAUjBC,OAAO,CAAE,EAVQ,CAWjBC,SAAS,CAAE,IAXM,CAYjBC,YAAY,CAAE,EAZG,CAArB,CAgBA,eAAe,UAAkC,IAAjCJ,CAAAA,KAAiC,2DAAzBR,YAAyB,IAAXa,CAAAA,MAAW,2CAC7C,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKpB,CAAAA,YAAL,CACI,wBAAYc,KAAZ,EAAmBG,SAAS,CAAE,IAA9B,GAEJ,IAAKhB,CAAAA,YAAL,CACI,wBAAYa,KAAZ,EAAmBL,QAAQ,CAAEU,MAAM,CAACE,OAAP,CAAeZ,QAA5C,CAAsDE,EAAE,CAAEQ,MAAM,CAACE,OAAP,CAAeV,EAAzE,CAA6EK,OAAO,CAAEG,MAAM,CAACE,OAAP,CAAeL,OAArG,CAA8GJ,GAAG,CAAEO,MAAM,CAACE,OAAP,CAAeT,GAAlI,CAAuIC,IAAI,CAAEM,MAAM,CAACE,OAAP,CAAeR,IAA5J,CAAkKC,KAAK,CAAEK,MAAM,CAACE,OAAP,CAAeP,KAAxL,CAA+LJ,KAAK,CAAES,MAAM,CAACE,OAAP,CAAeX,KAArN,CAA4NO,SAAS,CAAE,KAAvO,GAEJ,IAAKf,CAAAA,YAAL,CACI,wBAAYY,KAAZ,EAAmBI,YAAY,CAAEC,MAAM,CAACE,OAAP,CAAeC,OAAhD,CAAyDL,SAAS,CAAE,KAApE,GAEJ,IAAKd,CAAAA,WAAL,CACI,SACA,GAAMoB,CAAAA,YAAY,EAAIJ,MAAM,CAACE,OAAX,4BAAsBP,KAAK,CAACP,GAA5B,EAAlB,CACA,wBACOO,KADP,EAEIL,QAAQ,CAAEU,MAAM,CAACE,OAAP,CAAeZ,QAF7B,CAGIC,KAAK,CAAES,MAAM,CAACE,OAAP,CAAeX,KAH1B,CAIIC,EAAE,CAAEQ,MAAM,CAACE,OAAP,CAAeV,EAJvB,CAKIC,GAAG,CAAEO,MAAM,CAACE,OAAP,CAAeT,GALxB,CAMIC,IAAI,CAAEM,MAAM,CAACE,OAAP,CAAeR,IANzB,CAOIC,KAAK,CAAEK,MAAM,CAACE,OAAP,CAAeP,KAP1B,CAQIC,GAAG,CAAEI,MAAM,CAACE,OAAP,CAAeN,GARxB,CASIC,OAAO,CAAEG,MAAM,CAACE,OAAP,CAAeL,OAT5B,CAUIT,GAAG,CAACgB,YAVR,GAaJ,IAAKnB,CAAAA,WAAL,CACI,GAAMoB,CAAAA,KAAK,CAAGV,KAAK,CAACP,GAAN,CAAUkB,MAAV,CAAiB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACf,EAAL,GAAYQ,MAAM,CAACR,EAAvB,EAArB,CAAd,CACA,wBACOG,KADP,EAEIP,GAAG,CAAEiB,KAFT,CAGIP,SAAS,CAAE,KAHf,GAMJ,IAAKZ,CAAAA,OAAL,CACI,wBACOS,KADP,EAEIP,GAAG,CAAEY,MAAM,CAACE,OAFhB,CAGIb,QAAQ,CAAEW,MAAM,CAACX,QAHrB,CAIIS,SAAS,CAAE,KAJf,GAOJ,QACI,MAAOH,CAAAA,KAAP,CA3CR,CA6CH,CA9CD","sourcesContent":["import { USER_REQUEST, USER_SUCCESS, USER_FAILURE, UPDATE_USER, DELETE_USER, GET_ALL } from '../actions/types'\n\nconst initialState = {\n    all: [],\n    usersObj: {},\n    username: \"\",\n    email: \"\",\n    id: \"\",\n    bio: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    picture: \"\",\n    requested: null,\n    errorMessage: \"\",\n\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case USER_REQUEST:\n            return { ...state, requested: true }\n\n        case USER_SUCCESS:\n            return { ...state, username: action.payload.username, id: action.payload.id, picture: action.payload.picture, bio: action.payload.bio, city: action.payload.city, state: action.payload.state, email: action.payload.email, requested: false }\n\n        case USER_FAILURE:\n            return { ...state, errorMessage: action.payload.message, requested: false }\n\n        case UPDATE_USER:\n            debugger\n            const updatedUsers = [action.payload,...state.all]\n            return {\n                ...state,\n                username: action.payload.username,\n                email: action.payload.email,\n                id: action.payload.id,\n                bio: action.payload.bio,\n                city: action.payload.city,\n                state: action.payload.state,\n                zip: action.payload.zip,\n                picture: action.payload.picture, \n                all:updatedUsers\n            }\n\n        case DELETE_USER:\n            const users = state.all.filter(user => user.id !== action.id)\n            return {\n                ...state,\n                all: users,\n                requested: false\n            }\n\n        case GET_ALL:\n            return {\n                ...state,\n                all: action.payload,\n                usersObj: action.usersObj,\n                requested: false\n\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}