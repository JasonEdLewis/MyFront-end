{"ast":null,"code":"import { USER_REQUEST, USER_SUCCESS, USER_FAILURE, GET_ALL, CREATE_USER, UPDATE_USER, DELETE_USER } from '../actions/types';\nimport axios from 'axios';\nexport const fetchUser = token => async dispatch => {\n  dispatch({\n    type: USER_REQUEST\n  });\n  const config = {\n    headers: {\n      \"Content-Type\": \"Application/json\",\n      Authorization: token\n    }\n  };\n  const user = await axios.get('http://localhost:3000/profile', config);\n  console.log(user.username);\n  !!user ? dispatch({\n    type: USER_SUCCESS,\n    payload: user.data\n  }) : dispatch({\n    type: USER_FAILURE,\n    payload: user.message\n  });\n  !!user && localStorage.setItem(\"currentUser\", user.data.username, 'currentUserId', user.data.id);\n  return console.log(\"From fetch User in UsersActions\", user.data);\n};\nexport const fetchAllUsers = () => async dispatch => {\n  const users = await axios.get('http://localhost:3000/users');\n\n  const usersObj = () => {\n    const obj = {};\n    users.data.forEach(user => obj[user.id] = user.username);\n    return obj;\n  };\n\n  console.log(\"User object from fetch all users\", usersObj());\n  dispatch({\n    type: GET_ALL,\n    payload: users.data,\n    usersObj: usersObj()\n  });\n};\nexport const newUser = info => dispatch => {\n  dispatch({\n    type: USER_REQUEST\n  });\n  return axios.post('http://localhost:3000/signup', info).then(user => dispatch({\n    type: CREATE_USER,\n    payload: user.data,\n    requested: true\n  }));\n};","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/redux/actions/UserActions.js"],"names":["USER_REQUEST","USER_SUCCESS","USER_FAILURE","GET_ALL","CREATE_USER","UPDATE_USER","DELETE_USER","axios","fetchUser","token","dispatch","type","config","headers","Authorization","user","get","console","log","username","payload","data","message","localStorage","setItem","id","fetchAllUsers","users","usersObj","obj","forEach","newUser","info","post","then","requested"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,YAAvB,EAAqCC,YAArC,EAAmDC,OAAnD,EAA4DC,WAA5D,EAAyEC,WAAzE,EAAsFC,WAAtF,QAAyG,kBAAzG;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW,MAAMC,QAAN,IAAkB;AAClDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEX;AAAR,GAAD,CAAR;AACA,QAAMY,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAELC,MAAAA,aAAa,EAAEL;AAFV;AADE,GAAf;AAMA,QAAMM,IAAI,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,+BAAV,EAA2CJ,MAA3C,CAAnB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,QAAjB;AACA,GAAC,CAACJ,IAAF,GAASL,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEV,YAAR;AAAsBmB,IAAAA,OAAO,EAAEL,IAAI,CAACM;AAApC,GAAD,CAAjB,GACMX,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET,YAAR;AAAsBkB,IAAAA,OAAO,EAAEL,IAAI,CAACO;AAApC,GAAD,CADd;AAGA,GAAC,CAACP,IAAF,IAAUQ,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCT,IAAI,CAACM,IAAL,CAAUF,QAA9C,EAAwD,eAAxD,EAAyEJ,IAAI,CAACM,IAAL,CAAUI,EAAnF,CAAV;AACA,SAAOR,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CH,IAAI,CAACM,IAApD,CAAP;AAEH,CAhBM;AAiBP,OAAO,MAAMK,aAAa,GAAG,MAAM,MAAMhB,QAAN,IAAkB;AACjD,QAAMiB,KAAK,GAAG,MAAMpB,KAAK,CAACS,GAAN,CAAU,6BAAV,CAApB;;AACA,QAAMY,QAAQ,GAAG,MAAM;AACnB,UAAMC,GAAG,GAAG,EAAZ;AACAF,IAAAA,KAAK,CAACN,IAAN,CAAWS,OAAX,CAAmBf,IAAI,IAAIc,GAAG,CAACd,IAAI,CAACU,EAAN,CAAH,GAAeV,IAAI,CAACI,QAA/C;AACA,WAAOU,GAAP;AACH,GAJD;;AAKAZ,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDU,QAAQ,EAAxD;AACAlB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER,OAAR;AAAiBiB,IAAAA,OAAO,EAAEO,KAAK,CAACN,IAAhC;AAAsCO,IAAAA,QAAQ,EAACA,QAAQ;AAAvD,GAAD,CAAR;AAEH,CAVM;AAWP,OAAO,MAAMG,OAAO,GAAIC,IAAD,IAAUtB,QAAQ,IAAI;AACzCA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEX;AAAR,GAAD,CAAR;AACA,SAAOO,KAAK,CAAC0B,IAAN,CAAW,8BAAX,EAA2CD,IAA3C,EAAiDE,IAAjD,CAAsDnB,IAAI,IAAIL,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,WAAR;AAAqBgB,IAAAA,OAAO,EAAEL,IAAI,CAACM,IAAnC;AAAyCc,IAAAA,SAAS,EAAE;AAApD,GAAD,CAAtE,CAAP;AAEH,CAJM","sourcesContent":["import { USER_REQUEST, USER_SUCCESS, USER_FAILURE, GET_ALL, CREATE_USER, UPDATE_USER, DELETE_USER } from '../actions/types';\nimport axios from 'axios';\n\n\nexport const fetchUser = (token) => async dispatch => {\n    dispatch({ type: USER_REQUEST })\n    const config = {\n        headers: {\n            \"Content-Type\": \"Application/json\",\n            Authorization: token\n        }\n    }\n    const user = await axios.get('http://localhost:3000/profile', config);\n    console.log(user.username)\n    !!user ? dispatch({ type: USER_SUCCESS, payload: user.data })\n        : dispatch({ type: USER_FAILURE, payload: user.message })\n\n    !!user && localStorage.setItem(\"currentUser\", user.data.username, 'currentUserId', user.data.id)\n    return console.log(\"From fetch User in UsersActions\", user.data);\n\n}\nexport const fetchAllUsers = () => async dispatch => {\n    const users = await axios.get('http://localhost:3000/users');\n    const usersObj = () => {\n        const obj = {}\n        users.data.forEach(user => obj[user.id] = user.username)\n        return obj\n    }\n    console.log(\"User object from fetch all users\", usersObj())\n    dispatch({ type: GET_ALL, payload: users.data, usersObj:usersObj() });\n\n}\nexport const newUser = (info) => dispatch => {\n    dispatch({ type: USER_REQUEST })\n    return axios.post('http://localhost:3000/signup', info).then(user => dispatch({ type: CREATE_USER, payload: user.data, requested: true })\n    )\n}\n"]},"metadata":{},"sourceType":"module"}