{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/FlatIron/Mod_4/Project/MyStagram/MyFront-end/src/Homepage.js\";\nimport React from \"react\";\nimport HomeContainer from \"./HomeContainer\";\nimport PostCard from \"./components/PostCard\";\nimport Profile from \"./Profile\";\nimport { fetchPost } from './components/PostAdapter';\nimport { connect } from 'react-redux';\nimport { fetchUser } from './redux/actions/UserActions';\n\nclass Homepage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: \"\",\n      id: \"\",\n      follooweePosts: []\n    };\n\n    this.theFetch = async way => {\n      let url;\n      way ? url = \"http://localhost:3000/\".concat(way) : url = \"http://localhost:3000/\";\n      const resp = await fetch(url);\n      return await resp.json();\n    };\n  }\n\n  componentDidMount() {\n    const fetchUser = this.props.fetchUser; //  fetchUser()\n\n    fetch(\"http://localhost:3000/profile\", {\n      headers: {\n        Authorization: localStorage.token\n      }\n    }).then(res => res.json()).then(profile => {\n      this.setState({\n        currentUser: profile.username,\n        id: profile.id\n      });\n    });\n    this.theFetch(\"posts\").then(data => this.setState({\n      follooweePosts: data\n    }));\n  }\n\n  render() {\n    console.log(\"Home Page Props:\", this.props);\n    return React.createElement(React.Fragment, null, React.createElement(HomeContainer, {\n      fposts: this.state.follooweePosts,\n      user: this.state.currentUser,\n      userId: this.state.id,\n      history: this.props.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.login.token\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUser\n})(Homepage);","map":{"version":3,"sources":["/Users/owner/Desktop/FlatIron/Mod_4/Project/MyStagram/MyFront-end/src/Homepage.js"],"names":["React","HomeContainer","PostCard","Profile","fetchPost","connect","fetchUser","Homepage","Component","state","currentUser","id","follooweePosts","theFetch","way","url","resp","fetch","json","componentDidMount","props","headers","Authorization","localStorage","token","then","res","profile","setState","username","data","render","console","log","history","mapStateToProps","login"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,OAAT,QAAyB,aAAzB;AACA,SAASC,SAAT,QAA2B,6BAA3B;;AAIA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,EAAE,EAAE,EAFE;AAGNC,MAAAA,cAAc,EAAE;AAHV,KAD6B;;AAAA,SAOrCC,QAPqC,GAO1B,MAAMC,GAAN,IAAa;AACtB,UAAIC,GAAJ;AACAD,MAAAA,GAAG,GACEC,GAAG,mCAA4BD,GAA5B,CADL,GAEEC,GAAG,GAAG,wBAFX;AAGA,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAxB;AACA,aAAO,MAAMC,IAAI,CAACE,IAAL,EAAb;AACD,KAdoC;AAAA;;AAerCC,EAAAA,iBAAiB,GAAG;AAAA,UACVb,SADU,GACI,KAAKc,KADT,CACVd,SADU,EAGpB;;AACEW,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCI,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEC,YAAY,CAACC;AADrB;AAD4B,KAAlC,CAAL,CAKGC,IALH,CAKQC,GAAG,IAAIA,GAAG,CAACR,IAAJ,EALf,EAMGO,IANH,CAMQE,OAAO,IAAI;AACf,WAAKC,QAAL,CAAc;AAAElB,QAAAA,WAAW,EAAEiB,OAAO,CAACE,QAAvB;AAAiClB,QAAAA,EAAE,EAAEgB,OAAO,CAAChB;AAA7C,OAAd;AAED,KATH;AAWA,SAAKE,QAAL,CAAc,OAAd,EAAuBY,IAAvB,CAA4BK,IAAI,IAC9B,KAAKF,QAAL,CAAc;AAAEhB,MAAAA,cAAc,EAAEkB;AAAlB,KAAd,CADF;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKb,KAArC;AACA,WACE,0CACE,oBAAC,aAAD;AACE,MAAA,MAAM,EAAE,KAAKX,KAAL,CAAWG,cADrB;AAEE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,WAFnB;AAGE,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,EAHrB;AAIE,MAAA,OAAO,EAAE,KAAKS,KAAL,CAAWc,OAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUD;;AA/CoC;;AAiDrC,MAAMC,eAAe,GAAG1B,KAAK,IAAI;AAC/B,SAAO;AACHe,IAAAA,KAAK,EAAEf,KAAK,CAAC2B,KAAN,CAAYZ;AADhB,GAAP;AAGD,CAJD;;AAQF,eAAenB,OAAO,CAAC8B,eAAD,EAAkB;AAAE7B,EAAAA;AAAF,CAAlB,CAAP,CAAwCC,QAAxC,CAAf","sourcesContent":["import React from \"react\";\nimport HomeContainer from \"./HomeContainer\";\nimport PostCard from \"./components/PostCard\";\nimport Profile from \"./Profile\";\nimport { fetchPost } from './components/PostAdapter';\nimport { connect }  from 'react-redux';\nimport { fetchUser } from  './redux/actions/UserActions'\n\n\n\nclass Homepage extends React.Component {\n  state = {\n    currentUser: \"\",\n    id: \"\",\n    follooweePosts: []\n  };\n\n  theFetch = async way => {\n    let url;\n    way\n      ? (url = `http://localhost:3000/${way}`)\n      : (url = \"http://localhost:3000/\");\n    const resp = await fetch(url);\n    return await resp.json();\n  };\n  componentDidMount() {\n   const  { fetchUser } = this.props\n\n  //  fetchUser()\n    fetch(\"http://localhost:3000/profile\", {\n      headers: {\n        Authorization: localStorage.token\n      }\n    })\n      .then(res => res.json())\n      .then(profile => {\n        this.setState({ currentUser: profile.username, id: profile.id });\n\n      });\n\n    this.theFetch(\"posts\").then(data =>\n      this.setState({ follooweePosts: data })\n    );\n  }\n\n  render() {\n    console.log(\"Home Page Props:\", this.props)\n    return (\n      <>\n        <HomeContainer\n          fposts={this.state.follooweePosts}\n          user={this.state.currentUser}\n          userId={this.state.id}\n          history={this.props.history}\n        />\n      </>\n    );\n  }\n}\n  const mapStateToProps = state => {\n    return {\n        token: state.login.token\n    }\n  }\n\n \n\nexport default connect(mapStateToProps, { fetchUser })(Homepage)\n"]},"metadata":{},"sourceType":"module"}