{"ast":null,"code":"import axios from 'axios';\nimport { REQUESTING, FINISHED_REQUESTING, SUCCESSFUL_LOGIN, FAILED_LOGIN, LOG_OUT } from './types';\nexport const fetchLogin = info => dispatch => {\n  dispatch({\n    type: REQUESTING\n  });\n  return axios.post(\"http://localhost:3000/login\", info).then(user => {\n    if (!!user.data.token) {\n      localStorage.setItem(\"token\", user.data.token);\n      dispatch({\n        type: SUCCESSFUL_LOGIN,\n        payload: user.data.token\n      });\n    } else {\n      dispatch({\n        type: FAILED_LOGIN,\n        payload: user.data.message\n      });\n    }\n  }).catch(err => {\n    dispatch({\n      type: FAILED_LOGIN,\n      errorMessage: err\n    });\n  });\n};\n\nconst logout = () => dispatch => {\n  dispatch({\n    type: LOG_OUT\n  });\n};\n\nconst notRequesting = () => dispatch => {\n  dispatch({\n    type: FINISHED_REQUESTING\n  });\n};\n\nexport { notRequesting, logout, fetchLogin as default };","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/redux/actions/LoginActions.js"],"names":["axios","REQUESTING","FINISHED_REQUESTING","SUCCESSFUL_LOGIN","FAILED_LOGIN","LOG_OUT","fetchLogin","info","dispatch","type","post","then","user","data","token","localStorage","setItem","payload","message","catch","err","errorMessage","logout","notRequesting","default"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,mBAArB,EAA0CC,gBAA1C,EAA4DC,YAA5D,EAA0EC,OAA1E,QAAyF,SAAzF;AAGA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAUC,QAAQ,IAAI;AAC9CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AACA,SAAOD,KAAK,CAACU,IAAN,CAAW,6BAAX,EAA0CH,IAA1C,EAAgDI,IAAhD,CAAqDC,IAAI,IAAI;AAClE,QAAG,CAAC,CAACA,IAAI,CAACC,IAAL,CAAUC,KAAf,EAAqB;AACnBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACC,IAAL,CAAUC,KAAxC;AACAN,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEN,gBAAR;AAA0Bc,QAAAA,OAAO,EAAEL,IAAI,CAACC,IAAL,CAAUC;AAA7C,OAAD,CAAR;AAED,KAJD,MAKM;AACNN,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEL,YAAR;AAAsBa,QAAAA,OAAO,EAAEL,IAAI,CAACC,IAAL,CAAUK;AAAzC,OAAD,CAAR;AAA6D;AAC9D,GARM,EAQJC,KARI,CAQEC,GAAG,IAAI;AACdZ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,YAAR;AAAsBiB,MAAAA,YAAY,EAAED;AAApC,KAAD,CAAR;AACD,GAVM,CAAP;AAWD,CAbM;;AAcN,MAAME,MAAM,GAAG,MAAOd,QAAQ,IAAI;AAClCA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEJ;AAAR,GAAD,CAAR;AACA,CAFA;;AAGA,MAAMkB,aAAa,GAAG,MAAKf,QAAQ,IAAI;AACtCA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACD,CAFA;;AAMD,SACEqB,aADF,EACgBD,MADhB,EAEEhB,UAAU,IAAIkB,OAFhB","sourcesContent":["import axios from 'axios';\nimport { REQUESTING, FINISHED_REQUESTING, SUCCESSFUL_LOGIN, FAILED_LOGIN, LOG_OUT } from './types'\n\n\nexport const fetchLogin = (info) => dispatch => {\n  dispatch({ type: REQUESTING })\n  return axios.post(\"http://localhost:3000/login\", info).then(user => {\n    if(!!user.data.token){\n      localStorage.setItem(\"token\", user.data.token)\n      dispatch({ type: SUCCESSFUL_LOGIN, payload: user.data.token }) \n      \n    }\n      else{\n    dispatch({ type: FAILED_LOGIN, payload: user.data.message })}\n  }).catch(err => {\n    dispatch({ type: FAILED_LOGIN, errorMessage: err })\n  })\n}\n const logout = () =>  dispatch => {\n dispatch({ type: LOG_OUT })\n}\n const notRequesting = ()=> dispatch => {\n  dispatch({ type: FINISHED_REQUESTING})\n}\n\n\n\nexport {\n  notRequesting,logout,\n  fetchLogin as default\n}"]},"metadata":{},"sourceType":"module"}