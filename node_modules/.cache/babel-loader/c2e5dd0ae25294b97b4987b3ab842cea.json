{"ast":null,"code":"import _regeneratorRuntime from\"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import{USER_REQUEST,USER_SUCCESS,USER_FAILURE,GET_ALL,CREATE_USER,UPDATE_USER,DELETE_USER,FINISHED_REQUESTING}from'../actions/types';import axios from'axios';export var fetchAllUsers=function fetchAllUsers(){return function _callee(dispatch){var users,usersObj;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(axios.get('http://localhost:3000/users'));case 2:users=_context.sent;usersObj=function usersObj(){var obj={};users.data.forEach(function(user){return obj[user.id]=user.username;});return obj;};dispatch({type:GET_ALL,payload:users.data,usersObj:usersObj(),requested:false});case 5:case\"end\":return _context.stop();}}});};};export var fetchUser=function fetchUser(token){return function _callee2(dispatch){var config,user;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:USER_REQUEST});config={headers:{\"Content-Type\":\"Application/json\",Authorization:token}};_context2.next=4;return _regeneratorRuntime.awrap(axios.get('http://localhost:3000/profile',config));case 4:user=_context2.sent;console.log(user.username);!!user?dispatch({type:USER_SUCCESS,payload:user.data}):dispatch({type:USER_FAILURE,payload:user.message});!!user&&localStorage.setItem(\"currentUser\",user.data.username,'currentUserId',user.data.id,user.data.bio,user.data.city,user.data.state);return _context2.abrupt(\"return\",console.log(\"From fetch User in UsersActions\",user.data));case 9:case\"end\":return _context2.stop();}}});};};export var newUser=function newUser(info){return function(dispatch){dispatch({type:USER_REQUEST});return axios.post('http://localhost:3000/signup',info).then(function(user){return dispatch({type:CREATE_USER,payload:user.data,requested:false});});};};export var editUser=function editUser(user_id,info){return function(dispatch){dispatch({type:USER_REQUEST});return axios.patch(\"http://localhost:3000/users/\".concat(user_id),info).then(function(data){dispatch({type:UPDATE_USER,payload:data.data});localStorage.setItem(\"currentUser\",data.data.username);console.log(data);});};};export var deleteUser=function deleteUser(id){return function(dispatch){dispatch({type:USER_REQUEST});localStorage.clear();return axios.delete(\"http://localhost:3000/users/\".concat(id)).then(dispatch({type:DELETE_USER,id:id,requested:false})).then(dispatch({type:FINISHED_REQUESTING}));};};","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/redux/actions/UserActions.js"],"names":["USER_REQUEST","USER_SUCCESS","USER_FAILURE","GET_ALL","CREATE_USER","UPDATE_USER","DELETE_USER","FINISHED_REQUESTING","axios","fetchAllUsers","dispatch","get","users","usersObj","obj","data","forEach","user","id","username","type","payload","requested","fetchUser","token","config","headers","Authorization","console","log","message","localStorage","setItem","bio","city","state","newUser","info","post","then","editUser","user_id","patch","deleteUser","clear","delete"],"mappings":"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","sourcesContent":["import { USER_REQUEST, USER_SUCCESS, USER_FAILURE, GET_ALL, CREATE_USER, UPDATE_USER, DELETE_USER, FINISHED_REQUESTING } from '../actions/types';\nimport axios from 'axios';\n\nexport const fetchAllUsers = () => async dispatch => {\n    const users = await axios.get('http://localhost:3000/users');\n    const usersObj = () => {\n        const obj = {}\n        users.data.forEach(user => obj[user.id] = user.username)\n        return obj\n    }\n    \n    dispatch({ type: GET_ALL, payload: users.data, usersObj: usersObj(), requested: false });\n\n}\nexport const fetchUser = (token) => async dispatch => {\n    dispatch({ type: USER_REQUEST })\n    const config = {\n        headers: {\n            \"Content-Type\": \"Application/json\",\n            Authorization: token\n        }\n    }\n    const user = await axios.get('http://localhost:3000/profile', config);\n    console.log(user.username)\n    !!user ? dispatch({ type: USER_SUCCESS, payload: user.data })\n        : dispatch({ type: USER_FAILURE, payload: user.message })\n\n    !!user && localStorage.setItem(\"currentUser\", user.data.username, 'currentUserId', user.data.id, user.data.bio, user.data.city, user.data.state)\n    return console.log(\"From fetch User in UsersActions\", user.data);\n\n}\n\nexport const newUser = (info) => dispatch => {\n    dispatch({ type: USER_REQUEST })\n    return axios.post('http://localhost:3000/signup', info).then(user => dispatch({ type: CREATE_USER, payload: user.data, requested: false })\n    )\n}\nexport const editUser = (user_id, info) => dispatch => {\n    dispatch( { type: USER_REQUEST } )\n    return axios.patch(`http://localhost:3000/users/${user_id}`, info)\n        .then(data => {\n            dispatch( {type:UPDATE_USER, payload:data.data })\n            localStorage.setItem(\"currentUser\", data.data.username)\n            console.log(data)\n           })\n}\n\nexport const deleteUser = (id) => dispatch => {\n    dispatch({ type: USER_REQUEST })\n    localStorage.clear()\n    return axios.delete(`http://localhost:3000/users/${id}`)\n        .then(dispatch({ type: DELETE_USER, id, requested: false }))\n        .then(dispatch({ type: FINISHED_REQUESTING }))\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}