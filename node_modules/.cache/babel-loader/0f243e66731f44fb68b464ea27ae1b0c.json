{"ast":null,"code":"import { REQUESTING, POST_SUCCESS, POST_FAILURE, CREATE_POST, DELETE_LIKE, ADD_LIKE, EDIT_POST_CAPTION, DELETE_POST } from './types';\nimport axios from 'axios';\nexport const getPost = () => dispatch => {\n  dispatch({\n    type: REQUESTING\n  });\n  axios.get('http://localhost:3000/posts').then(post => {\n    dispatch({\n      type: POST_SUCCESS,\n      payload: post.data\n    });\n  });\n};\nexport const createPost = info => dispatch => {\n  dispatch({\n    type: REQUESTING\n  });\n  axios.post(\"http://localhost:3000/posts\", info).then(post => {\n    dispatch({\n      type: CREATE_POST,\n      payload: post.data\n    });\n    console.log(post.data);\n  });\n};\nexport const editCaption = (id, info) => dispatch => {\n  dispatch({\n    type: REQUESTING\n  });\n  axios.patch(\"http://localhost:3000/posts/\".concat(id), {\n    caption: info\n  }).then(post => {\n    console.log(post.data);\n    dispatch({\n      type: EDIT_POST_CAPTION,\n      payload: post.data,\n      id,\n      requested: false\n    });\n  });\n};\nexport const changeLike = (id, numLikes, change) => dispatch => {\n  dispatch({\n    type: REQUESTING\n  });\n  axios.patch(\"http://localhost:3000/posts/\".concat(id), {\n    likes: numLikes\n  }).then(data => console.log(\"From Likes action \", data), change === \"add\" ? dispatch({\n    type: ADD_LIKE,\n    id,\n    requested: false\n  }) : dispatch({\n    type: DELETE_LIKE,\n    id\n  }));\n};","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/redux/actions/PostActions.js"],"names":["REQUESTING","POST_SUCCESS","POST_FAILURE","CREATE_POST","DELETE_LIKE","ADD_LIKE","EDIT_POST_CAPTION","DELETE_POST","axios","getPost","dispatch","type","get","then","post","payload","data","createPost","info","console","log","editCaption","id","patch","caption","requested","changeLike","numLikes","change","likes"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,YAArB,EAAmCC,YAAnC,EAAiDC,WAAjD,EAA8DC,WAA9D,EAA2EC,QAA3E,EAAoFC,iBAApF,EAAuGC,WAAvG,QAA0H,SAA1H;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAMC,QAAQ,IAAI;AACrCA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEX;AAAR,GAAD,CAAR;AACAQ,EAAAA,KAAK,CAACI,GAAN,CAAU,6BAAV,EACCC,IADD,CACMC,IAAI,IAAI;AACVJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,YAAR;AAAsBc,MAAAA,OAAO,EAAED,IAAI,CAACE;AAApC,KAAD,CAAR;AACH,GAHD;AAOH,CATM;AAUP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAUR,QAAQ,IAAI;AAC5CA,EAAAA,QAAQ,CAAK;AAAEC,IAAAA,IAAI,EAAEX;AAAR,GAAL,CAAR;AACAQ,EAAAA,KAAK,CAACM,IAAN,gCAA0CI,IAA1C,EACCL,IADD,CACMC,IAAI,IAAI;AAAEJ,IAAAA,QAAQ,CAAE;AAACC,MAAAA,IAAI,EAACR,WAAN;AAAmBY,MAAAA,OAAO,EAACD,IAAI,CAACE;AAAhC,KAAF,CAAR;AAChBG,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACE,IAAjB;AACC,GAHD;AAKH,CAPM;AAQP,OAAO,MAAMK,WAAW,GAAG,CAACC,EAAD,EAAKJ,IAAL,KAAcR,QAAQ,IAAI;AACjDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEX;AAAR,GAAD,CAAR;AACAQ,EAAAA,KAAK,CAACe,KAAN,uCAA2CD,EAA3C,GAAiD;AAAEE,IAAAA,OAAO,EAAEN;AAAX,GAAjD,EACKL,IADL,CACUC,IAAI,IAAI;AAAGK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACE,IAAjB;AACtBN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,iBAAR;AAA2BS,MAAAA,OAAO,EAAED,IAAI,CAACE,IAAzC;AAA8CM,MAAAA,EAA9C;AAAkDG,MAAAA,SAAS,EAAE;AAA7D,KAAD,CAAR;AACM,GAHL;AAOH,CATM;AAUP,OAAO,MAAMC,UAAU,GAAG,CAACJ,EAAD,EAAKK,QAAL,EAAeC,MAAf,KAA0BlB,QAAQ,IAAG;AAC3DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEX;AAAR,GAAD,CAAR;AACCQ,EAAAA,KAAK,CAACe,KAAN,uCAA2CD,EAA3C,GAAgD;AAAEO,IAAAA,KAAK,EAAEF;AAAT,GAAhD,EACAd,IADA,CACKG,IAAI,IAAIG,OAAO,CAACC,GAAR,CAAa,oBAAb,EAAkCJ,IAAlC,CADb,EAEDY,MAAM,KAAK,KAAX,GAAmBlB,QAAQ,CAAE;AAAEC,IAAAA,IAAI,EAAEN,QAAR;AAAkBiB,IAAAA,EAAlB;AAAsBG,IAAAA,SAAS,EAAC;AAAhC,GAAF,CAA3B,GAA0Ef,QAAQ,CAAE;AAAEC,IAAAA,IAAI,EAAEP,WAAR;AAAqBkB,IAAAA;AAArB,GAAF,CAFjF;AAIJ,CANM","sourcesContent":["import { REQUESTING, POST_SUCCESS, POST_FAILURE, CREATE_POST, DELETE_LIKE, ADD_LIKE,EDIT_POST_CAPTION, DELETE_POST } from './types';\nimport axios from 'axios'\n\nexport const getPost = () => dispatch => {\n    dispatch({ type: REQUESTING })\n    axios.get('http://localhost:3000/posts')\n    .then(post => {\n        dispatch({ type: POST_SUCCESS, payload: post.data})\n    }\n\n    )\n\n}\nexport const createPost = (info) => dispatch => {\n    dispatch   ( { type: REQUESTING} )\n    axios.post(`http://localhost:3000/posts`, info)\n    .then(post => { dispatch( {type:CREATE_POST, payload:post.data } )\n    console.log(post.data)\n    })\n\n}\nexport const editCaption = (id, info) => dispatch => {\n    dispatch({ type: REQUESTING })\n    axios.patch(`http://localhost:3000/posts/${id}`, { caption: info })\n        .then(post => {  console.log(post.data)\n   dispatch({ type: EDIT_POST_CAPTION, payload: post.data,id, requested: false })\n        }\n        \n    )\n\n}\nexport const changeLike = (id, numLikes, change) => dispatch =>{\n    dispatch({ type: REQUESTING })\n     axios.patch(`http://localhost:3000/posts/${id}`,{ likes: numLikes })\n    .then(data => console.log( \"From Likes action \",data),\n    change === \"add\" ? dispatch( { type: ADD_LIKE, id, requested:false } ) :  dispatch( { type: DELETE_LIKE, id,  } )\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}