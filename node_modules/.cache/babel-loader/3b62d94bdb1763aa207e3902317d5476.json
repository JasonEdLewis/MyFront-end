{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/FlatIron/Mod_4/Project/MyStagram/MyFront-end/src/Homepage.js\";\nimport React from \"react\"; // import HomeContainer from \"./HomeContainer\";\n\nimport PostCard from \"./components/PostCard\";\nimport Profile from \"./Profile\";\nimport { getPost } from './redux/actions/PostActions';\nimport { connect } from 'react-redux';\nimport { fetchUser } from './redux/actions/UserActions';\nimport Loader from './components/loader';\n\nclass Homepage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      follooweePosts: []\n    };\n\n    this.theFetch = async way => {\n      let url;\n      way ? url = \"http://localhost:3000/\".concat(way) : url = \"http://localhost:3000/\";\n      const resp = await fetch(url);\n      return await resp.json();\n    };\n\n    this.thePost = () => {\n      this.props.post.map(p => React.createElement(PostCard, {\n        post: p,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          fetchUser = _this$props.fetchUser,\n          getPost = _this$props.getPost;\n    fetchUser(localStorage.token);\n    getPost();\n  }\n\n  render() {\n    console.log(\"Home Page Props:\", this.props);\n    const _this$props2 = this.props,\n          user = _this$props2.user,\n          post = _this$props2.post;\n    return React.createElement(React.Fragment, null, post.requested && React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.login.token,\n    user: state.users,\n    post: state.post.post\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUser,\n  getPost\n})(Homepage);","map":{"version":3,"sources":["/Users/owner/Desktop/FlatIron/Mod_4/Project/MyStagram/MyFront-end/src/Homepage.js"],"names":["React","PostCard","Profile","getPost","connect","fetchUser","Loader","Homepage","Component","state","follooweePosts","theFetch","way","url","resp","fetch","json","thePost","props","post","map","p","componentDidMount","localStorage","token","render","console","log","user","requested","mapStateToProps","login","users"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAIA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,cAAc,EAAE;AADV,KAD6B;;AAAA,SAKrCC,QALqC,GAK1B,MAAMC,GAAN,IAAa;AACtB,UAAIC,GAAJ;AACAD,MAAAA,GAAG,GACEC,GAAG,mCAA4BD,GAA5B,CADL,GAEEC,GAAG,GAAG,wBAFX;AAGA,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAxB;AACA,aAAO,MAAMC,IAAI,CAACE,IAAL,EAAb;AACD,KAZoC;;AAAA,SAoBpCC,OApBoC,GAoB3B,MAAI;AAAE,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoBC,CAAC,IAAI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB;AAA+C,KApB1B;AAAA;;AAarCC,EAAAA,iBAAiB,GAAG;AAAA,wBACa,KAAKJ,KADlB;AAAA,UACVb,SADU,eACVA,SADU;AAAA,UACCF,OADD,eACCA,OADD;AAElBE,IAAAA,SAAS,CAACkB,YAAY,CAACC,KAAd,CAAT;AACArB,IAAAA,OAAO;AAER;;AAODsB,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKT,KAArC;AADO,yBAEgB,KAAKA,KAFrB;AAAA,UAECU,IAFD,gBAECA,IAFD;AAAA,UAEOT,IAFP,gBAEOA,IAFP;AAGP,WACE,0CACCA,IAAI,CAACU,SAAL,IAAkB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnB,CADF;AAQD;;AApCoC;;AAsCvC,MAAMC,eAAe,GAAGrB,KAAK,IAAI;AAC/B,SAAO;AACLe,IAAAA,KAAK,EAAEf,KAAK,CAACsB,KAAN,CAAYP,KADd;AAELI,IAAAA,IAAI,EAAEnB,KAAK,CAACuB,KAFP;AAGLb,IAAAA,IAAI,EAAEV,KAAK,CAACU,IAAN,CAAWA;AAHZ,GAAP;AAKD,CAND;;AAUA,eAAef,OAAO,CAAC0B,eAAD,EAAkB;AAAEzB,EAAAA,SAAF;AAAaF,EAAAA;AAAb,CAAlB,CAAP,CAAkDI,QAAlD,CAAf","sourcesContent":["import React from \"react\";\n// import HomeContainer from \"./HomeContainer\";\nimport PostCard from \"./components/PostCard\";\nimport Profile from \"./Profile\";\nimport { getPost } from './redux/actions/PostActions'\nimport { connect } from 'react-redux';\nimport { fetchUser } from './redux/actions/UserActions';\nimport Loader from './components/loader'\n\n\n\nclass Homepage extends React.Component {\n  state = {\n    follooweePosts: []\n  };\n\n  theFetch = async way => {\n    let url;\n    way\n      ? (url = `http://localhost:3000/${way}`)\n      : (url = \"http://localhost:3000/\");\n    const resp = await fetch(url);\n    return await resp.json();\n  };\n  componentDidMount() {\n    const { fetchUser, getPost } = this.props\n    fetchUser(localStorage.token)\n    getPost()\n   \n  }\n\n   thePost =()=>{ this.props.post.map(p => <PostCard post={p}/>)}\n\n\n\n\n  render() {\n    console.log(\"Home Page Props:\", this.props)\n    const { user, post } = this.props\n    return (\n      <>\n      {post.requested && <Loader/>}\n        {/* <HomeContainer\n          history={this.props.history}\n        /> */}\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    token: state.login.token,\n    user: state.users,\n    post: state.post.post,\n  }\n}\n\n\n\nexport default connect(mapStateToProps, { fetchUser, getPost  })(Homepage)\n"]},"metadata":{},"sourceType":"module"}