{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/components/Follows.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getFollows } from '../redux/actions/FollowActions';\nimport { fetchAllUsers } from '../redux/actions/UserActions';\n\nclass Follows extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.allFriends = () => {\n      const friendships = [];\n      const _this$props = this.props,\n            users = _this$props.users,\n            follows = _this$props.follows;\n      follows.map(follow => {\n        let Friend1 = users.find(user1 => {\n          return user1.id === follow.followee_id;\n        });\n        let Friend2 = users.find(user2 => {\n          return user2.id === follow.follower_id;\n        });\n        let pair = {\n          [\"\".concat(Friend1.username)]: \"\".concat(Friend2.username)\n        };\n        friendships.push(pair);\n        console.log(\"friendships:\", friendships);\n        return friendships;\n      });\n\n      const areFreinds = (postuser, currentuser) => {\n        const follows = this.props.follows;\n        const followid = follows.find(follow => follow.followee_id === postuser && follow.foller_id === currentuser).id;\n      };\n    };\n  }\n\n  componentDidMount() {\n    const getFollows = this.props.getFollows;\n    getFollows();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    follows: state.follows,\n    users: state.users.all\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getFollows,\n  fetchAllUsers\n})(Follows);","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/components/Follows.js"],"names":["React","Component","connect","getFollows","fetchAllUsers","Follows","allFriends","friendships","props","users","follows","map","follow","Friend1","find","user1","id","followee_id","Friend2","user2","follower_id","pair","username","push","console","log","areFreinds","postuser","currentuser","followid","foller_id","componentDidMount","render","mapStateToProps","state","all"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,aAAT,QAA8B,8BAA9B;;AAGA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAS5BK,UAT4B,GASf,MAAM;AACf,YAAMC,WAAW,GAAG,EAApB;AADe,0BAEY,KAAKC,KAFjB;AAAA,YAEPC,KAFO,eAEPA,KAFO;AAAA,YAEAC,OAFA,eAEAA,OAFA;AAGfA,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,IAAI;AAClB,YAAIC,OAAO,GAAGJ,KAAK,CAACK,IAAN,CAAWC,KAAK,IAAI;AAC9B,iBAAOA,KAAK,CAACC,EAAN,KAAaJ,MAAM,CAACK,WAA3B;AACH,SAFa,CAAd;AAIA,YAAIC,OAAO,GAAGT,KAAK,CAACK,IAAN,CAAWK,KAAK,IAAI;AAC9B,iBAAOA,KAAK,CAACH,EAAN,KAAaJ,MAAM,CAACQ,WAA3B;AACH,SAFa,CAAd;AAIA,YAAIC,IAAI,GAAG;AAAE,qBAAIR,OAAO,CAACS,QAAZ,cAA4BJ,OAAO,CAACI,QAApC;AAAF,SAAX;AAEAf,QAAAA,WAAW,CAACgB,IAAZ,CAAiBF,IAAjB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BlB,WAA5B;AACA,eAAOA,WAAP;AAEH,OAfD;;AAiBA,YAAMmB,UAAU,GAAG,CAACC,QAAD,EAAWC,WAAX,KAAyB;AAAA,cAChClB,OADgC,GACpB,KAAKF,KADe,CAChCE,OADgC;AAExC,cAAMmB,QAAQ,GAAGnB,OAAO,CAACI,IAAR,CAAaF,MAAM,IAAIA,MAAM,CAACK,WAAP,KAAuBU,QAAvB,IAAmCf,MAAM,CAACkB,SAAP,KAAqBF,WAA/E,EAA6FZ,EAA9G;AACH,OAHD;AAKH,KAlC2B;AAAA;;AAE5Be,EAAAA,iBAAiB,GAAG;AAAA,UACR5B,UADQ,GACM,KAAKK,KADX,CACRL,UADQ;AAEhBA,IAAAA,UAAU;AAGb;;AA4BD6B,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AA1C2B;;AA4ChC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHxB,IAAAA,OAAO,EAAEwB,KAAK,CAACxB,OADZ;AAEHD,IAAAA,KAAK,EAAEyB,KAAK,CAACzB,KAAN,CAAY0B;AAFhB,GAAP;AAIH,CALD;;AAOA,eAAejC,OAAO,CAAC+B,eAAD,EAAkB;AAAE9B,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAwDC,OAAxD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getFollows } from '../redux/actions/FollowActions';\nimport { fetchAllUsers } from '../redux/actions/UserActions'\n\n\nclass Follows extends Component {\n\n    componentDidMount() {\n        const { getFollows} = this.props\n        getFollows()\n       \n    \n    }\n\n    allFriends = () => {\n        const friendships = []\n        const { users, follows } = this.props\n        follows.map(follow => {\n            let Friend1 = users.find(user1 => {\n                return user1.id === follow.followee_id\n            });\n\n            let Friend2 = users.find(user2 => {\n                return user2.id === follow.follower_id\n            });\n\n            let pair = { [`${Friend1.username}`]: `${Friend2.username}` }\n\n            friendships.push(pair)\n            console.log(\"friendships:\", friendships)\n            return friendships\n\n        })\n\n        const areFreinds = (postuser, currentuser)=>{\n            const { follows } = this.props\n            const followid = follows.find(follow => follow.followee_id === postuser && follow.foller_id === currentuser ).id\n        }\n\n    }\n    render() {\n\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        follows: state.follows,\n        users: state.users.all\n    }\n}\n\nexport default connect(mapStateToProps, { getFollows, fetchAllUsers })(Follows)"]},"metadata":{},"sourceType":"module"}