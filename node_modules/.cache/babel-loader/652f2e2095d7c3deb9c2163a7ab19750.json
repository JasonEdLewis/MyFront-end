{"ast":null,"code":"import React from 'react';\nimport { storage } from '../firebase/index';\nexport default function PicUploader(props) {\n  console.log(\"Pic Upload func props\", props);\n\n  const loader = image => {\n    const uploadTask = storage.ref(\"images/\".concat(image.name)).put(image);\n    uploadTask.on('state_changed', snapshot => {\n      this.setState({\n        loading: true\n      });\n    }, error => {\n      console.log(error);\n    }, () => {\n      storage.ref('images').child(image.name).getDownloadURL().then(url => {\n        console.log(url);\n        this.setState({\n          loading: false,\n          url\n        });\n      });\n    });\n  };\n\n  return React.createElement(React.Fragment, null, \" \");\n}","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/components/PicUploader.js"],"names":["React","storage","PicUploader","props","console","log","loader","image","uploadTask","ref","name","put","on","snapshot","setState","loading","error","child","getDownloadURL","then","url"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAGA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCF,KAApC;;AAEA,QAAMG,MAAM,GAAIC,KAAD,IAAS;AACvB,UAAMC,UAAU,GAAGP,OAAO,CAACQ,GAAR,kBAAsBF,KAAK,CAACG,IAA5B,GAAoCC,GAApC,CAAwCJ,KAAxC,CAAnB;AAEDC,IAAAA,UAAU,CAACI,EAAX,CAAc,eAAd,EAAgCC,QAAD,IAAc;AAC3C,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAFD,EAGGC,KAAD,IAAW;AACTZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AAED,KANH,EAOE,MAAM;AACJf,MAAAA,OAAO,CAACQ,GAAR,CAAY,QAAZ,EAAsBQ,KAAtB,CAA4BV,KAAK,CAACG,IAAlC,EAAwCQ,cAAxC,GAAyDC,IAAzD,CAA8DC,GAAG,IAAI;AACnEhB,QAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACA,aAAKN,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAE,KAAX;AAAkBK,UAAAA;AAAlB,SAAd;AAED,OAJD;AAKH,KAbD;AAeC,GAlBD;;AAqBA,SAEI,8CAFJ;AAIC","sourcesContent":["\nimport React from 'react';\nimport { storage } from '../firebase/index';\n\n\nexport default function PicUploader(props) {\n    console.log(\"Pic Upload func props\",props)\n\n    const loader = (image)=>{\n     const uploadTask = storage.ref(`images/${image.name}`).put(image);\n\n    uploadTask.on('state_changed', (snapshot) => {\n      this.setState({ loading: true })\n    },\n      (error) => {\n        console.log(error);\n\n      },\n      () => {\n        storage.ref('images').child(image.name).getDownloadURL().then(url => {\n          console.log(url)\n          this.setState({ loading: false, url })\n\n        })\n    })\n\n    }\n\n\n    return (\n        \n        <> </>\n    )\n    }\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}