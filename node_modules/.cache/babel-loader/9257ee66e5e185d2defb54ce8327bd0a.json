{"ast":null,"code":"import _defineProperty from \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { REQUESTING, POST_SUCCESS, POST_FAILURE, CREATE_POST, EDIT_POST_CAPTION, ADD_LIKE, DELETE_POST, SUBMITTED_COMMENT, ADD_COMMENT, EDIT_COMMENT, DELETE_COMMENT } from '../actions/types';\nconst initialState = {\n  posts: [],\n  request: null,\n  success: null,\n  errorMessage: \"\",\n  editingPost: false,\n  submittedComment: false\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case REQUESTING:\n      return _objectSpread({}, state, {\n        request: true\n      });\n\n    case POST_SUCCESS:\n      return _objectSpread({}, state, {\n        request: false,\n        success: true,\n        posts: action.payload\n      });\n\n    case POST_FAILURE:\n      return _objectSpread({}, state, {\n        success: false,\n        request: false,\n        errorMessage: action.payload\n      });\n\n    case CREATE_POST:\n      return _objectSpread({}, state, {\n        request: false,\n        success: true,\n        post: [...state.post, action.payload]\n      });\n\n    case EDIT_POST_CAPTION:\n      const idx = state.post.findIndex(post => post.id === action.payload.id);\n      const post = state.post[idx];\n      const pts = [state.posts.slice(0, idx), Object.assign({}, post, {\n        caption: action.payload\n      }, ...state.payload.slice(idx + 1))];\n      return _objectSpread({}, state, {\n        posts: pts\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/redux/reducers/PostReducer.js"],"names":["REQUESTING","POST_SUCCESS","POST_FAILURE","CREATE_POST","EDIT_POST_CAPTION","ADD_LIKE","DELETE_POST","SUBMITTED_COMMENT","ADD_COMMENT","EDIT_COMMENT","DELETE_COMMENT","initialState","posts","request","success","errorMessage","editingPost","submittedComment","state","action","type","payload","post","idx","findIndex","id","pts","slice","Object","assign","caption"],"mappings":";;;;;;AAAA,SACIA,UADJ,EACgBC,YADhB,EAC8BC,YAD9B,EAC4CC,WAD5C,EACyDC,iBADzD,EAC2EC,QAD3E,EACqFC,WADrF,EAEIC,iBAFJ,EAEuBC,WAFvB,EAEoCC,YAFpC,EAEkDC,cAFlD,QAGO,kBAHP;AAKA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,OAAO,EAAE,IAFQ;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,YAAY,EAAE,EAJG;AAKjBC,EAAAA,WAAW,EAAC,KALK;AAMjBC,EAAAA,gBAAgB,EAAC;AANA,CAArB;AASA,gBAAe,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKpB,UAAL;AACI,+BAAYkB,KAAZ;AAAmBL,QAAAA,OAAO,EAAE;AAA5B;;AACJ,SAAKZ,YAAL;AACI,+BACOiB,KADP;AACcL,QAAAA,OAAO,EAAE,KADvB;AAC8BC,QAAAA,OAAO,EAAE,IADvC;AAEIF,QAAAA,KAAK,EAAEO,MAAM,CAACE;AAFlB;;AAIJ,SAAKnB,YAAL;AACI,+BAAYgB,KAAZ;AAAmBJ,QAAAA,OAAO,EAAE,KAA5B;AAAmCD,QAAAA,OAAO,EAAE,KAA5C;AAAmDE,QAAAA,YAAY,EAAEI,MAAM,CAACE;AAAxE;;AACJ,SAAKlB,WAAL;AACI,+BACOe,KADP;AACcL,QAAAA,OAAO,EAAE,KADvB;AAC8BC,QAAAA,OAAO,EAAE,IADvC;AAEIQ,QAAAA,IAAI,EAAE,CAAC,GAAGJ,KAAK,CAACI,IAAV,EAAgBH,MAAM,CAACE,OAAvB;AAFV;;AAIJ,SAAKjB,iBAAL;AACI,YAAMmB,GAAG,GAAGL,KAAK,CAACI,IAAN,CAAWE,SAAX,CAAqBF,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYN,MAAM,CAACE,OAAP,CAAeI,EAAxD,CAAZ;AACA,YAAMH,IAAI,GAAGJ,KAAK,CAACI,IAAN,CAAWC,GAAX,CAAb;AACA,YAAMG,GAAG,GAAG,CACRR,KAAK,CAACN,KAAN,CAAYe,KAAZ,CAAkB,CAAlB,EAAoBJ,GAApB,CADQ,EAERK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,IAAlB,EAAwB;AAACQ,QAAAA,OAAO,EAACX,MAAM,CAACE;AAAhB,OAAxB,EACA,GAAGH,KAAK,CAACG,OAAN,CAAcM,KAAd,CAAoBJ,GAAG,GAAC,CAAxB,CADH,CAFQ,CAAZ;AAKA,+BACOL,KADP;AAEIN,QAAAA,KAAK,EAACc;AAFV;;AAKJ;AACI,aAAOR,KAAP;AA7BR;AAgCH,CAjCD","sourcesContent":["import {\n    REQUESTING, POST_SUCCESS, POST_FAILURE, CREATE_POST, EDIT_POST_CAPTION,ADD_LIKE, DELETE_POST,\n    SUBMITTED_COMMENT, ADD_COMMENT, EDIT_COMMENT, DELETE_COMMENT\n} from '../actions/types'\n\nconst initialState = {\n    posts: [],\n    request: null,\n    success: null,\n    errorMessage: \"\",\n    editingPost:false,\n    submittedComment:false,\n\n}\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case REQUESTING:\n            return { ...state, request: true }\n        case POST_SUCCESS:\n            return {\n                ...state, request: false, success: true,\n                posts: action.payload\n            }\n        case POST_FAILURE:\n            return { ...state, success: false, request: false, errorMessage: action.payload }\n        case CREATE_POST:\n            return {\n                ...state, request: false, success: true,\n                post: [...state.post, action.payload]\n            }\n        case EDIT_POST_CAPTION:\n            const idx = state.post.findIndex(post => post.id === action.payload.id)\n            const post = state.post[idx]\n            const pts = [\n                state.posts.slice(0,idx),\n                Object.assign({}, post, {caption:action.payload},\n                ...state.payload.slice(idx+1) )\n            ]\n            return {\n                ...state,\n                posts:pts\n            }\n        \n        default:\n            return state;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}