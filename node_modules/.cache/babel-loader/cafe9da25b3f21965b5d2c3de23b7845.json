{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js\";\nimport React from \"react\";\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport { fetchPost, submitNewPost } from './components/PostAdapter';\nimport { postComment } from './components/CommentAdapter';\nimport Jack from \"./img/jack.jpg\";\nimport { connect } from 'react-redux';\nimport { getPost } from './redux/actions/PostActions';\nimport { fetchUser } from './redux/actions/UserActions';\nimport { addComment } from './redux/actions/CommentsActions';\nimport Loader from './components/loader';\nimport { Card, Form, Navbar, Button, NavbarBrand, Nav } from \"react-bootstrap\";\n\nclass HomeContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showCommentField: false,\n      comment: \"\",\n      post_id: \"\",\n      Picture: \"\",\n      caption: \"\",\n      likes: 0,\n      page: \"thePost\"\n    };\n\n    this.handleComment = e => {\n      // console.log(e.target.value);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.showCommentField = () => {\n      return this.setState({\n        showCommentField: !this.state.showCommentField\n      });\n    };\n\n    this.thePost = () => {\n      const post = this.props.post;\n      return post && post.length > 0 && post.map(post => React.createElement(Postcard, {\n        post: post,\n        commentLen: this.state.comment.length,\n        toggleCommentField: this.showCommentField,\n        commentFieldStatus: this.state.showCommentField,\n        id: post.id,\n        submitComment: () => this.submitComment(post.id, post.userId),\n        handleComment: this.handleComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    };\n\n    this.handleNewPostClick = () => {\n      this.setState({\n        newPost: !this.state.newPost\n      });\n    };\n\n    this.theNewPostCard = props => {\n      const userid = this.props.userid;\n      return React.createElement(NewPostCard, {\n        handleNewPost: this.handleNewPost,\n        submitPost: () => userid,\n        state: this.state,\n        userId: userid,\n        back: this.returnToThePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    };\n\n    this.myProfile = () => {\n      this.props.history.push('/profile');\n    };\n\n    this.returnToThePost = () => {\n      this.setState({\n        page: \"thePost\"\n      });\n    };\n\n    this.submitComment = postId => {\n      const _this$state = this.state,\n            userId = _this$state.userId,\n            comment = _this$state.comment;\n      console.log(\"Post id\", postId, \"User is:\", userId, \"comment: \", this.state.comment);\n      debugger;\n      postComment(postId, comment, user).then(resp => resp.json()).then(console.log);\n    };\n\n    this.handleNewPost = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.pageToRender = () => {\n      switch (this.state.page) {\n        case \"thePost\":\n          return this.thePost();\n\n        case \"newPost\":\n          return this.theNewPostCard();\n\n        case \"profile\":\n          return this.myProfile();\n      }\n    };\n\n    this.logout = () => {\n      localStorage.clear();\n      this.props.history.push('/');\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Home Page CONTAINER MOUNTED\");\n    const _this$props = this.props,\n          fetchUser = _this$props.fetchUser,\n          getPost = _this$props.getPost;\n    fetchUser(localStorage.token);\n    getPost();\n  }\n\n  render() {\n    // debugger\n    console.log(\"Home Container props\", this.props);\n    const _this$props2 = this.props,\n          fposts = _this$props2.fposts,\n          user = _this$props2.user,\n          userId = _this$props2.userId,\n          history = _this$props2.history;\n    return React.createElement(\"div\", {\n      className: \"Home-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Homepage-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"jays-gram\",\n      onClick: () => this.returnToThePost(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.props.user, \"s'taGram \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"camera\",\n      id: this.state.id,\n      onClick: () => this.setState({\n        page: \"newPost\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \" \\uD83D\\uDCF8 \")), React.createElement(\"div\", {\n      className: \"thumb-and-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"thumbnail\",\n      onClick: () => this.setState({\n        page: \"profile\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: Jack,\n      id: \"thumbnail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      className: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.logout,\n      id: \"logout-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \" logout  \")))), React.createElement(\"div\", {\n      className: \"Home-Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.props.postRequest && React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), this.pageToRender(), this.state.page !== \"newPost\" ? React.createElement(\"div\", {\n      className: \"Home-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Copyright \\xA9 2019 Jaystagram\") : React.createElement(React.Fragment, null)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    post: state.post.post.data,\n    postRequested: state.post.requested\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPost,\n  fetchUser,\n  addComment\n})(HomeContainer);","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js"],"names":["React","Postcard","NewPostCard","fetchPost","submitNewPost","postComment","Jack","connect","getPost","fetchUser","addComment","Loader","Card","Form","Navbar","Button","NavbarBrand","Nav","HomeContainer","Component","state","showCommentField","comment","post_id","Picture","caption","likes","page","handleComment","e","setState","target","name","value","thePost","post","props","length","map","id","submitComment","userId","handleNewPostClick","newPost","theNewPostCard","userid","handleNewPost","returnToThePost","myProfile","history","push","postId","console","log","user","then","resp","json","pageToRender","logout","localStorage","clear","componentDidMount","token","render","fposts","postRequest","mapStateToProps","users","username","data","postRequested","requested"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport { fetchPost, submitNewPost } from './components/PostAdapter';\nimport { postComment } from './components/CommentAdapter';\nimport Jack from \"./img/jack.jpg\";\nimport { connect } from 'react-redux';\nimport { getPost } from './redux/actions/PostActions';\nimport { fetchUser } from './redux/actions/UserActions';\nimport { addComment } from './redux/actions/CommentsActions' \nimport Loader from './components/loader'\n\n\nimport { Card, Form, Navbar, Button, NavbarBrand, Nav } from \"react-bootstrap\";\n\nclass HomeContainer extends React.Component {\n  state = {\n    showCommentField: false,\n    comment: \"\",\n    post_id: \"\",\n    Picture: \"\",\n    caption: \"\",\n    likes: 0,\n    page: \"thePost\"\n\n  };\n\n  componentDidMount() {\n    console.log(\"Home Page CONTAINER MOUNTED\")\n     const { fetchUser, getPost } = this.props \n     fetchUser(localStorage.token)\n    getPost()\n\n  }\n  \n  handleComment = e => {\n    // console.log(e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\nshowCommentField=()=>{\n  return this.setState({showCommentField: !this.state.showCommentField})\n}\n  thePost = () => {\n   const { post } = this.props\n  return  post && post.length > 0 &&  post.map(post => (\n      <Postcard\n        post={post}\n        commentLen={this.state.comment.length}\n        toggleCommentField={this.showCommentField}\n        commentFieldStatus={this.state.showCommentField}\n        id={post.id}\n        submitComment={() => this.submitComment(post.id, post.userId)}\n        handleComment={this.handleComment}\n      /> \n    ))\n  };\n\n  // SUBMIT THE COMMENT /FETCH POST\n  handleNewPostClick = () => {\n    this.setState({ newPost: !this.state.newPost });\n  };\n\n  theNewPostCard = props => {\n    const {userid } = this.props\n    return (\n      <NewPostCard\n        handleNewPost={this.handleNewPost}\n        submitPost={() => (userid)}\n        state={this.state}\n        userId={userid}\n        back={this.returnToThePost}\n\n      />\n    );\n  };\n\n  myProfile = () => {\n    this.props.history.push('/profile')\n   \n  };\n \n\n  returnToThePost = () => {\n    this.setState({ page: \"thePost\" })\n  }\n  submitComment = (postId) => {\n  \n    const {userId ,comment } = this.state\n    console.log(\n      \"Post id\",\n      postId,\n      \"User is:\",\n      userId,\n      \"comment: \",\n      this.state.comment\n    );\n    debugger\n    postComment(postId, comment, user)\n      .then(resp => resp.json())\n      .then(console.log);\n  };\n\n  handleNewPost = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  pageToRender = () => {\n\n    switch (this.state.page) {\n      case \"thePost\":\n        return this.thePost()\n      case \"newPost\":\n        return this.theNewPostCard()\n      case \"profile\":\n        return this.myProfile()\n    }\n  }\n  logout = () => {\n    localStorage.clear()\n    this.props.history.push('/')\n  }\n\n\n  render() {\n    // debugger\n    console.log(\"Home Container props\", this.props);\n    \n    const { fposts, user, userId, history } = this.props;\n\n    return (\n      <div className=\"Home-Container\">\n        <div className=\"Homepage-nav\">\n\n          <div id=\"jays-gram\" onClick={() => this.returnToThePost()}><span >{this.props.user}s'taGram </span></div>\n\n          <div>\n            <span className=\"camera\" id={this.state.id} onClick={() => this.setState({ page: \"newPost\" })}> 📸 </span>\n          </div>\n\n          <div className=\"thumb-and-button\">\n            <div className=\"thumbnail\" onClick={() => this.setState({ page: \"profile\" })}><img src={Jack} id='thumbnail' /> </div>\n            <div className=\"logout\"><span onClick={this.logout} id=\"logout-button\" > logout  </span></div>\n\n\n\n          </div>\n\n\n        </div>\n        <div className=\"Home-Content\">\n        {this.props.postRequest && <Loader/>}\n          {this.pageToRender()}\n          {this.state.page !== \"newPost\" ? <div className=\"Home-footer\">Copyright &copy; 2019 Jaystagram</div> : <></>}\n        </div>\n      </div>\n\n\n\n    );\n  }\n \n}\nconst mapStateToProps = (state)=>{\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    post: state.post.post.data,\n    postRequested: state.post.requested\n  }\n}\n\nexport default connect(mapStateToProps, { getPost,fetchUser, addComment } )(HomeContainer);\n\n"]},"metadata":{},"sourceType":"module"}