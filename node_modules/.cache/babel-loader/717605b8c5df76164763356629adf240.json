{"ast":null,"code":"import React from 'react';\nimport { storage } from '../firebase/index';\n\nconst PicUploader = image => {\n  console.log(\"Pic to Upload from \", image);\n\n  if (image) {\n    const uploadTask = storage.ref(\"images/\".concat(image.name)).put(image);\n    uploadTask.on('state_changed', snapshot => {\n      this.setState({\n        loading: true\n      });\n    }, error => {\n      console.log(error);\n    }, () => {\n      storage.ref('images').child(image.name).getDownloadURL().then(url => {\n        return url;\n      });\n    });\n  }\n};\n\nexport default PicUploader;","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/components/PicUploader.js"],"names":["React","storage","PicUploader","image","console","log","uploadTask","ref","name","put","on","snapshot","setState","loading","error","child","getDownloadURL","then","url"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAGC,MAAMC,WAAW,GAAGC,KAAD,IAAU;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,KAAlC;;AAEA,MAAGA,KAAH,EAAS;AACR,UAAMG,UAAU,GAAGL,OAAO,CAACM,GAAR,kBAAsBJ,KAAK,CAACK,IAA5B,GAAoCC,GAApC,CAAwCN,KAAxC,CAAnB;AAEDG,IAAAA,UAAU,CAACI,EAAX,CAAc,eAAd,EAAgCC,QAAD,IAAc;AAC3C,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAFD,EAGGC,KAAD,IAAW;AACTV,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AAED,KANH,EAOE,MAAM;AACJb,MAAAA,OAAO,CAACM,GAAR,CAAY,QAAZ,EAAsBQ,KAAtB,CAA4BZ,KAAK,CAACK,IAAlC,EAAwCQ,cAAxC,GAAyDC,IAAzD,CAA8DC,GAAG,IAAI;AACpE,eAAOA,GAAP;AAEA,OAHD;AAIH,KAZD;AAaH;AACI,CApBJ;;AAqBD,eAAehB,WAAf","sourcesContent":["\nimport React from 'react';\nimport { storage } from '../firebase/index';\n\n\n const PicUploader= (image)=> {\n    console.log(\"Pic to Upload from \",image)\n\n    if(image){\n     const uploadTask = storage.ref(`images/${image.name}`).put(image);\n\n    uploadTask.on('state_changed', (snapshot) => {\n      this.setState({ loading: true })\n    },\n      (error) => {\n        console.log(error);\n\n      },\n      () => {\n        storage.ref('images').child(image.name).getDownloadURL().then(url => {\n         return url\n\n        })\n    })\n}\n    }\nexport default PicUploader\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}