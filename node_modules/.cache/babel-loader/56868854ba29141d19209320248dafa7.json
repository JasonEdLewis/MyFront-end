{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/Homepage.js\";\nimport React from \"react\";\nimport HomeContainer from \"./HomeContainer\";\nimport PostCard from \"./components/PostCard\";\nimport Profile from \"./Profile\";\nimport { getPost } from './redux/actions/PostActions';\nimport { connect } from 'react-redux';\nimport { fetchUser } from './redux/actions/UserActions';\nimport Loader from './components/loader';\n\nclass Homepage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      follooweePosts: []\n    };\n\n    this.theFetch = async way => {\n      let url;\n      way ? url = \"http://localhost:3000/\".concat(way) : url = \"http://localhost:3000/\";\n      const resp = await fetch(url);\n      return await resp.json();\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Home Page MOUNTED\");\n  }\n\n  render() {\n    console.log(\"Home Page Props:\", this.props);\n    const _this$props = this.props,\n          user = _this$props.user,\n          post = _this$props.post;\n    return React.createElement(React.Fragment, null, post.request && React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(HomeContainer // fposts={post}\n    // history={this.props.history}\n    , {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.login.token,\n    user: state.users,\n    post: state.post\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUser,\n  getPost\n})(Homepage);","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/Homepage.js"],"names":["React","HomeContainer","PostCard","Profile","getPost","connect","fetchUser","Loader","Homepage","Component","state","follooweePosts","theFetch","way","url","resp","fetch","json","componentDidMount","console","log","render","props","user","post","request","mapStateToProps","token","login","users"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAIA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,cAAc,EAAE;AADV,KAD6B;;AAAA,SAKrCC,QALqC,GAK1B,MAAMC,GAAN,IAAa;AACtB,UAAIC,GAAJ;AACAD,MAAAA,GAAG,GACEC,GAAG,mCAA4BD,GAA5B,CADL,GAEEC,GAAG,GAAG,wBAFX;AAGA,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAxB;AACA,aAAO,MAAMC,IAAI,CAACE,IAAL,EAAb;AACD,KAZoC;AAAA;;AAarCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKE,KAArC;AADO,wBAEgB,KAAKA,KAFrB;AAAA,UAECC,IAFD,eAECA,IAFD;AAAA,UAEOC,IAFP,eAEOA,IAFP;AAGP,WACE,0CACCA,IAAI,CAACC,OAAL,IAAgB,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjB,EAEE,oBAAC,aAAD,CACE;AACA;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AA7BoC;;AA+BvC,MAAMC,eAAe,GAAGhB,KAAK,IAAI;AAC/B,SAAO;AACLiB,IAAAA,KAAK,EAAEjB,KAAK,CAACkB,KAAN,CAAYD,KADd;AAELJ,IAAAA,IAAI,EAAEb,KAAK,CAACmB,KAFP;AAGLL,IAAAA,IAAI,EAAEd,KAAK,CAACc;AAHP,GAAP;AAKD,CAND;;AAUA,eAAenB,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA,SAAF;AAAaF,EAAAA;AAAb,CAAlB,CAAP,CAAkDI,QAAlD,CAAf","sourcesContent":["import React from \"react\";\nimport HomeContainer from \"./HomeContainer\";\nimport PostCard from \"./components/PostCard\";\nimport Profile from \"./Profile\";\nimport { getPost } from './redux/actions/PostActions'\nimport { connect } from 'react-redux';\nimport { fetchUser } from './redux/actions/UserActions';\nimport Loader from './components/loader'\n\n\n\nclass Homepage extends React.Component {\n  state = {\n    follooweePosts: []\n  };\n\n  theFetch = async way => {\n    let url;\n    way\n      ? (url = `http://localhost:3000/${way}`)\n      : (url = \"http://localhost:3000/\");\n    const resp = await fetch(url);\n    return await resp.json();\n  };\n  componentDidMount() {\n    console.log(\"Home Page MOUNTED\")\n  }\n\n  render() {\n    console.log(\"Home Page Props:\", this.props)\n    const { user, post } = this.props\n    return (\n      <>\n      {post.request && <Loader/>}\n        <HomeContainer\n          // fposts={post}\n          // history={this.props.history}\n        />\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    token: state.login.token,\n    user: state.users,\n    post: state.post\n  }\n}\n\n\n\nexport default connect(mapStateToProps, { fetchUser, getPost  })(Homepage)\n"]},"metadata":{},"sourceType":"module"}