{"ast":null,"code":"import _objectDestructuringEmpty from \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nvar _jsxFileName = \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js\";\nimport React from \"react\";\nimport { match } from 'react';\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Follows from './components/Follows';\nimport { getFollows, createFollow, deleteFollow } from './redux/actions/FollowActions';\nimport { connect } from 'react-redux';\nimport { getPost, editCaption } from './redux/actions/PostActions';\nimport { fetchUser, fetchAllUsers } from './redux/actions/UserActions';\nimport { addComment, deleteComment } from './redux/actions/CommentsActions';\nimport { changeLike } from './redux/actions/PostActions';\nimport { logout, notRequesting } from './redux/actions/LoginActions';\nimport profileCard from './components/ProfilePostCard';\nimport Loader from './components/loader';\n\nclass HomeContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showCommentField: false,\n      comment: \"\",\n      post_id: \"\",\n      Picture: \"\",\n      caption: \"\",\n      likes: 0,\n      page: \"thePost\",\n      likedPosts: [],\n      postRecieveingComment: null,\n      requesting: false,\n      showUser: 0\n    };\n\n    this.submitComment = postId => {\n      const _this$props = this.props,\n            userid = _this$props.userid,\n            addComment = _this$props.addComment,\n            user = _this$props.user,\n            requestedPost = _this$props.requestedPost;\n      const userId = this.state.userId;\n      const body = {\n        post_id: postId,\n        content: this.state.comment,\n        followee_id: userid\n      };\n      addComment(body);\n      debugger;\n      this.resetCommentLength();\n    };\n\n    this.postToCommentOn = id => {\n      this.setState({\n        postRecieveingComment: id\n      });\n    };\n\n    this.resetCommentLength = () => {\n      this.setState({\n        comment: \"\",\n        postRecieveingComment: null\n      });\n    };\n\n    this.handleComment = e => {\n      // console.log(e.target.value);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.deleteComment = com => {\n      const deleteComment = this.props.deleteComment; // console.log(com.id, com.post_id, com.followee_id, com.content)\n\n      deleteComment(com.id, com.post_id, com.followee_id, com.content);\n    };\n\n    this.getCapField = () => {\n      this.setState({\n        editingCaption: !this.state.editingCaption\n      });\n    };\n\n    this.handleEditSubmit = id => {\n      this.props.editCaption(id, this.state.comment);\n      this.setState({\n        comment: \"\"\n      });\n      this.getCapField();\n    };\n\n    this.showCommentField = () => {\n      return this.setState({\n        showCommentField: !this.state.showCommentField\n      });\n    };\n\n    this.handleLikes = (id, likes) => {\n      const likedPosts = this.state.likedPosts;\n\n      if (likedPosts.includes(id)) {\n        this.deleteLike(id, likes);\n        const likesArr = likedPosts.filter(pId => pId !== id);\n        this.setState({\n          likedPosts: likesArr\n        });\n      } else {\n        this.addLike(id, likes);\n        const newLikes = [...likedPosts, id];\n        this.setState({\n          likedPosts: newLikes\n        });\n      }\n    };\n\n    this.addLike = (id, like) => {\n      // this.setState({ liked: !this.state.liked })\n      const numLikes = like + 1;\n      this.props.changeLike(id, numLikes, \"add\");\n    };\n\n    this.deleteLike = (id, like) => {\n      // this.setState({ liked: !this.state.liked })\n      const numLikes = like - 1;\n      this.props.changeLike(id, numLikes, \"\");\n    };\n\n    this.thePost = () => {\n      const _this$props2 = this.props,\n            posts = _this$props2.posts,\n            users = _this$props2.users,\n            history = _this$props2.history;\n      const _this$state = this.state,\n            comment = _this$state.comment,\n            showCommentField = _this$state.showCommentField,\n            editingCaption = _this$state.editingCaption,\n            likedPosts = _this$state.likedPosts,\n            postToCommentOn = _this$state.postToCommentOn,\n            postRecieveingComment = _this$state.postRecieveingComment;\n      return posts && posts.length > 0 ? posts.map(post => React.createElement(Postcard, {\n        users: users,\n        post: post,\n        history: history,\n        commentLen: comment.length,\n        toggleCommentField: this.showCommentField,\n        commentFieldStatus: showCommentField,\n        yourField: postRecieveingComment,\n        post2comment: this.postToCommentOn,\n        id: post.id,\n        resetComment: this.resetCommentLength,\n        submitComment: () => this.submitComment(post.id, post.userId),\n        handleComment: this.handleComment,\n        handleLikes: this.handleLikes,\n        getCapEditField: this.getCapField,\n        editCapStatus: editingCaption,\n        submitCapEdit: this.handleEditSubmit,\n        addLike: this.addLike,\n        disLike: this.deleteLike,\n        liked: likedPosts,\n        commentors: this.theUsers,\n        deleteComment: this.deleteComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })) : console.log(\"The Post didnt work, here are the props:\", this.props);\n    };\n\n    this.handleNewPostClick = () => {\n      this.setState({\n        newPost: !this.state.newPost\n      });\n    };\n\n    this.theNewPostCard = props => {\n      const userid = this.props.userid;\n      return React.createElement(NewPostCard, {\n        back: this.returnToThePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      });\n    };\n\n    this.myProfile = () => {\n      this.props.history.push('/profile');\n    };\n\n    this.returnToThePost = () => {\n      this.setState({\n        page: \"thePost\"\n      });\n    };\n\n    this.handleNewPost = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.pageToRender = () => {\n      _objectDestructuringEmpty(this.state);\n\n      switch (this.state.page) {\n        case \"thePost\":\n          return this.thePost();\n\n        case \"newPost\":\n          return this.theNewPostCard();\n\n        case \"profile\":\n          return this.myProfile();\n\n        case \"\":\n          return;\n      }\n    };\n\n    this.showOneUser = id => {\n      console.log(\"Show \", id);\n    };\n\n    this.appLogout = () => {\n      const logout = this.props.logout;\n      logout();\n      localStorage.clear();\n      localStorage.length === 0 && this.returnToLogoutPage();\n    };\n\n    this.returnToLogoutPage = () => {\n      const _this$props3 = this.props,\n            requestedLogin = _this$props3.requestedLogin,\n            logout = _this$props3.logout;\n      logout();\n      this.props.history.push('/');\n    };\n\n    this.theUsers = () => {\n      const users = this.props.users;\n      const commentor = {};\n\n      if (!!users) {\n        this.props.users.forEach(user => commentor[user.id] = user.username);\n        return commentor;\n      }\n    };\n\n    this.followeeIds = () => {\n      // EVERYONE WHO IS FOLLOWED\n      const foll = this.props.follows.map(f => f.followee_id);\n      const followees = [...new Set(foll)]; // deletes/ filters duplicates out of arrays\n\n      return followees;\n    };\n\n    this.theFollow = (ErId, EeId) => {\n      return this.props.follows.find(f => f.follower_id === ErId && f.followee_id === EeId).id;\n    };\n\n    this.whoImFollowing = () => {\n      const _this$props4 = this.props,\n            follows = _this$props4.follows,\n            userid = _this$props4.userid,\n            users = _this$props4.users;\n      const peepsImFollowing = users.filter(u => follows.filter(f => f.follower_id === userid && f.followee_id === u.id));\n      return peepsImFollowing;\n    };\n\n    this.whoImNotFollowing = () => {\n      const _this$props5 = this.props,\n            follows = _this$props5.follows,\n            userid = _this$props5.userid,\n            users = _this$props5.users;\n      const peepsImFollowing = users.filter(u => follows.map(f => f.follower_id !== userid && f.followee_id === u.id));\n      return peepsImFollowing;\n    };\n\n    this.friends = () => {\n      const _this$props6 = this.props,\n            follows = _this$props6.follows,\n            userid = _this$props6.userid,\n            users = _this$props6.users,\n            deleteFollow = _this$props6.deleteFollow;\n      const friendsArr = follows.filter(f => f.follower_id === userid).map(f => f.followee_id);\n      const theFriends = friendsArr.map(f => users.find(user => user.id === f));\n      return theFriends.length > 0 ? theFriends.map(f => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \" \", React.createElement(\"img\", {\n        src: f.picture,\n        className: \"friends-or-not-image\",\n        onClick: () => this.showOneUser(f.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"friends-or-not-name\",\n        id: f.id,\n        onClick: () => deleteFollow(this.theFollow(userid, f.id)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"\".concat(f.username, \" \\uD835\\uDEA1\")), \" \")) : React.createElement(\"div\", {\n        className: \"make-some-friends\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \" Welcome!!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \" Make Some New Friends \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"\\u2B05\\uFE0F \\u2B05\\uFE0F\"));\n    };\n\n    this.Suggestedfriends = () => {\n      const _this$props7 = this.props,\n            createFollow = _this$props7.createFollow,\n            userid = _this$props7.userid,\n            users = _this$props7.users,\n            follows = _this$props7.follows;\n      const allButMe = users.filter(user => user.id !== userid);\n      const nonfriendsArr = follows.filter(f => f.follower_id !== userid).map(f => f.followee_id);\n      const friendsArr = follows.filter(f => f.follower_id === userid).map(f => f.followee_id);\n      const usersSinFollowers = allButMe.filter(u => !this.followeeIds().includes(u.id));\n      const nonFollowers = allButMe.filter(u => nonfriendsArr.includes(u.id) && !friendsArr.includes(u.id));\n      const tempArr = [...nonFollowers, ...usersSinFollowers];\n      const whoImNotFollowing = [...new Set(tempArr)];\n      return whoImNotFollowing.map(f => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \" \", React.createElement(\"img\", {\n        src: f.picture,\n        className: \"friends-or-not-image\",\n        onClick: () => this.showOneUser(f.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"friends-or-not-name\",\n        onClick: () => createFollow(f.id, userid),\n        id: f.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \" \".concat(f.username, \" \\u2713\"))));\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"HOME CONTAINER\");\n    const history = this.props.history;\n    !localStorage.token && history.push('/');\n  } // COMMENTS //\n\n\n  render() {\n    // debugger\n    // console.log(\"Home Container props\", this.props);\n    const _this$props8 = this.props,\n          fposts = _this$props8.fposts,\n          user = _this$props8.user,\n          userId = _this$props8.userId,\n          history = _this$props8.history,\n          requestedLogin = _this$props8.requestedLogin,\n          picture = _this$props8.picture;\n    const requesting = this.state.requesting;\n    this.theUsers();\n    this.followeeIds();\n    this.whoImFollowing();\n    return React.createElement(\"div\", {\n      className: \"Home-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(Follows, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), React.createElement(\"nav\", {\n      className: \"Homepage-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      id: \"jays-gram\",\n      onClick: () => this.returnToThePost(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, this.props.user, \"s'taGram \"), React.createElement(\"p\", {\n      onClick: this.appLogout,\n      className: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \" logout  \")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"camera\",\n      id: this.state.id,\n      onClick: () => this.setState({\n        page: \"newPost\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \" \\uD83D\\uDCF8 \")), React.createElement(\"li\", {\n      className: \"thumbnail\",\n      onClick: () => this.setState({\n        page: \"profile\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: picture,\n      id: \"thumbnail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }), \" \"))), React.createElement(\"div\", {\n      className: !localStorage.token ? \"loading \" : \"Home-Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sugested-friends\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"friends-and-suggested-headers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \" Suggested\"), this.Suggestedfriends()), React.createElement(\"div\", {\n      className: \"friends\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"friends-and-suggested-headers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \"Friends\"), this.friends()), this.pageToRender(), this.state.page !== \"newPost\" ? React.createElement(\"div\", {\n      className: \"Home-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Copyright \\xA9 2019 Jaystagram\") : React.createElement(React.Fragment, null)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    picture: state.users.picture,\n    users: state.users.all,\n    posts: state.post.posts,\n    requestedPost: state.post.requested,\n    requestedLogin: state.login.requested,\n    follows: state.follows.follows\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getFollows,\n  getPost,\n  fetchAllUsers,\n  fetchUser,\n  addComment,\n  editCaption,\n  changeLike,\n  logout,\n  notRequesting,\n  deleteComment,\n  createFollow,\n  deleteFollow\n})(HomeContainer);","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js"],"names":["React","match","Postcard","NewPostCard","Follows","getFollows","createFollow","deleteFollow","connect","getPost","editCaption","fetchUser","fetchAllUsers","addComment","deleteComment","changeLike","logout","notRequesting","profileCard","Loader","HomeContainer","Component","state","showCommentField","comment","post_id","Picture","caption","likes","page","likedPosts","postRecieveingComment","requesting","showUser","submitComment","postId","props","userid","user","requestedPost","userId","body","content","followee_id","resetCommentLength","postToCommentOn","id","setState","handleComment","e","target","name","value","com","getCapField","editingCaption","handleEditSubmit","handleLikes","includes","deleteLike","likesArr","filter","pId","addLike","newLikes","like","numLikes","thePost","posts","users","history","length","map","post","theUsers","console","log","handleNewPostClick","newPost","theNewPostCard","returnToThePost","myProfile","push","handleNewPost","pageToRender","showOneUser","appLogout","localStorage","clear","returnToLogoutPage","requestedLogin","commentor","forEach","username","followeeIds","foll","follows","f","followees","Set","theFollow","ErId","EeId","find","follower_id","whoImFollowing","peepsImFollowing","u","whoImNotFollowing","friends","friendsArr","theFriends","picture","Suggestedfriends","allButMe","nonfriendsArr","usersSinFollowers","nonFollowers","tempArr","componentDidMount","token","render","fposts","mapStateToProps","all","requested","login"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {match} from 'react'\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Follows from './components/Follows';\nimport { getFollows, createFollow, deleteFollow } from './redux/actions/FollowActions';\nimport { connect } from 'react-redux';\nimport { getPost, editCaption } from './redux/actions/PostActions';\nimport { fetchUser, fetchAllUsers } from './redux/actions/UserActions';\nimport { addComment, deleteComment } from './redux/actions/CommentsActions';\nimport { changeLike } from './redux/actions/PostActions';\nimport { logout, notRequesting } from './redux/actions/LoginActions';\nimport profileCard from './components/ProfilePostCard'\nimport Loader from './components/loader';\n\n\nclass HomeContainer extends React.Component {\n  state = {\n    showCommentField: false,\n    comment: \"\",\n    post_id: \"\",\n    Picture: \"\",\n    caption: \"\",\n    likes: 0,\n    page: \"thePost\",\n    likedPosts: [],\n    postRecieveingComment: null,\n    requesting: false,\n    showUser: 0,\n\n\n  };\n\n  componentDidMount() {\n\n    console.log(\"HOME CONTAINER\")\n    const { history } = this.props\n\n    !localStorage.token && history.push('/')\n\n  }\n\n  // COMMENTS //\n\n\n  submitComment = (postId) => {\n    const { userid, addComment, user, requestedPost } = this.props\n    const { userId } = this.state\n    const body = {\n      post_id: postId,\n      content: this.state.comment,\n      followee_id: userid\n    }\n    addComment(body)\n    debugger\n    this.resetCommentLength()\n\n  };\n\n\n  postToCommentOn = (id) => {\n    this.setState({ postRecieveingComment: id })\n  }\n\n  resetCommentLength = () => {\n    this.setState({ comment: \"\", postRecieveingComment: null })\n  }\n\n  handleComment = e => {\n    // console.log(e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n\n  deleteComment = (com) => {\n    const { deleteComment } = this.props\n\n    // console.log(com.id, com.post_id, com.followee_id, com.content)\n    deleteComment(com.id, com.post_id, com.followee_id, com.content)\n\n  }\n  // EDIT CAPTION\n\n  getCapField = () => {\n    this.setState({ editingCaption: !this.state.editingCaption })\n  }\n  handleEditSubmit = (id) => {\n    this.props.editCaption(id, this.state.comment)\n    this.setState({ comment: \"\" })\n    this.getCapField()\n  }\n  showCommentField = () => {\n    return this.setState({ showCommentField: !this.state.showCommentField })\n  }\n\n\n  // LIKES //\n\n  handleLikes = (id, likes) => {\n    const { likedPosts } = this.state\n    if (likedPosts.includes(id)) {\n      this.deleteLike(id, likes)\n      const likesArr = likedPosts.filter(pId => pId !== id)\n      this.setState({ likedPosts: likesArr })\n\n    }\n    else {\n      this.addLike(id, likes)\n      const newLikes = [...likedPosts, id]\n      this.setState({ likedPosts: newLikes })\n    }\n\n  }\n\n  addLike = (id, like) => {\n\n    // this.setState({ liked: !this.state.liked })\n    const numLikes = like + 1\n    this.props.changeLike(id, numLikes, \"add\")\n  }\n  deleteLike = (id, like) => {\n    // this.setState({ liked: !this.state.liked })\n    const numLikes = like - 1\n    this.props.changeLike(id, numLikes, \"\")\n  }\n\n\n  // POST STUFF  //\n\n\n  thePost = () => {\n    const { posts, users, history } = this.props\n    const { comment, showCommentField, editingCaption, likedPosts, postToCommentOn, postRecieveingComment } = this.state\n    return posts && posts.length > 0 ? posts.map(post => (\n\n      <Postcard\n        users={users}\n        post={post}\n        history={history}\n        commentLen={comment.length}\n        toggleCommentField={this.showCommentField}\n        commentFieldStatus={showCommentField}\n        yourField={postRecieveingComment}\n        post2comment={this.postToCommentOn}\n        id={post.id}\n        resetComment={this.resetCommentLength}\n        submitComment={() => this.submitComment(post.id, post.userId)}\n        handleComment={this.handleComment}\n        handleLikes={this.handleLikes}\n        getCapEditField={this.getCapField}\n        editCapStatus={editingCaption}\n        submitCapEdit={this.handleEditSubmit}\n        addLike={this.addLike}\n        disLike={this.deleteLike}\n        liked={likedPosts}\n        commentors={this.theUsers}\n        deleteComment={this.deleteComment}\n      />\n    )) : console.log(\"The Post didnt work, here are the props:\", this.props)\n  };\n\n\n\n  // NEW POST STUFF \n  // SUBMIT THE COMMENT /FETCH POST\n  handleNewPostClick = () => {\n    this.setState({ newPost: !this.state.newPost });\n  };\n\n  theNewPostCard = props => {\n    const { userid } = this.props\n    return (\n      <NewPostCard\n        back={this.returnToThePost}\n      />\n    );\n  };\n\n  myProfile = () => {\n    this.props.history.push('/profile')\n  };\n\n\n  returnToThePost = () => {\n    this.setState({ page: \"thePost\" })\n  }\n\n\n  handleNewPost = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  pageToRender = () => {\n    const { } = this.state\n    switch (this.state.page) {\n      case \"thePost\":\n        return this.thePost()\n      case \"newPost\":\n        return this.theNewPostCard()\n      case \"profile\":\n        return this.myProfile()\n      case ``:\n        return\n    }\n  }\n\nshowOneUser =(id)=>{\n    console.log(\"Show \",id)\n  }\n\n  // LOGOUT //\n\n  appLogout = () => {\n    const { logout } = this.props\n    logout()\n    localStorage.clear()\n    localStorage.length === 0 && this.returnToLogoutPage()\n\n  }\n\n  returnToLogoutPage = () => {\n    const { requestedLogin, logout } = this.props\n    logout()\n    this.props.history.push('/')\n  }\n  theUsers = () => {\n    const { users } = this.props\n    const commentor = {}\n    if (!!users) {\n      this.props.users.forEach(user => commentor[user.id] = user.username)\n      return commentor\n    }\n  }\n\n  // FREINDS\n  followeeIds = () => {\n    // EVERYONE WHO IS FOLLOWED\n    const foll = this.props.follows.map(f => f.followee_id)\n    const followees = [...new Set(foll)] // deletes/ filters duplicates out of arrays\n    return followees\n  }\n  theFollow=(ErId,EeId)=>{\n   \n   return this.props.follows.find(f => f.follower_id === ErId && f.followee_id === EeId).id\n  }\n  whoImFollowing=()=>{\n    const {follows, userid,users } = this.props\n   const peepsImFollowing = users.filter(u => follows.filter(f => \nf.follower_id === userid && f.followee_id === u.id ))\n   return peepsImFollowing\n  }\n  whoImNotFollowing=()=>{\n    const {follows, userid,users } = this.props\n    const peepsImFollowing = users.filter(u => follows.map(f => \n f.follower_id !== userid && f.followee_id === u.id ))\n return peepsImFollowing\n  }\n\n  friends = () => {\n    const { follows, userid, users, deleteFollow } = this.props\n    const friendsArr = follows.filter(f => f.follower_id === userid).map( f => f.followee_id )\n   const theFriends = friendsArr.map(f => users.find(user => user.id === f))\n\n   return theFriends.length > 0 ? theFriends.map(f => <div> <img src={f.picture} className=\"friends-or-not-image\" onClick={()=> this.showOneUser(f.id)}/> <br /><span className=\"friends-or-not-name\" id={f.id} onClick={() => deleteFollow(this.theFollow(userid,f.id ))}>{`${f.username} 𝚡`}</span> </div>) :<div className=\"make-some-friends\">\n      <p > Welcome!!</p>\n      <p> Make Some New Friends </p>\n      <p>⬅️ ⬅️</p>\n   </div> \n\n  }\n  Suggestedfriends = () => {\n    const { createFollow, userid, users,follows } = this.props\n    const allButMe = users.filter(user => user.id !== userid)\n    const nonfriendsArr = follows.filter(f => f.follower_id !== userid).map(f => f.followee_id )\n    const friendsArr = follows.filter(f => f.follower_id === userid).map(f => f.followee_id )\n    const usersSinFollowers = allButMe.filter( u => !this.followeeIds().includes(u.id))\n    const nonFollowers = allButMe.filter(u => nonfriendsArr.includes(u.id) && !friendsArr.includes(u.id) )\n    const tempArr = [...nonFollowers, ...usersSinFollowers]\n    const whoImNotFollowing = [...new Set(tempArr)]\n\n   \n\n   return whoImNotFollowing.map(f => <div> <img src={f.picture} className=\"friends-or-not-image\" onClick={()=> this.showOneUser(f.id)}/> <br/><span className=\"friends-or-not-name\" onClick={() => createFollow(f.id, userid)} id={f.id}>{` ${f.username} ✓`}</span></div>)\n\n  }\n\n  render() {\n    // debugger\n    // console.log(\"Home Container props\", this.props);\n\n    const { fposts, user, userId, history, requestedLogin, picture } = this.props;\n    const { requesting } = this.state\n    this.theUsers()\n    this.followeeIds()\n    this.whoImFollowing()\n\n    return (\n      <div className=\"Home-Container\">\n        <Follows />\n        <nav className=\"Homepage-nav\">\n          <ul>\n            <li id=\"jays-gram\" onClick={() => this.returnToThePost()}><span >{this.props.user}s'taGram </span>\n              <p onClick={this.appLogout} className=\"logout\" > logout  </p></li>\n\n            <li>\n              <p className=\"camera\" id={this.state.id} onClick={() => this.setState({ page: \"newPost\" })}> 📸 </p>\n            </li>\n\n\n            <li className=\"thumbnail\" onClick={() => this.setState({ page: \"profile\" })}><img src={picture} id='thumbnail' /> </li>\n\n          </ul>\n        </nav>\n\n        <div className={!localStorage.token ? \"loading \" : \"Home-Content\"}>\n\n          <div className=\"sugested-friends\">\n            <span className=\"friends-and-suggested-headers\"> Suggested</span>\n            {this.Suggestedfriends()}\n          </div>\n\n          <div className=\"friends\">\n            <span className=\"friends-and-suggested-headers\">Friends</span>\n            {this.friends()}\n          </div>\n\n          {this.pageToRender()}\n          {this.state.page !== \"newPost\" ? <div className=\"Home-footer\">Copyright &copy; 2019 Jaystagram</div> : <></>}\n        </div>\n\n      </div>\n\n\n\n    );\n  }\n\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    picture: state.users.picture,\n    users: state.users.all,\n    posts: state.post.posts,\n    requestedPost: state.post.requested,\n    requestedLogin: state.login.requested,\n    follows: state.follows.follows\n  }\n}\n\nexport default connect(mapStateToProps, { getFollows, getPost, fetchAllUsers, fetchUser, addComment, editCaption, changeLike, logout, notRequesting, deleteComment, createFollow, deleteFollow })(HomeContainer);\n\n\n"]},"metadata":{},"sourceType":"module"}