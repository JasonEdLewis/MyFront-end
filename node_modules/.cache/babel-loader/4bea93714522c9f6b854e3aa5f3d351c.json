{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/components/Follows.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getFollows } from '../redux/actions/FollowActions';\nimport { fetchAllUsers } from '../redux/actions/UserActions';\n\nclass Follows extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.allFriends = () => {\n      const friendships = [];\n      const _this$props = this.props,\n            users = _this$props.users,\n            follows = _this$props.follows;\n      return follows.forEach(follow => {\n        const Friend1 = users.find(user => {\n          return user.id === follow.followee_id;\n        });\n        const Friend2 = users.find(user => {\n          return user.id === follow.follower_id;\n        });\n        friendships.push({\n          Friend1: Friend2\n        });\n        console.log(\"frei\", friendships);\n        return friendships;\n      });\n    };\n  }\n\n  componentDidMount() {\n    const _this$props2 = this.props,\n          getFollows = _this$props2.getFollows,\n          fetchAllUsers = _this$props2.fetchAllUsers;\n    getFollows();\n    fetchAllUsers().then(() => this.allFriends());\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    follows: state.follows,\n    users: state.users.all\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getFollows,\n  fetchAllUsers\n})(Follows);","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/components/Follows.js"],"names":["React","Component","connect","getFollows","fetchAllUsers","Follows","allFriends","friendships","props","users","follows","forEach","follow","Friend1","find","user","id","followee_id","Friend2","follower_id","push","console","log","componentDidMount","then","render","mapStateToProps","state","all"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,gCAA3B;AACA,SAASC,aAAT,QAA8B,8BAA9B;;AAGC,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAQ7BK,UAR6B,GAQjB,MAAI;AACZ,YAAMC,WAAW,GAAG,EAApB;AADY,0BAEc,KAAKC,KAFnB;AAAA,YAEJC,KAFI,eAEJA,KAFI;AAAA,YAEGC,OAFH,eAEGA,OAFH;AAGjB,aAAOA,OAAO,CAACC,OAAR,CAAiBC,MAAM,IAAI;AAE5B,cAAMC,OAAO,GAAIJ,KAAK,CAACK,IAAN,CAAWC,IAAI,IAAI;AAChC,iBAAOA,IAAI,CAACC,EAAL,KAAaJ,MAAM,CAACK,WAA3B;AAAwC,SAD3B,CAAjB;AAGE,cAAMC,OAAO,GAAIT,KAAK,CAACK,IAAN,CAAWC,IAAI,IAAI;AACnC,iBAAQA,IAAI,CAACC,EAAL,KAAaJ,MAAM,CAACO,WAA5B;AAAyC,SADzB,CAAjB;AAKAZ,QAAAA,WAAW,CAACa,IAAZ,CAAiB;AAAEP,UAAAA,OAAO,EAAGK;AAAZ,SAAjB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBf,WAAnB;AACA,eAAOA,WAAP;AACF,OAbC,CAAP;AAeE,KA1B4B;AAAA;;AAE7BgB,EAAAA,iBAAiB,GAAG;AAAA,yBACsB,KAAKf,KAD3B;AAAA,UACTL,UADS,gBACTA,UADS;AAAA,UACEC,aADF,gBACEA,aADF;AAEhBD,IAAAA,UAAU;AACVC,IAAAA,aAAa,GAAGoB,IAAhB,CAAqB,MAAM,KAAKlB,UAAL,EAA3B;AACH;;AAqBDmB,EAAAA,MAAM,GAAG;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAlC4B;;AAoCjC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHjB,IAAAA,OAAO,EAAEiB,KAAK,CAACjB,OADZ;AAEHD,IAAAA,KAAK,EAAEkB,KAAK,CAAClB,KAAN,CAAYmB;AAFhB,GAAP;AAIH,CALD;;AAOA,eAAe1B,OAAO,CAACwB,eAAD,EAAkB;AAAEvB,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAuDC,OAAvD,CAAf","sourcesContent":["import React, { Component} from 'react';\nimport { connect } from 'react-redux';\nimport { getFollows } from '../redux/actions/FollowActions';\nimport { fetchAllUsers } from '../redux/actions/UserActions'\n\n\n class Follows extends Component {\n\n    componentDidMount() {\n        const {getFollows,fetchAllUsers   } = this.props\n        getFollows()\n        fetchAllUsers().then(()=>  this.allFriends()  )\n    }\n\n    allFriends =()=>{\n        const friendships = []\n        const { users, follows} = this.props\n   return follows.forEach( follow => {\n\n         const Friend1 =  users.find(user => { \n             return user.id  === follow.followee_id } );\n                \n           const Friend2 =  users.find(user => { \n            return  user.id  === follow.follower_id } )\n            \n\n          \n           friendships.push({ Friend1 : Friend2})\n           console.log(\"frei\",friendships)\n           return friendships\n        })\n        \n    }\n    render() {\n    \n        return (\n            <div>\n            \n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        follows: state.follows,\n        users: state.users.all\n    }\n}\n\nexport default connect(mapStateToProps, { getFollows, fetchAllUsers})(Follows)"]},"metadata":{},"sourceType":"module"}