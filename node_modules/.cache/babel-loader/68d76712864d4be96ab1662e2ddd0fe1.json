{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/FlatIron/Mod_4/Project/MyStagram/MyFront-end/src/HomeContainer.js\";\nimport React from \"react\";\nimport \"./components/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport { fetchPost, submitNewPost } from './components/PostAdapter';\nim;\nimport { Card, Form, Navbar, Button, NavbarBrand, Nav } from \"react-bootstrap\";\n\nclass HomeContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: this.props.userId,\n      name: this.props.user,\n      comment: \"\",\n      post_id: \"\",\n      Picture: \"\",\n      caption: \"\",\n      likes: 0,\n      page: \"thePost\"\n    };\n\n    this.info = () => {\n      console.log(this.props);\n      return this.props;\n    };\n\n    this.postComment = (id, content, fId) => {\n      return fetch(\"http://localhost:3000/comments\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"Application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          post_id: id,\n          content: content,\n          followee_id: fId\n        })\n      });\n    };\n\n    this.handleComment = e => {\n      // console.log(e.target.value);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.thePost = props => {\n      return this.props.fposts.map(post => React.createElement(Postcard, {\n        post: post,\n        id: post.id,\n        submitComment: () => this.submitComment(post.id, post.userId),\n        handleComment: this.handleComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    };\n\n    this.handleNewPostClick = () => {\n      this.setState({\n        newPost: !this.state.newPost\n      });\n    };\n\n    this.theNewPostCard = props => {\n      return React.createElement(NewPostCard, {\n        handleNewPost: this.handleNewPost,\n        submitPost: () => this.submitNewPost(this.state.id),\n        state: this.state,\n        userId: this.state.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    };\n\n    this.myProfile = () => {\n      const myPost = this.props.fposts.filter(post => post.user_id === this.state.id);\n      debugger;\n      return React.createElement(Postcard, {\n        post: myPost,\n        id: myPost.id,\n        submitComment: () => this.submitComment(myPost.id, myPost.userId),\n        handleComment: this.handleComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n    };\n\n    this.submitComment = (postId, userId) => {\n      console.log(\"Post id\", postId, \"User is:\", userId, \"comment: \", this.state.comment);\n      this.postComment(postId, this.state.comment, userId).then(resp => resp.json()).then(console.log);\n    };\n\n    this.submitNewPost = id => {\n      console.log(id);\n      const postUlr = \"http://localhost:3000/posts\";\n      console.log(\"The state we are submitting\", this.state.Picture, this.state.caption, id);\n      fetch(postUlr, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: id,\n          Picture: this.state.Picture,\n          caption: this.state.caption,\n          likes: 0\n        })\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          newPost: false\n        });\n      }); // this.handleNewPostClick();\n    };\n\n    this.handleNewPost = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.pageToRender = () => {\n      switch (this.state.page) {\n        case \"thePost\":\n          return this.thePost();\n\n        case \"newPost\":\n          return this.theNewPostCard();\n\n        case \"profile\":\n          return this.myProfile();\n      }\n    };\n  }\n\n  render() {\n    // debugger\n    console.log(\"Home Container props\", this.props);\n    const _this$props = this.props,\n          fposts = _this$props.fposts,\n          user = _this$props.user,\n          userId = _this$props.userId;\n    return React.createElement(\"div\", {\n      className: \"Home-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Home-Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"signindiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      className: \"ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Nav.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Jays'taGram \")), React.createElement(Nav.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"\",\n      className: \"camera-btn\",\n      onClick: () => this.state.page({\n        page: \"newPost\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"logo\",\n      id: this.state.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"\\uD83D\\uDCF8\"))), React.createElement(Nav.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Welcome Back\", React.createElement(\"span\", {\n      style: {\n        color: \"blue\"\n      },\n      onClick: () => this.setState({\n        page: \"profile\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.props.user)), React.createElement(Nav.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-dark\",\n      onClick: () => fetchPost(),\n      className: \"ml-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"logout\")), React.createElement(Navbar.Toggle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"Home-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), this.pageToRender() // this.state.newPost ? (\n    //   <>\n    //     <NewPostCard\n    //       handleNewPost={this.handleNewPost}\n    //       submitPost={() => this.submitNewPost(userId)}\n    //       state={this.state}\n    //       userId={userId}\n    //     />\n    //   </>)\n    //  :\n    //   this.thePost()\n    ), React.createElement(\"div\", {\n      className: \"Home-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Copyright \\xA9 2019 Jaystagram\"));\n  }\n\n}\n\nexport default HomeContainer;\n/* if this.state.newPost? <NewPostCard> : (this.state.profile ? this.myPost : thisThePost())\n\n// if (this.state.newPost){\n  return (\n    <>\n              <NewPostCard\n                handleNewPost={this.handleNewPost}\n                submitPost={() => this.submitNewPost(userId)}\n                state={this.state}\n                userId={userId}\n              />\n            </>\n     </>\n  )\n}\nelse if (this.state.profile){\nthis.myPost())\n}\nelse {\n  return this.myPost()\n}\n\n\n*/","map":{"version":3,"sources":["/Users/owner/Desktop/FlatIron/Mod_4/Project/MyStagram/MyFront-end/src/HomeContainer.js"],"names":["React","Postcard","NewPostCard","fetchPost","submitNewPost","im","Card","Form","Navbar","Button","NavbarBrand","Nav","HomeContainer","Component","state","id","props","userId","name","user","comment","post_id","Picture","caption","likes","page","info","console","log","postComment","content","fId","fetch","method","headers","Accept","body","JSON","stringify","followee_id","handleComment","e","setState","target","value","thePost","fposts","map","post","submitComment","handleNewPostClick","newPost","theNewPostCard","handleNewPost","myProfile","myPost","filter","user_id","postId","then","resp","json","postUlr","res","data","pageToRender","render","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./components/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport {fetchPost, submitNewPost } from './components/PostAdapter';\nim\n\n\nimport { Card, Form, Navbar, Button, NavbarBrand, Nav } from \"react-bootstrap\";\n\nclass HomeContainer extends React.Component {\n  state = {\n    id: this.props.userId,\n    name: this.props.user,\n    comment: \"\",\n    post_id: \"\",\n    Picture: \"\",\n    caption: \"\",\n    likes: 0,\n    page:\"thePost\"\n    \n  };\n\n  info = () => {\n    console.log(this.props);\n    return this.props;\n  };\n  // POST COMMENT FETCH POST\n  postComment = (id, content, fId) => {\n    return fetch(\"http://localhost:3000/comments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"Application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        post_id: id,\n        content: content,\n        followee_id: fId\n      })\n    });\n  };\n\n  \n\n  // HANDLER FOR COMMENTS\n  handleComment = e => {\n    // console.log(e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  thePost = props => {\n    \n\n    return this.props.fposts.map(post => (\n      <Postcard\n        post={post}\n        id={post.id}\n        submitComment={() => this.submitComment(post.id, post.userId)}\n        handleComment={this.handleComment}\n      />\n    ));\n  };\n\n  // SUBMIT THE COMMENT /FETCH POST\n  handleNewPostClick = () => {\n    this.setState({ newPost: !this.state.newPost });\n  };\n\n  theNewPostCard = props => {\n    return (\n      <NewPostCard\n        handleNewPost={this.handleNewPost}\n        submitPost={() => this.submitNewPost(this.state.id)}\n        state={this.state}\n        userId={this.state.id}\n\n      />\n    );\n  };\n\n  myProfile =() => {\n    const myPost = this.props.fposts.filter(post => post.user_id === this.state.id);\n    debugger\n    return (\n      <Postcard\n        post={myPost}\n        id={myPost.id}\n        submitComment={() => this.submitComment(myPost.id, myPost.userId)}\n        handleComment={this.handleComment}\n        \n      />\n    );\n  };\n  // this.state.cameraClick ? NewPost() :\n\n  submitComment = (postId, userId) => {\n    console.log(\n      \"Post id\",\n      postId,\n      \"User is:\",\n      userId,\n      \"comment: \",\n      this.state.comment\n    );\n    this.postComment(postId, this.state.comment, userId)\n      .then(resp => resp.json())\n      .then(console.log);\n  };\n\n  submitNewPost = id => {\n    console.log(id);\n    const postUlr = \"http://localhost:3000/posts\";\n    console.log(\n      \"The state we are submitting\",\n      this.state.Picture,\n      this.state.caption,\n      id\n    );\n    fetch(postUlr, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id: id,\n        Picture: this.state.Picture,\n        caption: this.state.caption,\n        likes: 0\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          newPost: false\n        });\n      });\n    // this.handleNewPostClick();\n  };\n\n  handleNewPost = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  pageToRender=()=>{\n    switch(this.state.page){\n      case \"thePost\":\n        return this.thePost()\n      case \"newPost\":\n        return this.theNewPostCard()\n      case \"profile\":\n        return this.myProfile()\n    }\n  }\n\n  render() {\n    // debugger\n    console.log(\"Home Container props\", this.props);\n    const { fposts, user, userId } = this.props;\n\n    return (\n      <div className=\"Home-Container\">\n        <div className=\"Home-Content\">\n          <div className=\"signindiv\">\n            <Navbar className=\"ml-auto\">\n              <Nav.Item>\n                <h3>Jays'taGram </h3>\n              </Nav.Item>\n              <Nav.Item>\n                <Button\n                  variant=\"\"\n                  className=\"camera-btn\"\n                  onClick={() => this.state.page({page:\"newPost\"})}\n                >\n                  <span className=\"logo\" id={this.state.id}>\n                    📸\n                  </span>\n                </Button>\n              </Nav.Item>\n              <Nav.Item>\n                Welcome Back\n                <span style={{ color: \"blue\" }} onClick={()=> this.setState({page:\"profile\"})}>{this.props.user}</span>\n              </Nav.Item>\n              <Nav.Item>\n                <Button\n                  variant=\"outline-dark\"\n                  onClick={() => fetchPost()}\n                  className=\"ml-auto\"\n                >\n                  logout\n                </Button>\n              </Nav.Item>\n              <Navbar.Toggle />\n            </Navbar>\n          </div>\n\n          <div className=\"Home-main\"></div>\n\n          { \n            this.pageToRender()\n            \n          // this.state.newPost ? (\n          //   <>\n          //     <NewPostCard\n          //       handleNewPost={this.handleNewPost}\n          //       submitPost={() => this.submitNewPost(userId)}\n          //       state={this.state}\n          //       userId={userId}\n          //     />\n          //   </>)\n          //  :\n          //   this.thePost()\n          \n              \n          }\n        </div>\n        <div className=\"Home-footer\">Copyright &copy; 2019 Jaystagram</div>\n      </div>\n    );\n  }\n}\n\nexport default HomeContainer;\n\n/* if this.state.newPost? <NewPostCard> : (this.state.profile ? this.myPost : thisThePost())\n\n// if (this.state.newPost){\n  return (\n    <>\n              <NewPostCard\n                handleNewPost={this.handleNewPost}\n                submitPost={() => this.submitNewPost(userId)}\n                state={this.state}\n                userId={userId}\n              />\n            </>\n     </>\n  )\n}\nelse if (this.state.profile){\nthis.myPost())\n}\nelse {\n  return this.myPost()\n}\n\n\n*/\n"]},"metadata":{},"sourceType":"module"}