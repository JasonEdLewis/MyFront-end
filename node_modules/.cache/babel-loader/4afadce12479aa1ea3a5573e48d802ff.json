{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js\";\nimport React from \"react\";\nimport { match } from 'react';\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Follows from './components/Follows';\nimport { getFollows, createFollow, deleteFollow } from './redux/actions/FollowActions';\nimport { connect } from 'react-redux';\nimport { getPost, editCaption } from './redux/actions/PostActions';\nimport { fetchUser, fetchAllUsers } from './redux/actions/UserActions';\nimport { addComment, deleteComment } from './redux/actions/CommentsActions';\nimport { changeLike } from './redux/actions/PostActions';\nimport { logout, notRequesting } from './redux/actions/LoginActions';\nimport ProfileCard from './components/ProfilePostCard';\nimport Loader from './components/loader'; // import Bio from './components/UserBio'\n\nclass HomeContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showCommentField: false,\n      comment: \"\",\n      post_id: \"\",\n      Picture: \"\",\n      caption: \"\",\n      likes: 0,\n      page: \"thePost\",\n      likedPosts: [],\n      postRecieveingComment: null,\n      requesting: false,\n      showingUserId: null,\n      showingOne: false\n    };\n\n    this.submitComment = postId => {\n      const _this$props = this.props,\n            userid = _this$props.userid,\n            addComment = _this$props.addComment,\n            user = _this$props.user,\n            requestedPost = _this$props.requestedPost;\n      const userId = this.state.userId;\n      const body = {\n        post_id: postId,\n        content: this.state.comment,\n        followee_id: userid\n      };\n      addComment(body);\n      debugger;\n      this.resetCommentLength();\n    };\n\n    this.postToCommentOn = id => {\n      this.setState({\n        postRecieveingComment: id\n      });\n    };\n\n    this.resetCommentLength = () => {\n      this.setState({\n        comment: \"\",\n        postRecieveingComment: null\n      });\n    };\n\n    this.handleComment = e => {\n      // console.log(e.target.value);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.deleteComment = com => {\n      const deleteComment = this.props.deleteComment; // console.log(com.id, com.post_id, com.followee_id, com.content)\n\n      deleteComment(com.id, com.post_id, com.followee_id, com.content);\n    };\n\n    this.getCapField = () => {\n      this.setState({\n        editingCaption: !this.state.editingCaption\n      });\n    };\n\n    this.handleEditSubmit = id => {\n      this.props.editCaption(id, this.state.comment);\n      this.setState({\n        comment: \"\"\n      });\n      this.getCapField();\n    };\n\n    this.showCommentField = () => {\n      return this.setState({\n        showCommentField: !this.state.showCommentField\n      });\n    };\n\n    this.handleLikes = (id, likes) => {\n      const likedPosts = this.state.likedPosts;\n\n      if (likedPosts.includes(id)) {\n        this.deleteLike(id, likes);\n        const likesArr = likedPosts.filter(pId => pId !== id);\n        this.setState({\n          likedPosts: likesArr\n        });\n      } else {\n        this.addLike(id, likes);\n        const newLikes = [...likedPosts, id];\n        this.setState({\n          likedPosts: newLikes\n        });\n      }\n    };\n\n    this.addLike = (id, like) => {\n      // this.setState({ liked: !this.state.liked })\n      const numLikes = like + 1;\n      this.props.changeLike(id, numLikes, \"add\");\n    };\n\n    this.deleteLike = (id, like) => {\n      // this.setState({ liked: !this.state.liked })\n      const numLikes = like - 1;\n      this.props.changeLike(id, numLikes, \"\");\n    };\n\n    this.thePost = () => {\n      const _this$props2 = this.props,\n            posts = _this$props2.posts,\n            users = _this$props2.users,\n            history = _this$props2.history;\n      const _this$state = this.state,\n            comment = _this$state.comment,\n            showCommentField = _this$state.showCommentField,\n            editingCaption = _this$state.editingCaption,\n            likedPosts = _this$state.likedPosts,\n            postToCommentOn = _this$state.postToCommentOn,\n            postRecieveingComment = _this$state.postRecieveingComment;\n      return posts && posts.length > 0 ? posts.map(post => React.createElement(Postcard, {\n        users: users,\n        post: post,\n        history: history,\n        commentLen: comment.length,\n        toggleCommentField: this.showCommentField,\n        commentFieldStatus: showCommentField,\n        yourField: postRecieveingComment,\n        post2comment: this.postToCommentOn,\n        id: post.id,\n        resetComment: this.resetCommentLength,\n        submitComment: () => this.submitComment(post.id, post.userId),\n        handleComment: this.handleComment,\n        handleLikes: this.handleLikes,\n        getCapEditField: this.getCapField,\n        editCapStatus: editingCaption,\n        submitCapEdit: this.handleEditSubmit,\n        addLike: this.addLike,\n        disLike: this.deleteLike,\n        liked: likedPosts,\n        commentors: this.theUsers,\n        deleteComment: this.deleteComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })) : console.log(\"The Post didnt work, here are the props:\", this.props);\n    };\n\n    this.handleNewPostClick = () => {\n      this.setState({\n        newPost: !this.state.newPost\n      });\n    };\n\n    this.theNewPostCard = props => {\n      const userid = this.props.userid;\n      return React.createElement(NewPostCard, {\n        back: this.returnToThePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      });\n    };\n\n    this.myProfile = () => {\n      this.props.history.push('/profile');\n    };\n\n    this.returnToThePost = () => {\n      this.setState({\n        page: \"thePost\",\n        showingOne: false\n      });\n    };\n\n    this.handleNewPost = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.pageToRender = () => {\n      const showingUserId = this.state.showingUserId;\n\n      switch (this.state.page) {\n        case \"thePost\":\n          return this.thePost();\n\n        case \"newPost\":\n          return this.theNewPostCard();\n\n        case \"profile\":\n          return this.myProfile();\n\n        case \"show one\":\n          return this.showOneUser(showingUserId);\n      }\n    };\n\n    this.startShowingOneUser = id => {\n      this.setState({\n        showingUserId: id,\n        page: \"show one\",\n        showingOne: true\n      });\n    };\n\n    this.showOneUser = id => {\n      const _this$props3 = this.props,\n            users = _this$props3.users,\n            posts = _this$props3.posts,\n            name = _this$props3.name;\n      const theId = users.find(user => user.id === id);\n      console.log(\"The one user stuff:\", theId);\n      const userPost = posts.filter(post => post.user_id === theId.id);\n      return this.showOneUsersPost(userPost);\n    };\n\n    this.showOneUsersPost = post => {\n      const _this$state2 = this.state,\n            likedPosts = _this$state2.likedPosts,\n            comment = _this$state2.comment;\n      const name = this.props.name;\n      return post.map(p => React.createElement(ProfileCard, {\n        post: p,\n        user: p.user_id,\n        name: name,\n        pic: p.pic,\n        id: p.id,\n        likedPosts: likedPosts,\n        comment: comment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }));\n    };\n\n    this.appLogout = () => {\n      const logout = this.props.logout;\n      logout();\n      localStorage.clear();\n      localStorage.length === 0 && this.returnToLogoutPage();\n    };\n\n    this.returnToLogoutPage = () => {\n      const _this$props4 = this.props,\n            requestedLogin = _this$props4.requestedLogin,\n            logout = _this$props4.logout;\n      logout();\n      this.props.history.push('/');\n    };\n\n    this.theUsers = () => {\n      const users = this.props.users;\n      const commentor = {};\n\n      if (!!users) {\n        this.props.users.forEach(user => commentor[user.id] = user.username);\n        return commentor;\n      }\n    };\n\n    this.followeeIds = () => {\n      // EVERYONE WHO IS FOLLOWED\n      const foll = this.props.follows.map(f => f.followee_id);\n      const followees = [...new Set(foll)]; // deletes/ filters duplicates out of arrays\n\n      return followees;\n    };\n\n    this.theFollow = (ErId, EeId) => {\n      return this.props.follows.find(f => f.follower_id === ErId && f.followee_id === EeId).id;\n    };\n\n    this.whoImFollowing = () => {\n      const _this$props5 = this.props,\n            follows = _this$props5.follows,\n            userid = _this$props5.userid,\n            users = _this$props5.users;\n      const peepsImFollowing = users.filter(u => follows.filter(f => f.follower_id === userid && f.followee_id === u.id));\n      return peepsImFollowing;\n    };\n\n    this.whoImNotFollowing = () => {\n      const _this$props6 = this.props,\n            follows = _this$props6.follows,\n            userid = _this$props6.userid,\n            users = _this$props6.users;\n      const peepsImFollowing = users.filter(u => follows.map(f => f.follower_id !== userid && f.followee_id === u.id));\n      return peepsImFollowing;\n    };\n\n    this.friends = () => {\n      const _this$props7 = this.props,\n            follows = _this$props7.follows,\n            userid = _this$props7.userid,\n            users = _this$props7.users,\n            deleteFollow = _this$props7.deleteFollow;\n      const friendsArr = follows.filter(f => f.follower_id === userid).map(f => f.followee_id);\n      const theFriends = friendsArr.map(f => users.find(user => user.id === f));\n      return !theFriends[0] === undefined || theFriends.length > 0 ? theFriends.map(f => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \" \", React.createElement(\"img\", {\n        src: f.picture,\n        className: \"friends-or-not-image\",\n        onClick: () => {\n          this.startShowingOneUser(f.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"friends-or-not-name\",\n        id: f.id,\n        onClick: () => deleteFollow(this.theFollow(userid, f.id)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, `${f.username} 𝚡`), \" \")) : React.createElement(\"div\", {\n        className: \"make-some-friends\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \" Welcome!!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \" Make Some New Friends \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"\\u2B05\\uFE0F \\u2B05\\uFE0F\"));\n    };\n\n    this.Suggestedfriends = () => {\n      const _this$props8 = this.props,\n            createFollow = _this$props8.createFollow,\n            userid = _this$props8.userid,\n            users = _this$props8.users,\n            follows = _this$props8.follows;\n      const allButMe = users.filter(user => user.id !== userid);\n      const nonfriendsArr = follows.filter(f => f.follower_id !== userid).map(f => f.followee_id);\n      const friendsArr = follows.filter(f => f.follower_id === userid).map(f => f.followee_id);\n      const usersSinFollowers = allButMe.filter(u => !this.followeeIds().includes(u.id));\n      const nonFollowers = allButMe.filter(u => nonfriendsArr.includes(u.id) && !friendsArr.includes(u.id));\n      const tempArr = [...nonFollowers, ...usersSinFollowers];\n      const whoImNotFollowing = [...new Set(tempArr)];\n      return whoImNotFollowing.map(f => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, \" \", React.createElement(\"img\", {\n        src: f.picture,\n        className: \"friends-or-not-image\",\n        onClick: () => {\n          this.startShowingOneUser(f.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"friends-or-not-name\",\n        onClick: () => createFollow(f.id, userid),\n        id: f.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, ` ${f.username} ✓`)));\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"HOME CONTAINER\");\n    const history = this.props.history;\n    !localStorage.token && history.push('/');\n  } // COMMENTS //\n\n\n  render() {\n    // debugger\n    // console.log(\"Home Container props\", this.props);\n    const _this$props9 = this.props,\n          fposts = _this$props9.fposts,\n          user = _this$props9.user,\n          userId = _this$props9.userId,\n          history = _this$props9.history,\n          requestedLogin = _this$props9.requestedLogin,\n          picture = _this$props9.picture;\n    const showingOne = this.state.showingOne;\n    this.theUsers();\n    this.followeeIds();\n    this.whoImFollowing();\n    return React.createElement(\"div\", {\n      className: \"Home-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(Follows, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }), React.createElement(\"nav\", {\n      className: \"Homepage-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      id: \"jays-gram\",\n      onClick: () => this.returnToThePost(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, this.props.user, \"s'taGram \"), React.createElement(\"p\", {\n      onClick: this.appLogout,\n      className: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \" logout  \")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"camera\",\n      id: this.state.id,\n      onClick: () => this.setState({\n        page: \"newPost\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \" \\uD83D\\uDCF8 \")), React.createElement(\"li\", {\n      className: \"thumbnail\",\n      onClick: () => this.setState({\n        page: \"profile\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: picture,\n      id: \"thumbnail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), \" \"))), React.createElement(\"div\", {\n      className: !localStorage.token ? \"loading \" : \"Home-Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sugested-friends\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, !showingOne ? React.createElement(\"span\", {\n      className: \"friends-and-suggested-headers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \" Suggested\") : null, !showingOne ? this.Suggestedfriends() : null), !showingOne ? React.createElement(\"div\", {\n      className: \"friends\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"friends-and-suggested-headers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, \"Friends\"), this.friends()) : null, this.pageToRender(), this.state.page !== \"newPost\" ? React.createElement(\"div\", {\n      className: \"Home-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"Copyright \\xA9 2019 Jaystagram\") : React.createElement(React.Fragment, null)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    picture: state.users.picture,\n    users: state.users.all,\n    posts: state.post.posts,\n    requestedPost: state.post.requested,\n    requestedLogin: state.login.requested,\n    follows: state.follows.follows,\n    name: state.users.usersObj\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getFollows,\n  getPost,\n  fetchAllUsers,\n  fetchUser,\n  addComment,\n  editCaption,\n  changeLike,\n  logout,\n  notRequesting,\n  deleteComment,\n  createFollow,\n  deleteFollow\n})(HomeContainer);","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js"],"names":["React","match","Postcard","NewPostCard","Follows","getFollows","createFollow","deleteFollow","connect","getPost","editCaption","fetchUser","fetchAllUsers","addComment","deleteComment","changeLike","logout","notRequesting","ProfileCard","Loader","HomeContainer","Component","state","showCommentField","comment","post_id","Picture","caption","likes","page","likedPosts","postRecieveingComment","requesting","showingUserId","showingOne","submitComment","postId","props","userid","user","requestedPost","userId","body","content","followee_id","resetCommentLength","postToCommentOn","id","setState","handleComment","e","target","name","value","com","getCapField","editingCaption","handleEditSubmit","handleLikes","includes","deleteLike","likesArr","filter","pId","addLike","newLikes","like","numLikes","thePost","posts","users","history","length","map","post","theUsers","console","log","handleNewPostClick","newPost","theNewPostCard","returnToThePost","myProfile","push","handleNewPost","pageToRender","showOneUser","startShowingOneUser","theId","find","userPost","user_id","showOneUsersPost","p","pic","appLogout","localStorage","clear","returnToLogoutPage","requestedLogin","commentor","forEach","username","followeeIds","foll","follows","f","followees","Set","theFollow","ErId","EeId","follower_id","whoImFollowing","peepsImFollowing","u","whoImNotFollowing","friends","friendsArr","theFriends","undefined","picture","Suggestedfriends","allButMe","nonfriendsArr","usersSinFollowers","nonFollowers","tempArr","componentDidMount","token","render","fposts","mapStateToProps","all","requested","login","usersObj"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { match } from 'react'\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Follows from './components/Follows';\nimport { getFollows, createFollow, deleteFollow } from './redux/actions/FollowActions';\nimport { connect } from 'react-redux';\nimport { getPost, editCaption } from './redux/actions/PostActions';\nimport { fetchUser, fetchAllUsers } from './redux/actions/UserActions';\nimport { addComment, deleteComment } from './redux/actions/CommentsActions';\nimport { changeLike } from './redux/actions/PostActions';\nimport { logout, notRequesting } from './redux/actions/LoginActions';\nimport ProfileCard from './components/ProfilePostCard'\nimport Loader from './components/loader';\n// import Bio from './components/UserBio'\n\n\n\nclass HomeContainer extends React.Component {\n  state = {\n    showCommentField: false,\n    comment: \"\",\n    post_id: \"\",\n    Picture: \"\",\n    caption: \"\",\n    likes: 0,\n    page: \"thePost\",\n    likedPosts: [],\n    postRecieveingComment: null,\n    requesting: false,\n    showingUserId: null,\n    showingOne: false\n\n\n  };\n\n  componentDidMount() {\n\n    console.log(\"HOME CONTAINER\")\n    const { history } = this.props\n\n    !localStorage.token && history.push('/')\n\n  }\n\n  // COMMENTS //\n\n\n  submitComment = (postId) => {\n    const { userid, addComment, user, requestedPost } = this.props\n    const { userId } = this.state\n    const body = {\n      post_id: postId,\n      content: this.state.comment,\n      followee_id: userid\n    }\n    addComment(body)\n    debugger\n    this.resetCommentLength()\n\n  };\n\n\n  postToCommentOn = (id) => {\n    this.setState({ postRecieveingComment: id })\n  }\n\n  resetCommentLength = () => {\n    this.setState({ comment: \"\", postRecieveingComment: null })\n  }\n\n  handleComment = e => {\n    // console.log(e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n\n  deleteComment = (com) => {\n    const { deleteComment } = this.props\n\n    // console.log(com.id, com.post_id, com.followee_id, com.content)\n    deleteComment(com.id, com.post_id, com.followee_id, com.content)\n\n  }\n  // EDIT CAPTION\n\n  getCapField = () => {\n    this.setState({ editingCaption: !this.state.editingCaption })\n  }\n  handleEditSubmit = (id) => {\n    this.props.editCaption(id, this.state.comment)\n    this.setState({ comment: \"\" })\n    this.getCapField()\n  }\n  showCommentField = () => {\n    return this.setState({ showCommentField: !this.state.showCommentField })\n  }\n\n\n  // LIKES //\n\n  handleLikes = (id, likes) => {\n    const { likedPosts } = this.state\n    if (likedPosts.includes(id)) {\n      this.deleteLike(id, likes)\n      const likesArr = likedPosts.filter(pId => pId !== id)\n      this.setState({ likedPosts: likesArr })\n\n    }\n    else {\n      this.addLike(id, likes)\n      const newLikes = [...likedPosts, id]\n      this.setState({ likedPosts: newLikes })\n    }\n\n  }\n\n  addLike = (id, like) => {\n\n    // this.setState({ liked: !this.state.liked })\n    const numLikes = like + 1\n    this.props.changeLike(id, numLikes, \"add\")\n  }\n  deleteLike = (id, like) => {\n    // this.setState({ liked: !this.state.liked })\n    const numLikes = like - 1\n    this.props.changeLike(id, numLikes, \"\")\n  }\n\n\n  // POST STUFF  //\n\n\n  thePost = () => {\n    const { posts, users, history } = this.props\n    const { comment, showCommentField, editingCaption, likedPosts, postToCommentOn, postRecieveingComment } = this.state\n    return posts && posts.length > 0 ? posts.map(post => (\n\n      <Postcard\n        users={users}\n        post={post}\n        history={history}\n        commentLen={comment.length}\n        toggleCommentField={this.showCommentField}\n        commentFieldStatus={showCommentField}\n        yourField={postRecieveingComment}\n        post2comment={this.postToCommentOn}\n        id={post.id}\n        resetComment={this.resetCommentLength}\n        submitComment={() => this.submitComment(post.id, post.userId)}\n        handleComment={this.handleComment}\n        handleLikes={this.handleLikes}\n        getCapEditField={this.getCapField}\n        editCapStatus={editingCaption}\n        submitCapEdit={this.handleEditSubmit}\n        addLike={this.addLike}\n        disLike={this.deleteLike}\n        liked={likedPosts}\n        commentors={this.theUsers}\n        deleteComment={this.deleteComment}\n      />\n    )) : console.log(\"The Post didnt work, here are the props:\", this.props)\n  };\n\n\n\n  // NEW POST STUFF \n  // SUBMIT THE COMMENT /FETCH POST\n  handleNewPostClick = () => {\n    this.setState({ newPost: !this.state.newPost });\n  };\n\n  theNewPostCard = props => {\n    const { userid } = this.props\n    return (\n      <NewPostCard\n        back={this.returnToThePost}\n      />\n    );\n  };\n\n  myProfile = () => {\n    this.props.history.push('/profile')\n  };\n\n\n  returnToThePost = () => {\n    this.setState({ page: \"thePost\", showingOne: false })\n  }\n\n\n  handleNewPost = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  pageToRender = () => {\n    const { showingUserId } = this.state\n    switch (this.state.page) {\n      case \"thePost\":\n        return this.thePost()\n      case \"newPost\":\n        return this.theNewPostCard()\n      case \"profile\":\n        return this.myProfile()\n      case \"show one\":\n        return this.showOneUser(showingUserId)\n    }\n  }\n\n  startShowingOneUser = (id) => {\n    this.setState({ showingUserId: id, page: \"show one\", showingOne:true })\n  }\n  showOneUser = (id) => {\n    const { users, posts, name } = this.props\n    const theId = users.find(user => user.id === id)\n    console.log(\"The one user stuff:\",theId)\n    const userPost = posts.filter(post => post.user_id === theId.id)\n  return this.showOneUsersPost(userPost)\n\n\n  }\n  showOneUsersPost = (post) => {\n    const { likedPosts, comment } = this.state\n    const { name } = this.props\n  \n\n    return post.map(p => <ProfileCard\n      post={p}\n      user={p.user_id}\n      name={name}\n      pic={p.pic}\n      id={p.id}\n      likedPosts={likedPosts}\n      comment={comment}\n    />\n    )\n  }\n  s\n\n  // LOGOUT //\n\n  appLogout = () => {\n    const { logout } = this.props\n    logout()\n    localStorage.clear()\n    localStorage.length === 0 && this.returnToLogoutPage()\n\n  }\n\n  returnToLogoutPage = () => {\n    const { requestedLogin, logout } = this.props\n    logout()\n    this.props.history.push('/')\n  }\n  theUsers = () => {\n    const { users } = this.props\n    const commentor = {}\n    if (!!users) {\n      this.props.users.forEach(user => commentor[user.id] = user.username)\n      return commentor\n    }\n  }\n\n  // FREINDS\n  followeeIds = () => {\n    // EVERYONE WHO IS FOLLOWED\n    const foll = this.props.follows.map(f => f.followee_id)\n    const followees = [...new Set(foll)] // deletes/ filters duplicates out of arrays\n    return followees\n  }\n  theFollow = (ErId, EeId) => {\n\n    return this.props.follows.find(f => f.follower_id === ErId && f.followee_id === EeId).id\n  }\n  whoImFollowing = () => {\n    const { follows, userid, users } = this.props\n    const peepsImFollowing = users.filter(u => follows.filter(f =>\n      f.follower_id === userid && f.followee_id === u.id))\n    return peepsImFollowing\n  }\n  whoImNotFollowing = () => {\n    const { follows, userid, users } = this.props\n    const peepsImFollowing = users.filter(u => follows.map(f =>\n      f.follower_id !== userid && f.followee_id === u.id))\n    return peepsImFollowing\n  }\n\n  friends = () => {\n    const { follows, userid, users, deleteFollow } = this.props\n    const friendsArr = follows.filter(f => f.follower_id === userid).map(f => f.followee_id)\n\n    const theFriends = friendsArr.map(f => users.find(user => user.id === f))\n\n    return (!theFriends[0] === undefined || theFriends.length > 0 ? theFriends.map(f => <div> <img src={f.picture} className=\"friends-or-not-image\" onClick={() => {\n\n      this.startShowingOneUser(f.id)\n    }} /> <br /><span className=\"friends-or-not-name\" id={f.id} onClick={() => deleteFollow(this.theFollow(userid, f.id))}>{`${f.username} 𝚡`}</span> </div>) : <div className=\"make-some-friends\">\n        <p > Welcome!!</p>\n        <p> Make Some New Friends </p>\n        <p>⬅️ ⬅️</p>\n      </div>)\n\n  }\n  Suggestedfriends = () => {\n    const { createFollow, userid, users, follows } = this.props\n    const allButMe = users.filter(user => user.id !== userid)\n    const nonfriendsArr = follows.filter(f => f.follower_id !== userid).map(f => f.followee_id)\n    const friendsArr = follows.filter(f => f.follower_id === userid).map(f => f.followee_id)\n    const usersSinFollowers = allButMe.filter(u => !this.followeeIds().includes(u.id))\n    const nonFollowers = allButMe.filter(u => nonfriendsArr.includes(u.id) && !friendsArr.includes(u.id))\n    const tempArr = [...nonFollowers, ...usersSinFollowers]\n    const whoImNotFollowing = [...new Set(tempArr)]\n\n\n\n    return whoImNotFollowing.map(f => <div> <img src={f.picture} className=\"friends-or-not-image\" onClick={() => {\n\n      this.startShowingOneUser(f.id)\n    }}  /> <br /><span className=\"friends-or-not-name\" onClick={() => createFollow(f.id, userid)} id={f.id}>{` ${f.username} ✓`}</span></div>)\n\n  }\n\n  render() {\n    // debugger\n    // console.log(\"Home Container props\", this.props);\n\n    const { fposts, user, userId, history, requestedLogin, picture } = this.props;\n    const {showingOne} = this.state\n    this.theUsers()\n    this.followeeIds()\n    this.whoImFollowing()\n\n    return (\n      <div className=\"Home-Container\">\n        <Follows />\n        <nav className=\"Homepage-nav\">\n          <ul>\n            <li id=\"jays-gram\" onClick={() => this.returnToThePost()}><span >{this.props.user}s'taGram </span>\n              <p onClick={this.appLogout} className=\"logout\" > logout  </p></li>\n\n            <li>\n              <p className=\"camera\" id={this.state.id} onClick={() => this.setState({ page: \"newPost\" })}> 📸 </p>\n            </li>\n\n\n            <li className=\"thumbnail\" onClick={() => this.setState({ page: \"profile\" })}><img src={picture} id='thumbnail' /> </li>\n\n          </ul>\n        </nav>\n\n        <div className={!localStorage.token ? \"loading \" : \"Home-Content\"}>\n\n          <div className=\"sugested-friends\">\n        {!showingOne ? <span className=\"friends-and-suggested-headers\"> Suggested</span> : null}\n            {!showingOne ? this.Suggestedfriends() : null}\n          </div>\n\n         { !showingOne ? <div className=\"friends\">\n            <span className=\"friends-and-suggested-headers\">Friends</span>\n            {this.friends()}\n          </div> : null}\n\n          {this.pageToRender()}\n          {this.state.page !== \"newPost\" ? <div className=\"Home-footer\">Copyright &copy; 2019 Jaystagram</div> : <></>}\n        </div>\n\n      </div>\n\n\n\n    );\n  }\n\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    picture: state.users.picture,\n    users: state.users.all,\n    posts: state.post.posts,\n    requestedPost: state.post.requested,\n    requestedLogin: state.login.requested,\n    follows: state.follows.follows,\n    name: state.users.usersObj,\n  }\n}\n\nexport default connect(mapStateToProps, { getFollows, getPost, fetchAllUsers, fetchUser, addComment, editCaption, changeLike, logout, notRequesting, deleteComment, createFollow, deleteFollow })(HomeContainer);\n\n\n"]},"metadata":{},"sourceType":"module"}