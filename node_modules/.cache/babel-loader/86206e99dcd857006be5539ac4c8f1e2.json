{"ast":null,"code":"import axios from'axios';import{REQUESTING,FINISHED_REQUESTING,SUCCESSFUL_LOGIN,FAILED_LOGIN,LOG_OUT}from'./types';export var fetchLogin=function fetchLogin(info){return function(dispatch){dispatch({type:REQUESTING});return axios.post(\"http://localhost:3000/login\",info).then(function(user){if(!!user.data.token){localStorage.setItem(\"token\",user.data.token);dispatch({type:SUCCESSFUL_LOGIN,payload:user.data.token});}else{dispatch({type:FAILED_LOGIN,payload:user.data.message});}}).catch(function(err){dispatch({type:FAILED_LOGIN,errorMessage:err});});};};var logout=function logout(){return function(dispatch){dispatch({type:LOG_OUT});};};var notRequesting=function notRequesting(){return function(dispatch){dispatch({type:FINISHED_REQUESTING});};};export{notRequesting,logout,fetchLogin as default};","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/redux/actions/LoginActions.js"],"names":["axios","REQUESTING","FINISHED_REQUESTING","SUCCESSFUL_LOGIN","FAILED_LOGIN","LOG_OUT","fetchLogin","info","dispatch","type","post","then","user","data","token","localStorage","setItem","payload","message","catch","err","errorMessage","logout","notRequesting","default"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,mBAArB,CAA0CC,gBAA1C,CAA4DC,YAA5D,CAA0EC,OAA1E,KAAyF,SAAzF,CAGA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,QAAU,UAAAC,QAAQ,CAAI,CAC9CA,QAAQ,CAAC,CAAEC,IAAI,CAAER,UAAR,CAAD,CAAR,CACA,MAAOD,CAAAA,KAAK,CAACU,IAAN,CAAW,6BAAX,CAA0CH,IAA1C,EAAgDI,IAAhD,CAAqD,SAAAC,IAAI,CAAI,CAClE,GAAG,CAAC,CAACA,IAAI,CAACC,IAAL,CAAUC,KAAf,CAAqB,CACnBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BJ,IAAI,CAACC,IAAL,CAAUC,KAAxC,EACAN,QAAQ,CAAC,CAAEC,IAAI,CAAEN,gBAAR,CAA0Bc,OAAO,CAAEL,IAAI,CAACC,IAAL,CAAUC,KAA7C,CAAD,CAAR,CAED,CAJD,IAKM,CACNN,QAAQ,CAAC,CAAEC,IAAI,CAAEL,YAAR,CAAsBa,OAAO,CAAEL,IAAI,CAACC,IAAL,CAAUK,OAAzC,CAAD,CAAR,CAA6D,CAC9D,CARM,EAQJC,KARI,CAQE,SAAAC,GAAG,CAAI,CACdZ,QAAQ,CAAC,CAAEC,IAAI,CAAEL,YAAR,CAAsBiB,YAAY,CAAED,GAApC,CAAD,CAAR,CACD,CAVM,CAAP,CAWD,CAbyB,EAAnB,CAcN,GAAME,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAO,UAAAd,QAAQ,CAAI,CAClCA,QAAQ,CAAC,CAAEC,IAAI,CAAEJ,OAAR,CAAD,CAAR,CACA,CAFe,EAAf,CAGA,GAAMkB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAK,UAAAf,QAAQ,CAAI,CACtCA,QAAQ,CAAC,CAAEC,IAAI,CAAEP,mBAAR,CAAD,CAAR,CACD,CAFsB,EAAtB,CAMD,OACEqB,aADF,CACgBD,MADhB,CAEEhB,UAAU,GAAIkB,CAAAA,OAFhB","sourcesContent":["import axios from 'axios';\nimport { REQUESTING, FINISHED_REQUESTING, SUCCESSFUL_LOGIN, FAILED_LOGIN, LOG_OUT } from './types'\n\n\nexport const fetchLogin = (info) => dispatch => {\n  dispatch({ type: REQUESTING })\n  return axios.post(\"http://localhost:3000/login\", info).then(user => {\n    if(!!user.data.token){\n      localStorage.setItem(\"token\", user.data.token)\n      dispatch({ type: SUCCESSFUL_LOGIN, payload: user.data.token }) \n      \n    }\n      else{\n    dispatch({ type: FAILED_LOGIN, payload: user.data.message })}\n  }).catch(err => {\n    dispatch({ type: FAILED_LOGIN, errorMessage: err })\n  })\n}\n const logout = () =>  dispatch => {\n dispatch({ type: LOG_OUT })\n}\n const notRequesting = ()=> dispatch => {\n  dispatch({ type: FINISHED_REQUESTING})\n}\n\n\n\nexport {\n  notRequesting,logout,\n  fetchLogin as default\n}"]},"metadata":{},"sourceType":"module"}