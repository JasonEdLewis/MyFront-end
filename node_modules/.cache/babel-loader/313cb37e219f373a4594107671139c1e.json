{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js\";\nimport React from \"react\";\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Follows from './components/Follows';\nimport { getFollows } from './redux/actions/FollowActions';\nimport { connect } from 'react-redux';\nimport { getPost, editCaption } from './redux/actions/PostActions';\nimport { fetchUser, fetchAllUsers } from './redux/actions/UserActions';\nimport { addComment, deleteComment } from './redux/actions/CommentsActions';\nimport { changeLike } from './redux/actions/PostActions';\nimport { logout, notRequesting } from './redux/actions/LoginActions';\nimport Loader from './components/loader';\n\nclass HomeContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showCommentField: false,\n      comment: \"\",\n      post_id: \"\",\n      Picture: \"\",\n      caption: \"\",\n      likes: 0,\n      page: \"thePost\",\n      editingCaption: false,\n      likedPosts: [],\n      postRecieveingComment: null,\n      requesting: false\n    };\n\n    this.submitComment = postId => {\n      const _this$props = this.props,\n            userid = _this$props.userid,\n            addComment = _this$props.addComment,\n            user = _this$props.user,\n            requestedPost = _this$props.requestedPost;\n      const _this$state = this.state,\n            userId = _this$state.userId,\n            comment = _this$state.comment;\n      const body = {\n        post_id: postId,\n        content: comment,\n        followee_id: userid\n      };\n      addComment(body);\n      debugger;\n      this.setState({\n        comment: \"hello\"\n      });\n    };\n\n    this.postToCommentOn = id => {\n      this.setState({\n        postRecieveingComment: id\n      });\n    };\n\n    this.resetCommentLength = () => {\n      this.setState({\n        comment: \"\",\n        postRecieveingComment: null\n      });\n    };\n\n    this.handleComment = e => {\n      // console.log(e.target.value);\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.deleteComment = com => {\n      const deleteComment = this.props.deleteComment; // console.log(com.id, com.post_id, com.followee_id, com.content)\n\n      deleteComment(com.id, com.post_id, com.followee_id, com.content);\n    };\n\n    this.getCapField = () => {\n      this.setState({\n        editingCaption: !this.state.editingCaption\n      });\n    };\n\n    this.handleEditSubmit = id => {\n      this.props.editCaption(id, this.state.comment);\n      this.setState({\n        comment: \"\"\n      });\n      this.getCapField();\n    };\n\n    this.showCommentField = () => {\n      return this.setState({\n        showCommentField: !this.state.showCommentField\n      });\n    };\n\n    this.handleLikes = (id, likes) => {\n      const likedPosts = this.state.likedPosts;\n\n      if (likedPosts.includes(id)) {\n        this.deleteLike(id, likes);\n        const likesArr = likedPosts.filter(pId => pId !== id);\n        this.setState({\n          likedPosts: likesArr\n        });\n      } else {\n        this.addLike(id, likes);\n        const newLikes = [...likedPosts, id];\n        this.setState({\n          likedPosts: newLikes\n        });\n      }\n    };\n\n    this.addLike = (id, like) => {\n      // this.setState({ liked: !this.state.liked })\n      const numLikes = like + 1;\n      this.props.changeLike(id, numLikes, \"add\");\n    };\n\n    this.deleteLike = (id, like) => {\n      // this.setState({ liked: !this.state.liked })\n      const numLikes = like - 1;\n      this.props.changeLike(id, numLikes, \"\");\n    };\n\n    this.thePost = () => {\n      const _this$props2 = this.props,\n            posts = _this$props2.posts,\n            users = _this$props2.users,\n            history = _this$props2.history;\n      const _this$state2 = this.state,\n            comment = _this$state2.comment,\n            showCommentField = _this$state2.showCommentField,\n            editingCaption = _this$state2.editingCaption,\n            likedPosts = _this$state2.likedPosts,\n            postToCommentOn = _this$state2.postToCommentOn,\n            postRecieveingComment = _this$state2.postRecieveingComment;\n      return posts && posts.length > 0 ? posts.map(post => React.createElement(Postcard, {\n        users: users,\n        post: post,\n        history: history,\n        commentLen: comment.length,\n        toggleCommentField: this.showCommentField,\n        commentFieldStatus: showCommentField,\n        yourField: postRecieveingComment,\n        post2comment: this.postToCommentOn,\n        id: post.id,\n        resetComment: this.resetCommentLength,\n        submitComment: () => this.submitComment(post.id, post.userId),\n        handleComment: this.handleComment,\n        handleLikes: this.handleLikes,\n        getCapEditField: this.getCapField,\n        editCapStatus: editingCaption,\n        submitCapEdit: this.handleEditSubmit,\n        addLike: this.addLike,\n        disLike: this.deleteLike,\n        liked: likedPosts,\n        commentors: this.theUsers,\n        deleteComment: this.deleteComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })) : console.log(\"The Post didnt work, here are the props:\", this.props);\n    };\n\n    this.handleNewPostClick = () => {\n      this.setState({\n        newPost: !this.state.newPost\n      });\n    };\n\n    this.theNewPostCard = props => {\n      const userid = this.props.userid;\n      return React.createElement(NewPostCard, {\n        back: this.returnToThePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      });\n    };\n\n    this.myProfile = () => {\n      this.props.history.push('/profile');\n    };\n\n    this.returnToThePost = () => {\n      this.setState({\n        page: \"thePost\"\n      });\n    };\n\n    this.handleNewPost = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.pageToRender = () => {\n      switch (this.state.page) {\n        case \"thePost\":\n          return this.thePost();\n\n        case \"newPost\":\n          return this.theNewPostCard();\n\n        case \"profile\":\n          return this.myProfile();\n      }\n    };\n\n    this.appLogout = () => {\n      const logout = this.props.logout;\n      logout();\n      localStorage.clear();\n      localStorage.length === 0 && this.returnToLogoutPage();\n    };\n\n    this.returnToLogoutPage = () => {\n      const _this$props3 = this.props,\n            requestedLogin = _this$props3.requestedLogin,\n            logout = _this$props3.logout;\n      logout();\n      this.props.history.push('/');\n    };\n\n    this.theUsers = () => {\n      const users = this.props.users;\n      const commentor = {};\n\n      if (!!users) {\n        this.props.users.forEach(user => commentor[user.id] = user.username);\n        return commentor;\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"HOME CONTAINER\");\n    const history = this.props.history;\n    !localStorage.token && history.push('/');\n  } // COMMENTS //\n\n\n  render() {\n    // debugger\n    console.log(\"Home Container props\", this.props);\n    const _this$props4 = this.props,\n          fposts = _this$props4.fposts,\n          user = _this$props4.user,\n          userId = _this$props4.userId,\n          history = _this$props4.history,\n          requestedLogin = _this$props4.requestedLogin,\n          picture = _this$props4.picture;\n    const requesting = this.state.requesting;\n    this.theUsers();\n    return React.createElement(\"div\", {\n      className: \"Home-Container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(Follows, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), React.createElement(\"nav\", {\n      className: \"Homepage-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      id: \"jays-gram\",\n      onClick: () => this.returnToThePost(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, this.props.user, \"s'taGram \"), React.createElement(\"p\", {\n      onClick: this.appLogout,\n      className: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \" logout  \")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"camera\",\n      id: this.state.id,\n      onClick: () => this.setState({\n        page: \"newPost\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \" \\uD83D\\uDCF8 \")), React.createElement(\"li\", {\n      className: \"thumbnail\",\n      onClick: () => this.setState({\n        page: \"profile\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: picture,\n      id: \"thumbnail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), \" \"))), React.createElement(\"div\", {\n      className: !localStorage.token ? \"loading \" : \"Home-Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, this.pageToRender(), this.state.page !== \"newPost\" ? React.createElement(\"div\", {\n      className: \"Home-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Copyright \\xA9 2019 Jaystagram\") : React.createElement(React.Fragment, null)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    picture: state.users.picture,\n    users: state.users.all,\n    posts: state.post.posts,\n    requestedPost: state.post.requested,\n    requestedLogin: state.login.requested\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getFollows,\n  getPost,\n  fetchAllUsers,\n  fetchUser,\n  addComment,\n  editCaption,\n  changeLike,\n  logout,\n  notRequesting,\n  deleteComment\n})(HomeContainer);","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/HomeContainer.js"],"names":["React","Postcard","NewPostCard","Follows","getFollows","connect","getPost","editCaption","fetchUser","fetchAllUsers","addComment","deleteComment","changeLike","logout","notRequesting","Loader","HomeContainer","Component","state","showCommentField","comment","post_id","Picture","caption","likes","page","editingCaption","likedPosts","postRecieveingComment","requesting","submitComment","postId","props","userid","user","requestedPost","userId","body","content","followee_id","setState","postToCommentOn","id","resetCommentLength","handleComment","e","target","name","value","com","getCapField","handleEditSubmit","handleLikes","includes","deleteLike","likesArr","filter","pId","addLike","newLikes","like","numLikes","thePost","posts","users","history","length","map","post","theUsers","console","log","handleNewPostClick","newPost","theNewPostCard","returnToThePost","myProfile","push","handleNewPost","pageToRender","appLogout","localStorage","clear","returnToLogoutPage","requestedLogin","commentor","forEach","username","componentDidMount","token","render","fposts","picture","mapStateToProps","all","requested","login"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./css/HomeContainer.css\";\nimport Postcard from \"./components/PostCard\";\nimport NewPostCard from \"./components/NewPostCard\";\nimport Follows from './components/Follows';\nimport { getFollows } from './redux/actions/FollowActions';\nimport { connect } from 'react-redux';\nimport { getPost, editCaption } from './redux/actions/PostActions';\nimport { fetchUser, fetchAllUsers } from './redux/actions/UserActions';\nimport { addComment, deleteComment } from './redux/actions/CommentsActions';\nimport { changeLike } from './redux/actions/PostActions';\nimport { logout, notRequesting } from './redux/actions/LoginActions';\nimport Loader from './components/loader';\n\n\nclass HomeContainer extends React.Component {\n  state = {\n    showCommentField: false,\n    comment: \"\",\n    post_id: \"\",\n    Picture: \"\",\n    caption: \"\",\n    likes: 0,\n    page: \"thePost\",\n    editingCaption: false,\n    likedPosts: [],\n    postRecieveingComment: null,\n    requesting: false\n\n\n  };\n\n  componentDidMount() {\n\n    console.log(\"HOME CONTAINER\")\n    const { history } = this.props\n\n    !localStorage.token && history.push('/')\n\n  }\n\n  // COMMENTS //\n\n\n  submitComment = (postId) => {\n    const { userid, addComment, user, requestedPost } = this.props\n    const { userId, comment } = this.state\n    const body = {\n      post_id: postId,\n      content: comment,\n      followee_id: userid\n    }\n    addComment(body)\n        debugger\n        this.setState({ comment:\"hello\"})\n      \n    \n    \n  };\n\n\n  postToCommentOn = (id) => {\n    this.setState({ postRecieveingComment: id })\n  }\n\n  resetCommentLength = () => {\n    this.setState({ comment: \"\", postRecieveingComment: null })\n  }\n\n  handleComment = e => {\n    // console.log(e.target.value);\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n\n  deleteComment = (com) => {\n    const { deleteComment } = this.props\n\n    // console.log(com.id, com.post_id, com.followee_id, com.content)\n    deleteComment(com.id, com.post_id, com.followee_id, com.content)\n\n  }\n  // EDIT CAPTION\n\n  getCapField = () => {\n    this.setState({ editingCaption: !this.state.editingCaption })\n  }\n  handleEditSubmit = (id) => {\n    this.props.editCaption(id, this.state.comment)\n    this.setState({ comment: \"\" })\n    this.getCapField()\n  }\n  showCommentField = () => {\n    return this.setState({ showCommentField: !this.state.showCommentField })\n  }\n\n\n  // LIKES //\n\n  handleLikes = (id, likes) => {\n    const { likedPosts } = this.state\n    if (likedPosts.includes(id)) {\n      this.deleteLike(id, likes)\n      const likesArr = likedPosts.filter(pId => pId !== id)\n      this.setState({ likedPosts: likesArr })\n\n    }\n    else {\n      this.addLike(id, likes)\n      const newLikes = [...likedPosts, id]\n      this.setState({ likedPosts: newLikes })\n    }\n\n  }\n\n  addLike = (id, like) => {\n\n    // this.setState({ liked: !this.state.liked })\n    const numLikes = like + 1\n    this.props.changeLike(id, numLikes, \"add\")\n  }\n  deleteLike = (id, like) => {\n    // this.setState({ liked: !this.state.liked })\n    const numLikes = like - 1\n    this.props.changeLike(id, numLikes, \"\")\n  }\n\n\n  // POST STUFF  //\n\n\n  thePost = () => {\n    const { posts, users,history } = this.props\n    const { comment, showCommentField, editingCaption, likedPosts, postToCommentOn, postRecieveingComment } = this.state\n    return posts && posts.length > 0 ? posts.map(post => (\n\n      <Postcard\n        users={users}\n        post={post}\n        history={history}\n        commentLen={comment.length}\n        toggleCommentField={this.showCommentField}\n        commentFieldStatus={showCommentField}\n        yourField={postRecieveingComment}\n        post2comment={this.postToCommentOn}\n        id={post.id}\n        resetComment={this.resetCommentLength}\n        submitComment={() => this.submitComment(post.id, post.userId)}\n        handleComment={this.handleComment}\n        handleLikes={this.handleLikes}\n        getCapEditField={this.getCapField}\n        editCapStatus={editingCaption}\n        submitCapEdit={this.handleEditSubmit}\n        addLike={this.addLike}\n        disLike={this.deleteLike}\n        liked={likedPosts}\n        commentors={this.theUsers}\n        deleteComment={this.deleteComment}\n      />\n    )) : console.log(\"The Post didnt work, here are the props:\", this.props)\n  };\n\n\n\n  // NEW POST STUFF \n  // SUBMIT THE COMMENT /FETCH POST\n  handleNewPostClick = () => {\n    this.setState({ newPost: !this.state.newPost });\n  };\n\n  theNewPostCard = props => {\n    const { userid } = this.props\n    return (\n      <NewPostCard\n        back={this.returnToThePost}\n      />\n    );\n  };\n\n  myProfile = () => {\n    this.props.history.push('/profile')\n  };\n\n\n  returnToThePost = () => {\n    this.setState({ page: \"thePost\" })\n  }\n\n\n  handleNewPost = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  pageToRender = () => {\n\n    switch (this.state.page) {\n      case \"thePost\":\n        return this.thePost()\n      case \"newPost\":\n        return this.theNewPostCard()\n      case \"profile\":\n        return this.myProfile()\n    }\n  }\n\n  // LOGOUT //\n\n  appLogout = () => {\n    const { logout } = this.props\n    logout()\n    localStorage.clear()\n    localStorage.length === 0 && this.returnToLogoutPage()\n\n  }\n\n  returnToLogoutPage = () => {\n    const { requestedLogin, logout } = this.props\n    logout()\n    this.props.history.push('/')\n  }\n  theUsers = () => {\n    const { users } = this.props\n    const commentor = {}\n    if (!!users) {\n      this.props.users.forEach(user => commentor[user.id] = user.username)\n      return commentor\n    }\n  }\n\n  render() {\n    // debugger\n    console.log(\"Home Container props\", this.props);\n\n    const { fposts, user, userId, history, requestedLogin, picture } = this.props;\n    const { requesting } = this.state\n    this.theUsers()\n\n    return (\n      <div className=\"Home-Container\">\n        <Follows />\n        <nav className=\"Homepage-nav\">\n          <ul>\n            <li id=\"jays-gram\" onClick={() => this.returnToThePost()}><span >{this.props.user}s'taGram </span> \n            <p onClick={this.appLogout} className=\"logout\" > logout  </p></li>\n\n            <li>\n              <p className=\"camera\" id={this.state.id} onClick={() => this.setState({ page: \"newPost\" })}> 📸 </p>\n            </li>\n\n\n            <li className=\"thumbnail\" onClick={() => this.setState({ page: \"profile\" })}><img src={picture} id='thumbnail' /> </li>\n          \n          </ul>\n        </nav>\n\n        <div className={!localStorage.token ? \"loading \" : \"Home-Content\"}>\n          {}\n          {this.pageToRender()}\n          {this.state.page !== \"newPost\" ? <div className=\"Home-footer\">Copyright &copy; 2019 Jaystagram</div> : <></>}\n        </div>\n      </div>\n\n\n\n    );\n  }\n\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.users.username,\n    userid: state.users.id,\n    picture: state.users.picture,\n    users: state.users.all,\n    posts: state.post.posts,\n    requestedPost: state.post.requested,\n    requestedLogin: state.login.requested\n  }\n}\n\nexport default connect(mapStateToProps, { getFollows, getPost, fetchAllUsers, fetchUser, addComment, editCaption, changeLike, logout, notRequesting, deleteComment })(HomeContainer);\n\n\n"]},"metadata":{},"sourceType":"module"}