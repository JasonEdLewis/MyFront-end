{"ast":null,"code":"import{REQUESTING,ADD_COMMENT,EDIT_COMMENT,DELETE_COMMENT}from'./types';import axios from'axios';var url='http://localhost:3000/comments/';export var addComment=function addComment(info){return function(dispatch){dispatch({type:REQUESTING});return axios.post(url,info).then(function(comment){dispatch({type:ADD_COMMENT,submitted:false,payload:comment.data});console.log(\"COMMENTS ACTION:\",comment.data);});};};export var editComment=function editComment(id,info){return function(dispatch){axios.patch(\"url\".concat(id),info).then(function(comment){return dispatch({type:EDIT_COMMENT,payload:comment.data});});};};export var deleteComment=function deleteComment(id,post_id,followee_id,content){return function(dispatch){axios.delete(\"http://localhost:3000/comments/\".concat(id)).then(dispatch({type:DELETE_COMMENT,id:id,post_id:post_id,followee_id:followee_id,content:content}));};};","map":{"version":3,"sources":["/Users/owner/Desktop/finalprojects/MyStagram/MyFront-end/src/redux/actions/CommentsActions.js"],"names":["REQUESTING","ADD_COMMENT","EDIT_COMMENT","DELETE_COMMENT","axios","url","addComment","info","dispatch","type","post","then","comment","submitted","payload","data","console","log","editComment","id","patch","deleteComment","post_id","followee_id","content","delete"],"mappings":"AAAA,OAASA,UAAT,CAAqBC,WAArB,CAAkCC,YAAlC,CAAgDC,cAAhD,KAAsE,SAAtE,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAGA,GAAMC,CAAAA,GAAG,CAAG,iCAAZ,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,QAAU,UAAAC,QAAQ,CAAI,CAE9CA,QAAQ,CAAC,CAAEC,IAAI,CAAET,UAAR,CAAD,CAAR,CACD,MAAOI,CAAAA,KAAK,CAACM,IAAN,CAAWL,GAAX,CAAgBE,IAAhB,EACHI,IADG,CACE,SAAAC,OAAO,CAAI,CAEfJ,QAAQ,CAAC,CAAEC,IAAI,CAAER,WAAR,CAAqBY,SAAS,CAAE,KAAhC,CAAuCC,OAAO,CAAEF,OAAO,CAACG,IAAxD,CAAD,CAAR,CACAC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAgCL,OAAO,CAACG,IAAxC,EACD,CALG,CAAP,CAMA,CATyB,EAAnB,CAWP,MAAO,IAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,EAAD,CAAKZ,IAAL,QAAc,UAAAC,QAAQ,CAAI,CAEnDJ,KAAK,CAACgB,KAAN,cAAkBD,EAAlB,EAAwBZ,IAAxB,EACGI,IADH,CACQ,SAAAC,OAAO,QAAIJ,CAAAA,QAAQ,CAAC,CAAEC,IAAI,CAAEP,YAAR,CAAsBY,OAAO,CAAEF,OAAO,CAACG,IAAvC,CAAD,CAAZ,EADf,EAED,CAJ0B,EAApB,CAOP,MAAO,IAAMM,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACF,EAAD,CAAKG,OAAL,CAAcC,WAAd,CAA2BC,OAA3B,QAAuC,UAAAhB,QAAQ,CAAI,CAE9EJ,KAAK,CAACqB,MAAN,0CAA+CN,EAA/C,GACGR,IADH,CACQH,QAAQ,CAAC,CAAEC,IAAI,CAAEN,cAAR,CAAwBgB,EAAE,CAAFA,EAAxB,CAA4BG,OAAO,CAAPA,OAA5B,CAAqCC,WAAW,CAAXA,WAArC,CAAkDC,OAAO,CAAPA,OAAlD,CAAD,CADhB,EAED,CAJ4B,EAAtB","sourcesContent":["import { REQUESTING, ADD_COMMENT, EDIT_COMMENT, DELETE_COMMENT } from './types';\nimport axios from 'axios'\n\n\nconst url = 'http://localhost:3000/comments/'\n\nexport const addComment = (info) => dispatch => {\n\n  dispatch({ type: REQUESTING })\n return axios.post(url, info)\n    .then(comment => {\n\n      dispatch({ type: ADD_COMMENT, submitted: false, payload: comment.data })\n      console.log(\"COMMENTS ACTION:\", comment.data);\n    })\n}\n\nexport const editComment = (id, info) => dispatch => {\n\n  axios.patch(`url${id}`, info)\n    .then(comment => dispatch({ type: EDIT_COMMENT, payload: comment.data }))\n}\n\n\nexport const deleteComment = (id, post_id, followee_id, content) => dispatch => {\n\n  axios.delete(`http://localhost:3000/comments/${id}`)\n    .then(dispatch({ type: DELETE_COMMENT, id, post_id, followee_id, content }))\n}\n\n"]},"metadata":{},"sourceType":"module"}