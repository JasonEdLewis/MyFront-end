{"ast":null,"code":"import axios from 'axios';\nimport { REQUEST_LOGIN, SUCCESSFUL_LOGIN, FAILED_LOGIN, LOG_OUT } from './types';\nexport const fetchLogin = info => dispatch => {\n  dispatch({\n    type: REQUEST_LOGIN\n  });\n  return axios.post(\"http://localhost:3000/login\", info).then(user => {\n    user.dta;\n    dispatch({\n      type: SUCCESSFUL_LOGIN,\n      payload: user.data.token\n    });\n  }).catch(err => {\n    debugger;\n    dispatch({\n      type: FAILED_LOGIN,\n      errorMessage: err\n    });\n  });\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOG_OUT\n  });\n};\nexport { fetchLogin as default };","map":{"version":3,"sources":["/Users/owner/Desktop/FlatIron/Mod_4/Project/MyStagram/MyFront-end/src/redux/actions/LoginActions.js"],"names":["axios","REQUEST_LOGIN","SUCCESSFUL_LOGIN","FAILED_LOGIN","LOG_OUT","fetchLogin","info","dispatch","type","post","then","user","dta","payload","data","token","catch","err","errorMessage","logout","default"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,EAA0CC,YAA1C,EAAwDC,OAAxD,QAAuE,SAAvE;AAGA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAWC,QAAQ,IAAI;AAC/CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACA,SAAOD,KAAK,CAACS,IAAN,CAAW,6BAAX,EAA0CH,IAA1C,EAAgDI,IAAhD,CAAqDC,IAAI,IAAI;AAClEA,IAAAA,IAAI,CAACC,GAAL;AACDL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,gBAAP;AAAyBW,MAAAA,OAAO,EAAEF,IAAI,CAACG,IAAL,CAAUC;AAA5C,KAAD,CAAR;AACA,GAHM,EAGJC,KAHI,CAGEC,GAAG,IAAI;AACd;AACAV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,YAAR;AAAsBe,MAAAA,YAAY,EAAED;AAApC,KAAD,CAAR;AACD,GANM,CAAP;AAOD,CATM;AAUP,OAAO,MAAME,MAAM,GAAE,MAAKZ,QAAQ,IAAG;AACpCA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACJ;AAAN,GAAD,CAAR;AACA,CAFM;AAOP,SACCC,UAAU,IAAIe,OADf","sourcesContent":["import axios from 'axios';\nimport { REQUEST_LOGIN, SUCCESSFUL_LOGIN, FAILED_LOGIN, LOG_OUT } from './types'\n\n\nexport const fetchLogin = (info) =>  dispatch => {\n  dispatch({ type: REQUEST_LOGIN })\n  return axios.post(\"http://localhost:3000/login\", info).then(user => {\n    user.dta\n   dispatch({type: SUCCESSFUL_LOGIN, payload: user.data.token })\n  }).catch(err => {\n    debugger\n    dispatch({ type: FAILED_LOGIN, errorMessage: err })\n  }) \n}\nexport const logout =()=> dispatch=> {\n dispatch({type:LOG_OUT })\n}\n\n\n\n\nexport {\n fetchLogin as default\n}"]},"metadata":{},"sourceType":"module"}